/* eslint-disable */
import { DocumentTypeDecoration } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  ByteArray: { input: any; output: any; }
  ContractAddress: { input: any; output: any; }
  Cursor: { input: any; output: any; }
  DateTime: { input: any; output: any; }
  Enum: { input: any; output: any; }
  bool: { input: any; output: any; }
  felt252: { input: any; output: any; }
  u8: { input: any; output: any; }
  u16: { input: any; output: any; }
  u32: { input: any; output: any; }
  u64: { input: any; output: any; }
  u128: { input: any; output: any; }
  u256: { input: any; output: any; }
};

export type Erc20__Token = {
  __typename?: 'ERC20__Token';
  amount: Scalars['String']['output'];
  contractAddress: Scalars['String']['output'];
  decimals: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  symbol: Scalars['String']['output'];
};

export type Erc721__Token = {
  __typename?: 'ERC721__Token';
  contractAddress: Scalars['String']['output'];
  imagePath: Scalars['String']['output'];
  metadata: Scalars['String']['output'];
  metadataAttributes?: Maybe<Scalars['String']['output']>;
  metadataDescription?: Maybe<Scalars['String']['output']>;
  metadataName?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  symbol: Scalars['String']['output'];
  tokenId: Scalars['String']['output'];
};

export type Erc__Token = Erc20__Token | Erc721__Token;

export type ModelUnion = Bodukan_EntryCount | Bodukan_GameCounter | Bodukan_GameMetadata | Bodukan_Leaderboard | Bodukan_PlatformMetrics | Bodukan_Prize | Bodukan_PrizeClaim | Bodukan_PrizeMetrics | Bodukan_Registration | Bodukan_Score | Bodukan_Settings | Bodukan_SettingsCounter | Bodukan_SettingsDetails | Bodukan_Token | Bodukan_TokenMetadata | Bodukan_Tournament | Bodukan_TournamentConfig | Bodukan_TournamentTokenMetrics | Budokan_1_0_6_EntryCount | Budokan_1_0_6_GameCounter | Budokan_1_0_6_GameMetadata | Budokan_1_0_6_Leaderboard | Budokan_1_0_6_PlatformMetrics | Budokan_1_0_6_Prize | Budokan_1_0_6_PrizeClaim | Budokan_1_0_6_PrizeMetrics | Budokan_1_0_6_QualificationEntries | Budokan_1_0_6_Registration | Budokan_1_0_6_Score | Budokan_1_0_6_Settings | Budokan_1_0_6_SettingsCounter | Budokan_1_0_6_SettingsDetails | Budokan_1_0_6_Token | Budokan_1_0_6_TokenMetadata | Budokan_1_0_6_Tournament | Budokan_1_0_6_TournamentConfig | Budokan_1_0_6_TournamentTokenMetrics | Budokan_EntryCount | Budokan_GameCounter | Budokan_GameMetadata | Budokan_Leaderboard | Budokan_PlatformMetrics | Budokan_Prize | Budokan_PrizeClaim | Budokan_PrizeMetrics | Budokan_Registration | Budokan_Score | Budokan_Settings | Budokan_SettingsCounter | Budokan_SettingsDetails | Budokan_Token | Budokan_TokenMetadata | Budokan_Tournament | Budokan_TournamentConfig | Budokan_TournamentTokenMetrics | Budokan_V_1_0_0_EntryCount | Budokan_V_1_0_0_GameCounter | Budokan_V_1_0_0_GameMetadata | Budokan_V_1_0_0_Leaderboard | Budokan_V_1_0_0_PlatformMetrics | Budokan_V_1_0_0_Prize | Budokan_V_1_0_0_PrizeClaim | Budokan_V_1_0_0_PrizeMetrics | Budokan_V_1_0_0_Registration | Budokan_V_1_0_0_Score | Budokan_V_1_0_0_Settings | Budokan_V_1_0_0_SettingsCounter | Budokan_V_1_0_0_SettingsDetails | Budokan_V_1_0_0_Token | Budokan_V_1_0_0_TokenMetadata | Budokan_V_1_0_0_Tournament | Budokan_V_1_0_0_TournamentConfig | Budokan_V_1_0_0_TournamentTokenMetrics | Budokan_V_1_0_1_EntryCount | Budokan_V_1_0_1_GameCounter | Budokan_V_1_0_1_GameMetadata | Budokan_V_1_0_1_Leaderboard | Budokan_V_1_0_1_PlatformMetrics | Budokan_V_1_0_1_Prize | Budokan_V_1_0_1_PrizeClaim | Budokan_V_1_0_1_PrizeMetrics | Budokan_V_1_0_1_Registration | Budokan_V_1_0_1_Score | Budokan_V_1_0_1_Settings | Budokan_V_1_0_1_SettingsCounter | Budokan_V_1_0_1_SettingsDetails | Budokan_V_1_0_1_Token | Budokan_V_1_0_1_TokenMetadata | Budokan_V_1_0_1_Tournament | Budokan_V_1_0_1_TournamentConfig | Budokan_V_1_0_1_TournamentTokenMetrics | Budokan_V_1_0_2_EntryCount | Budokan_V_1_0_2_GameCounter | Budokan_V_1_0_2_GameMetadata | Budokan_V_1_0_2_Leaderboard | Budokan_V_1_0_2_PlatformMetrics | Budokan_V_1_0_2_Prize | Budokan_V_1_0_2_PrizeClaim | Budokan_V_1_0_2_PrizeMetrics | Budokan_V_1_0_2_Registration | Budokan_V_1_0_2_Score | Budokan_V_1_0_2_Settings | Budokan_V_1_0_2_SettingsCounter | Budokan_V_1_0_2_SettingsDetails | Budokan_V_1_0_2_Token | Budokan_V_1_0_2_TokenMetadata | Budokan_V_1_0_2_Tournament | Budokan_V_1_0_2_TournamentConfig | Budokan_V_1_0_2_TournamentTokenMetrics | Budokan_V_1_0_4_EntryCount | Budokan_V_1_0_4_GameCounter | Budokan_V_1_0_4_GameMetadata | Budokan_V_1_0_4_Leaderboard | Budokan_V_1_0_4_PlatformMetrics | Budokan_V_1_0_4_Prize | Budokan_V_1_0_4_PrizeClaim | Budokan_V_1_0_4_PrizeMetrics | Budokan_V_1_0_4_QualificationEntries | Budokan_V_1_0_4_Registration | Budokan_V_1_0_4_Score | Budokan_V_1_0_4_Settings | Budokan_V_1_0_4_SettingsCounter | Budokan_V_1_0_4_SettingsDetails | Budokan_V_1_0_4_Token | Budokan_V_1_0_4_TokenMetadata | Budokan_V_1_0_4_Tournament | Budokan_V_1_0_4_TournamentConfig | Budokan_V_1_0_4_TournamentTokenMetrics | Budokan_V_1_0_5_EntryCount | Budokan_V_1_0_5_GameCounter | Budokan_V_1_0_5_GameMetadata | Budokan_V_1_0_5_Leaderboard | Budokan_V_1_0_5_PlatformMetrics | Budokan_V_1_0_5_Prize | Budokan_V_1_0_5_PrizeClaim | Budokan_V_1_0_5_PrizeMetrics | Budokan_V_1_0_5_QualificationEntries | Budokan_V_1_0_5_Registration | Budokan_V_1_0_5_Score | Budokan_V_1_0_5_Settings | Budokan_V_1_0_5_SettingsCounter | Budokan_V_1_0_5_SettingsDetails | Budokan_V_1_0_5_Token | Budokan_V_1_0_5_TokenMetadata | Budokan_V_1_0_5_Tournament | Budokan_V_1_0_5_TournamentConfig | Budokan_V_1_0_5_TournamentTokenMetrics | Budokan_V_1_0_6_EntryCount | Budokan_V_1_0_6_GameCounter | Budokan_V_1_0_6_GameMetadata | Budokan_V_1_0_6_Leaderboard | Budokan_V_1_0_6_PlatformMetrics | Budokan_V_1_0_6_Prize | Budokan_V_1_0_6_PrizeClaim | Budokan_V_1_0_6_PrizeMetrics | Budokan_V_1_0_6_QualificationEntries | Budokan_V_1_0_6_Registration | Budokan_V_1_0_6_Score | Budokan_V_1_0_6_Settings | Budokan_V_1_0_6_SettingsCounter | Budokan_V_1_0_6_SettingsDetails | Budokan_V_1_0_6_Token | Budokan_V_1_0_6_TokenMetadata | Budokan_V_1_0_6_Tournament | Budokan_V_1_0_6_TournamentConfig | Budokan_V_1_0_6_TournamentTokenMetrics | Darkshuffle_Battle | Darkshuffle_BattleEffects | Darkshuffle_Board | Darkshuffle_Donation | Darkshuffle_Draft | Darkshuffle_Game | Darkshuffle_GameEffects | Darkshuffle_Leaderboard | Darkshuffle_Map | Darkshuffle_PlayerReward | Darkshuffle_Season | Darkshuffle_S0_Battle | Darkshuffle_S0_Board | Darkshuffle_S0_Donation | Darkshuffle_S0_Draft | Darkshuffle_S0_Game | Darkshuffle_S0_GameEffects | Darkshuffle_S0_GameSettings | Darkshuffle_S0_GameStartEvent | Darkshuffle_S0_Leaderboard | Darkshuffle_S0_Map | Darkshuffle_S0_Season | Darkshuffle_S0_TrophyCreation | Darkshuffle_S0_TrophyProgression | Darkshuffle_S0_WorldConfig | Ds_Battle | Ds_Board | Ds_Draft | Ds_Game | Ds_GameActionEvent | Ds_GameCounter | Ds_GameEffects | Ds_GameMetadata | Ds_GameSettings | Ds_Map | Ds_Score | Ds_Settings | Ds_SettingsCounter | Ds_SettingsDetails | Ds_TokenMetadata | Ds_TrophyCreation | Ds_TrophyProgression | Ds_WorldConfig | Ds_V1_1_0_Battle | Ds_V1_1_0_Board | Ds_V1_1_0_Draft | Ds_V1_1_0_Game | Ds_V1_1_0_GameActionEvent | Ds_V1_1_0_GameCounter | Ds_V1_1_0_GameEffects | Ds_V1_1_0_GameMetadata | Ds_V1_1_0_GameSettings | Ds_V1_1_0_Map | Ds_V1_1_0_Score | Ds_V1_1_0_Settings | Ds_V1_1_0_SettingsCounter | Ds_V1_1_0_SettingsDetails | Ds_V1_1_0_TokenMetadata | Ds_V1_1_0_TrophyCreation | Ds_V1_1_0_TrophyProgression | Ds_V1_1_0_WorldConfig | Ds_V1_1_1_Battle | Ds_V1_1_1_Board | Ds_V1_1_1_Draft | Ds_V1_1_1_Game | Ds_V1_1_1_GameActionEvent | Ds_V1_1_1_GameCounter | Ds_V1_1_1_GameEffects | Ds_V1_1_1_GameMetadata | Ds_V1_1_1_GameSettings | Ds_V1_1_1_Map | Ds_V1_1_1_Score | Ds_V1_1_1_Settings | Ds_V1_1_1_SettingsCounter | Ds_V1_1_1_SettingsDetails | Ds_V1_1_1_TokenMetadata | Ds_V1_1_1_TrophyCreation | Ds_V1_1_1_TrophyProgression | Ds_V1_1_1_WorldConfig | Ds_V1_1_2_Battle | Ds_V1_1_2_Board | Ds_V1_1_2_Draft | Ds_V1_1_2_Game | Ds_V1_1_2_GameActionEvent | Ds_V1_1_2_GameCounter | Ds_V1_1_2_GameEffects | Ds_V1_1_2_GameMetadata | Ds_V1_1_2_GameSettings | Ds_V1_1_2_Map | Ds_V1_1_2_Score | Ds_V1_1_2_Settings | Ds_V1_1_2_SettingsCounter | Ds_V1_1_2_SettingsDetails | Ds_V1_1_2_TokenMetadata | Ds_V1_1_2_TrophyCreation | Ds_V1_1_2_TrophyProgression | Ds_V1_1_2_WorldConfig | Ds_V1_1_3_Battle | Ds_V1_1_3_Board | Ds_V1_1_3_Draft | Ds_V1_1_3_Game | Ds_V1_1_3_GameActionEvent | Ds_V1_1_3_GameCounter | Ds_V1_1_3_GameEffects | Ds_V1_1_3_GameMetadata | Ds_V1_1_3_GameSettings | Ds_V1_1_3_Map | Ds_V1_1_3_Score | Ds_V1_1_3_Settings | Ds_V1_1_3_SettingsCounter | Ds_V1_1_3_SettingsDetails | Ds_V1_1_3_TokenMetadata | Ds_V1_1_3_TrophyCreation | Ds_V1_1_3_TrophyProgression | Ds_V1_1_3_WorldConfig | Ds_V1_1_4_Battle | Ds_V1_1_4_Board | Ds_V1_1_4_Draft | Ds_V1_1_4_Game | Ds_V1_1_4_GameActionEvent | Ds_V1_1_4_GameCounter | Ds_V1_1_4_GameEffects | Ds_V1_1_4_GameMetadata | Ds_V1_1_4_GameSettings | Ds_V1_1_4_Map | Ds_V1_1_4_Score | Ds_V1_1_4_Settings | Ds_V1_1_4_SettingsCounter | Ds_V1_1_4_SettingsDetails | Ds_V1_1_4_TokenMetadata | Ds_V1_1_4_TrophyCreation | Ds_V1_1_4_TrophyProgression | Ds_V1_1_4_WorldConfig | Ds_V1_2_0_Battle | Ds_V1_2_0_BattleResources | Ds_V1_2_0_Card | Ds_V1_2_0_CardsCounter | Ds_V1_2_0_CreatureCard | Ds_V1_2_0_Draft | Ds_V1_2_0_Game | Ds_V1_2_0_GameActionEvent | Ds_V1_2_0_GameCounter | Ds_V1_2_0_GameEffects | Ds_V1_2_0_GameMetadata | Ds_V1_2_0_GameSettings | Ds_V1_2_0_GameSettingsMetadata | Ds_V1_2_0_Map | Ds_V1_2_0_Score | Ds_V1_2_0_Settings | Ds_V1_2_0_SettingsCounter | Ds_V1_2_0_SettingsDetails | Ds_V1_2_0_SpellCard | Ds_V1_2_0_TokenMetadata | Ds_V1_2_0_TrophyCreation | Ds_V1_2_0_TrophyProgression | Ls_Tournaments_V0_Token | Ls_Tournaments_V0_Tournament | Ls_Tournaments_V0_TournamentConfig | Ls_Tournaments_V0_TournamentEntries | Ls_Tournaments_V0_TournamentEntriesAddress | Ls_Tournaments_V0_TournamentEntryAddresses | Ls_Tournaments_V0_TournamentGame | Ls_Tournaments_V0_TournamentPrize | Ls_Tournaments_V0_TournamentScores | Ls_Tournaments_V0_TournamentStartsAddress | Ls_Tournaments_V0_TournamentTotals | Lst_Dbg_Token | Lst_Dbg_Tournament | Lst_Dbg_TournamentConfig | Lst_Dbg_TournamentEntries | Lst_Dbg_TournamentEntriesAddress | Lst_Dbg_TournamentEntryAddresses | Lst_Dbg_TournamentGame | Lst_Dbg_TournamentPrize | Lst_Dbg_TournamentScores | Lst_Dbg_TournamentStartsAddress | Lst_Dbg_TournamentTotals | Pg_EntryCount | Pg_GameCounter | Pg_GameMetadata | Pg_Leaderboard | Pg_PlatformMetrics | Pg_Prize | Pg_PrizeClaim | Pg_PrizeMetrics | Pg_Registration | Pg_Score | Pg_Settings | Pg_SettingsCounter | Pg_SettingsDetails | Pg_Token | Pg_TokenMetadata | Pg_Tournament | Pg_TournamentConfig | Pg_TournamentTokenMetrics | S0_Darkshuffle_Battle | S0_Darkshuffle_Board | S0_Darkshuffle_Donation | S0_Darkshuffle_Draft | S0_Darkshuffle_Game | S0_Darkshuffle_GameEffects | S0_Darkshuffle_GameSettings | S0_Darkshuffle_GameStartData | S0_Darkshuffle_GameStartEvent | S0_Darkshuffle_Leaderboard | S0_Darkshuffle_Map | S0_Darkshuffle_Season | S0_Darkshuffle_TrophyCreation | S0_Darkshuffle_TrophyProgression | S0_Darkshuffle_WorldConfig | S0_Eternum_AcceptOrder | S0_Eternum_AcceptPartialOrder | S0_Eternum_AddressName | S0_Eternum_Army | S0_Eternum_ArrivalTime | S0_Eternum_Bank | S0_Eternum_BankConfig | S0_Eternum_Battle | S0_Eternum_BattleClaimData | S0_Eternum_BattleConfig | S0_Eternum_BattleJoinData | S0_Eternum_BattleLeaveData | S0_Eternum_BattlePillageData | S0_Eternum_BattleStartData | S0_Eternum_Building | S0_Eternum_BuildingCategoryPopConfig | S0_Eternum_BuildingConfig | S0_Eternum_BuildingGeneralConfig | S0_Eternum_BuildingQuantityv2 | S0_Eternum_BurnDonkey | S0_Eternum_CancelOrder | S0_Eternum_CapacityCategory | S0_Eternum_CapacityConfig | S0_Eternum_Contribution | S0_Eternum_CreateGuild | S0_Eternum_CreateOrder | S0_Eternum_DetachedResource | S0_Eternum_EntityName | S0_Eternum_EntityOwner | S0_Eternum_Epoch | S0_Eternum_FragmentMineDiscovered | S0_Eternum_GameEnded | S0_Eternum_Guild | S0_Eternum_GuildMember | S0_Eternum_GuildWhitelist | S0_Eternum_Health | S0_Eternum_Hyperstructure | S0_Eternum_HyperstructureCoOwnersChange | S0_Eternum_HyperstructureConfig | S0_Eternum_HyperstructureContribution | S0_Eternum_HyperstructureFinished | S0_Eternum_HyperstructureResourceConfig | S0_Eternum_HyperstructureStarted | S0_Eternum_JoinGuild | S0_Eternum_Leaderboard | S0_Eternum_LeaderboardEntry | S0_Eternum_LeaderboardRegisterContribution | S0_Eternum_LeaderboardRegisterShare | S0_Eternum_LeaderboardRegistered | S0_Eternum_LeaderboardRewardClaimed | S0_Eternum_LevelingConfig | S0_Eternum_Liquidity | S0_Eternum_LiquidityEvent | S0_Eternum_MapConfig | S0_Eternum_MapExplored | S0_Eternum_Market | S0_Eternum_MercenariesConfig | S0_Eternum_Message | S0_Eternum_Movable | S0_Eternum_Orders | S0_Eternum_OwnedResourcesTracker | S0_Eternum_Owner | S0_Eternum_Population | S0_Eternum_PopulationConfig | S0_Eternum_Position | S0_Eternum_Production | S0_Eternum_ProductionConfig | S0_Eternum_ProductionDeadline | S0_Eternum_ProductionInput | S0_Eternum_ProductionOutput | S0_Eternum_Progress | S0_Eternum_Protectee | S0_Eternum_Protector | S0_Eternum_Quantity | S0_Eternum_QuantityTracker | S0_Eternum_Quest | S0_Eternum_QuestBonus | S0_Eternum_QuestConfig | S0_Eternum_QuestRewardConfig | S0_Eternum_Realm | S0_Eternum_RealmLevelConfig | S0_Eternum_RealmMaxLevelConfig | S0_Eternum_Resource | S0_Eternum_ResourceAllowance | S0_Eternum_ResourceBridgeConfig | S0_Eternum_ResourceBridgeFeeSplitConfig | S0_Eternum_ResourceBridgeWhitelistConfig | S0_Eternum_ResourceCost | S0_Eternum_ResourceTransferLock | S0_Eternum_Season | S0_Eternum_SeasonAddressesConfig | S0_Eternum_SeasonBridgeConfig | S0_Eternum_SettleRealmData | S0_Eternum_SettlementConfig | S0_Eternum_SpeedConfig | S0_Eternum_Stamina | S0_Eternum_StaminaConfig | S0_Eternum_StaminaRefillConfig | S0_Eternum_Status | S0_Eternum_Structure | S0_Eternum_StructureCount | S0_Eternum_SwapEvent | S0_Eternum_TickConfig | S0_Eternum_Tile | S0_Eternum_Trade | S0_Eternum_Transfer | S0_Eternum_Travel | S0_Eternum_TravelFoodCostConfig | S0_Eternum_TravelStaminaCostConfig | S0_Eternum_TroopConfig | S0_Eternum_TrophyCreation | S0_Eternum_TrophyProgression | S0_Eternum_VrfConfig | S0_Eternum_Weight | S0_Eternum_WeightConfig | S0_Eternum_WorldConfig;

export enum OrderDirection {
  Asc = 'ASC',
  Desc = 'DESC'
}

export type Token__Balance = {
  __typename?: 'Token__Balance';
  tokenMetadata: Erc__Token;
};

export type Token__BalanceConnection = {
  __typename?: 'Token__BalanceConnection';
  edges?: Maybe<Array<Maybe<Token__BalanceEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Token__BalanceEdge = {
  __typename?: 'Token__BalanceEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Token__Balance>;
};

export type Token__Transfer = {
  __typename?: 'Token__Transfer';
  executedAt: Scalars['String']['output'];
  from: Scalars['String']['output'];
  to: Scalars['String']['output'];
  tokenMetadata: Erc__Token;
  transactionHash: Scalars['String']['output'];
};

export type Token__TransferConnection = {
  __typename?: 'Token__TransferConnection';
  edges?: Maybe<Array<Maybe<Token__TransferEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Token__TransferEdge = {
  __typename?: 'Token__TransferEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Token__Transfer>;
};

export type World__Content = {
  __typename?: 'World__Content';
  coverUri?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  iconUri?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  socials?: Maybe<Array<Maybe<World__Social>>>;
  website?: Maybe<Scalars['String']['output']>;
};

export type World__Entity = {
  __typename?: 'World__Entity';
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  eventId?: Maybe<Scalars['String']['output']>;
  executedAt?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  keys?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  models?: Maybe<Array<Maybe<ModelUnion>>>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};

export type World__EntityConnection = {
  __typename?: 'World__EntityConnection';
  edges?: Maybe<Array<Maybe<World__EntityEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type World__EntityEdge = {
  __typename?: 'World__EntityEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<World__Entity>;
};

export type World__Event = {
  __typename?: 'World__Event';
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  data?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  executedAt?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  keys?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  transactionHash?: Maybe<Scalars['String']['output']>;
};

export type World__EventConnection = {
  __typename?: 'World__EventConnection';
  edges?: Maybe<Array<Maybe<World__EventEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type World__EventEdge = {
  __typename?: 'World__EventEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<World__Event>;
};

export type World__EventMessage = {
  __typename?: 'World__EventMessage';
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  eventId?: Maybe<Scalars['String']['output']>;
  executedAt?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  keys?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  models?: Maybe<Array<Maybe<ModelUnion>>>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};

export type World__EventMessageConnection = {
  __typename?: 'World__EventMessageConnection';
  edges?: Maybe<Array<Maybe<World__EventMessageEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type World__EventMessageEdge = {
  __typename?: 'World__EventMessageEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<World__EventMessage>;
};

export type World__Metadata = {
  __typename?: 'World__Metadata';
  content?: Maybe<World__Content>;
  coverImg?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  executedAt?: Maybe<Scalars['DateTime']['output']>;
  iconImg?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  uri?: Maybe<Scalars['String']['output']>;
  worldAddress: Scalars['String']['output'];
};

export type World__MetadataConnection = {
  __typename?: 'World__MetadataConnection';
  edges?: Maybe<Array<Maybe<World__MetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type World__MetadataEdge = {
  __typename?: 'World__MetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<World__Metadata>;
};

export type World__Model = {
  __typename?: 'World__Model';
  classHash?: Maybe<Scalars['felt252']['output']>;
  contractAddress?: Maybe<Scalars['felt252']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  executedAt?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  namespace?: Maybe<Scalars['String']['output']>;
  transactionHash?: Maybe<Scalars['felt252']['output']>;
};

export type World__ModelConnection = {
  __typename?: 'World__ModelConnection';
  edges?: Maybe<Array<Maybe<World__ModelEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type World__ModelEdge = {
  __typename?: 'World__ModelEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<World__Model>;
};

export type World__ModelOrder = {
  direction: OrderDirection;
  field: World__ModelOrderField;
};

export enum World__ModelOrderField {
  ClassHash = 'CLASS_HASH',
  Name = 'NAME'
}

export type World__PageInfo = {
  __typename?: 'World__PageInfo';
  endCursor?: Maybe<Scalars['Cursor']['output']>;
  hasNextPage: Scalars['Boolean']['output'];
  hasPreviousPage: Scalars['Boolean']['output'];
  startCursor?: Maybe<Scalars['Cursor']['output']>;
};

export type World__Query = {
  __typename?: 'World__Query';
  bodukanEntryCountModels?: Maybe<Bodukan_EntryCountConnection>;
  bodukanGameCounterModels?: Maybe<Bodukan_GameCounterConnection>;
  bodukanGameMetadataModels?: Maybe<Bodukan_GameMetadataConnection>;
  bodukanLeaderboardModels?: Maybe<Bodukan_LeaderboardConnection>;
  bodukanPlatformMetricsModels?: Maybe<Bodukan_PlatformMetricsConnection>;
  bodukanPrizeClaimModels?: Maybe<Bodukan_PrizeClaimConnection>;
  bodukanPrizeMetricsModels?: Maybe<Bodukan_PrizeMetricsConnection>;
  bodukanPrizeModels?: Maybe<Bodukan_PrizeConnection>;
  bodukanRegistrationModels?: Maybe<Bodukan_RegistrationConnection>;
  bodukanScoreModels?: Maybe<Bodukan_ScoreConnection>;
  bodukanSettingsCounterModels?: Maybe<Bodukan_SettingsCounterConnection>;
  bodukanSettingsDetailsModels?: Maybe<Bodukan_SettingsDetailsConnection>;
  bodukanSettingsModels?: Maybe<Bodukan_SettingsConnection>;
  bodukanTokenMetadataModels?: Maybe<Bodukan_TokenMetadataConnection>;
  bodukanTokenModels?: Maybe<Bodukan_TokenConnection>;
  bodukanTournamentConfigModels?: Maybe<Bodukan_TournamentConfigConnection>;
  bodukanTournamentModels?: Maybe<Bodukan_TournamentConnection>;
  bodukanTournamentTokenMetricsModels?: Maybe<Bodukan_TournamentTokenMetricsConnection>;
  budokan106EntryCountModels?: Maybe<Budokan_1_0_6_EntryCountConnection>;
  budokan106GameCounterModels?: Maybe<Budokan_1_0_6_GameCounterConnection>;
  budokan106GameMetadataModels?: Maybe<Budokan_1_0_6_GameMetadataConnection>;
  budokan106LeaderboardModels?: Maybe<Budokan_1_0_6_LeaderboardConnection>;
  budokan106PlatformMetricsModels?: Maybe<Budokan_1_0_6_PlatformMetricsConnection>;
  budokan106PrizeClaimModels?: Maybe<Budokan_1_0_6_PrizeClaimConnection>;
  budokan106PrizeMetricsModels?: Maybe<Budokan_1_0_6_PrizeMetricsConnection>;
  budokan106PrizeModels?: Maybe<Budokan_1_0_6_PrizeConnection>;
  budokan106QualificationEntriesModels?: Maybe<Budokan_1_0_6_QualificationEntriesConnection>;
  budokan106RegistrationModels?: Maybe<Budokan_1_0_6_RegistrationConnection>;
  budokan106ScoreModels?: Maybe<Budokan_1_0_6_ScoreConnection>;
  budokan106SettingsCounterModels?: Maybe<Budokan_1_0_6_SettingsCounterConnection>;
  budokan106SettingsDetailsModels?: Maybe<Budokan_1_0_6_SettingsDetailsConnection>;
  budokan106SettingsModels?: Maybe<Budokan_1_0_6_SettingsConnection>;
  budokan106TokenMetadataModels?: Maybe<Budokan_1_0_6_TokenMetadataConnection>;
  budokan106TokenModels?: Maybe<Budokan_1_0_6_TokenConnection>;
  budokan106TournamentConfigModels?: Maybe<Budokan_1_0_6_TournamentConfigConnection>;
  budokan106TournamentModels?: Maybe<Budokan_1_0_6_TournamentConnection>;
  budokan106TournamentTokenMetricsModels?: Maybe<Budokan_1_0_6_TournamentTokenMetricsConnection>;
  budokanEntryCountModels?: Maybe<Budokan_EntryCountConnection>;
  budokanGameCounterModels?: Maybe<Budokan_GameCounterConnection>;
  budokanGameMetadataModels?: Maybe<Budokan_GameMetadataConnection>;
  budokanLeaderboardModels?: Maybe<Budokan_LeaderboardConnection>;
  budokanPlatformMetricsModels?: Maybe<Budokan_PlatformMetricsConnection>;
  budokanPrizeClaimModels?: Maybe<Budokan_PrizeClaimConnection>;
  budokanPrizeMetricsModels?: Maybe<Budokan_PrizeMetricsConnection>;
  budokanPrizeModels?: Maybe<Budokan_PrizeConnection>;
  budokanRegistrationModels?: Maybe<Budokan_RegistrationConnection>;
  budokanScoreModels?: Maybe<Budokan_ScoreConnection>;
  budokanSettingsCounterModels?: Maybe<Budokan_SettingsCounterConnection>;
  budokanSettingsDetailsModels?: Maybe<Budokan_SettingsDetailsConnection>;
  budokanSettingsModels?: Maybe<Budokan_SettingsConnection>;
  budokanTokenMetadataModels?: Maybe<Budokan_TokenMetadataConnection>;
  budokanTokenModels?: Maybe<Budokan_TokenConnection>;
  budokanTournamentConfigModels?: Maybe<Budokan_TournamentConfigConnection>;
  budokanTournamentModels?: Maybe<Budokan_TournamentConnection>;
  budokanTournamentTokenMetricsModels?: Maybe<Budokan_TournamentTokenMetricsConnection>;
  budokanV100EntryCountModels?: Maybe<Budokan_V_1_0_0_EntryCountConnection>;
  budokanV100GameCounterModels?: Maybe<Budokan_V_1_0_0_GameCounterConnection>;
  budokanV100GameMetadataModels?: Maybe<Budokan_V_1_0_0_GameMetadataConnection>;
  budokanV100LeaderboardModels?: Maybe<Budokan_V_1_0_0_LeaderboardConnection>;
  budokanV100PlatformMetricsModels?: Maybe<Budokan_V_1_0_0_PlatformMetricsConnection>;
  budokanV100PrizeClaimModels?: Maybe<Budokan_V_1_0_0_PrizeClaimConnection>;
  budokanV100PrizeMetricsModels?: Maybe<Budokan_V_1_0_0_PrizeMetricsConnection>;
  budokanV100PrizeModels?: Maybe<Budokan_V_1_0_0_PrizeConnection>;
  budokanV100RegistrationModels?: Maybe<Budokan_V_1_0_0_RegistrationConnection>;
  budokanV100ScoreModels?: Maybe<Budokan_V_1_0_0_ScoreConnection>;
  budokanV100SettingsCounterModels?: Maybe<Budokan_V_1_0_0_SettingsCounterConnection>;
  budokanV100SettingsDetailsModels?: Maybe<Budokan_V_1_0_0_SettingsDetailsConnection>;
  budokanV100SettingsModels?: Maybe<Budokan_V_1_0_0_SettingsConnection>;
  budokanV100TokenMetadataModels?: Maybe<Budokan_V_1_0_0_TokenMetadataConnection>;
  budokanV100TokenModels?: Maybe<Budokan_V_1_0_0_TokenConnection>;
  budokanV100TournamentConfigModels?: Maybe<Budokan_V_1_0_0_TournamentConfigConnection>;
  budokanV100TournamentModels?: Maybe<Budokan_V_1_0_0_TournamentConnection>;
  budokanV100TournamentTokenMetricsModels?: Maybe<Budokan_V_1_0_0_TournamentTokenMetricsConnection>;
  budokanV101EntryCountModels?: Maybe<Budokan_V_1_0_1_EntryCountConnection>;
  budokanV101GameCounterModels?: Maybe<Budokan_V_1_0_1_GameCounterConnection>;
  budokanV101GameMetadataModels?: Maybe<Budokan_V_1_0_1_GameMetadataConnection>;
  budokanV101LeaderboardModels?: Maybe<Budokan_V_1_0_1_LeaderboardConnection>;
  budokanV101PlatformMetricsModels?: Maybe<Budokan_V_1_0_1_PlatformMetricsConnection>;
  budokanV101PrizeClaimModels?: Maybe<Budokan_V_1_0_1_PrizeClaimConnection>;
  budokanV101PrizeMetricsModels?: Maybe<Budokan_V_1_0_1_PrizeMetricsConnection>;
  budokanV101PrizeModels?: Maybe<Budokan_V_1_0_1_PrizeConnection>;
  budokanV101RegistrationModels?: Maybe<Budokan_V_1_0_1_RegistrationConnection>;
  budokanV101ScoreModels?: Maybe<Budokan_V_1_0_1_ScoreConnection>;
  budokanV101SettingsCounterModels?: Maybe<Budokan_V_1_0_1_SettingsCounterConnection>;
  budokanV101SettingsDetailsModels?: Maybe<Budokan_V_1_0_1_SettingsDetailsConnection>;
  budokanV101SettingsModels?: Maybe<Budokan_V_1_0_1_SettingsConnection>;
  budokanV101TokenMetadataModels?: Maybe<Budokan_V_1_0_1_TokenMetadataConnection>;
  budokanV101TokenModels?: Maybe<Budokan_V_1_0_1_TokenConnection>;
  budokanV101TournamentConfigModels?: Maybe<Budokan_V_1_0_1_TournamentConfigConnection>;
  budokanV101TournamentModels?: Maybe<Budokan_V_1_0_1_TournamentConnection>;
  budokanV101TournamentTokenMetricsModels?: Maybe<Budokan_V_1_0_1_TournamentTokenMetricsConnection>;
  budokanV102EntryCountModels?: Maybe<Budokan_V_1_0_2_EntryCountConnection>;
  budokanV102GameCounterModels?: Maybe<Budokan_V_1_0_2_GameCounterConnection>;
  budokanV102GameMetadataModels?: Maybe<Budokan_V_1_0_2_GameMetadataConnection>;
  budokanV102LeaderboardModels?: Maybe<Budokan_V_1_0_2_LeaderboardConnection>;
  budokanV102PlatformMetricsModels?: Maybe<Budokan_V_1_0_2_PlatformMetricsConnection>;
  budokanV102PrizeClaimModels?: Maybe<Budokan_V_1_0_2_PrizeClaimConnection>;
  budokanV102PrizeMetricsModels?: Maybe<Budokan_V_1_0_2_PrizeMetricsConnection>;
  budokanV102PrizeModels?: Maybe<Budokan_V_1_0_2_PrizeConnection>;
  budokanV102RegistrationModels?: Maybe<Budokan_V_1_0_2_RegistrationConnection>;
  budokanV102ScoreModels?: Maybe<Budokan_V_1_0_2_ScoreConnection>;
  budokanV102SettingsCounterModels?: Maybe<Budokan_V_1_0_2_SettingsCounterConnection>;
  budokanV102SettingsDetailsModels?: Maybe<Budokan_V_1_0_2_SettingsDetailsConnection>;
  budokanV102SettingsModels?: Maybe<Budokan_V_1_0_2_SettingsConnection>;
  budokanV102TokenMetadataModels?: Maybe<Budokan_V_1_0_2_TokenMetadataConnection>;
  budokanV102TokenModels?: Maybe<Budokan_V_1_0_2_TokenConnection>;
  budokanV102TournamentConfigModels?: Maybe<Budokan_V_1_0_2_TournamentConfigConnection>;
  budokanV102TournamentModels?: Maybe<Budokan_V_1_0_2_TournamentConnection>;
  budokanV102TournamentTokenMetricsModels?: Maybe<Budokan_V_1_0_2_TournamentTokenMetricsConnection>;
  budokanV104EntryCountModels?: Maybe<Budokan_V_1_0_4_EntryCountConnection>;
  budokanV104GameCounterModels?: Maybe<Budokan_V_1_0_4_GameCounterConnection>;
  budokanV104GameMetadataModels?: Maybe<Budokan_V_1_0_4_GameMetadataConnection>;
  budokanV104LeaderboardModels?: Maybe<Budokan_V_1_0_4_LeaderboardConnection>;
  budokanV104PlatformMetricsModels?: Maybe<Budokan_V_1_0_4_PlatformMetricsConnection>;
  budokanV104PrizeClaimModels?: Maybe<Budokan_V_1_0_4_PrizeClaimConnection>;
  budokanV104PrizeMetricsModels?: Maybe<Budokan_V_1_0_4_PrizeMetricsConnection>;
  budokanV104PrizeModels?: Maybe<Budokan_V_1_0_4_PrizeConnection>;
  budokanV104QualificationEntriesModels?: Maybe<Budokan_V_1_0_4_QualificationEntriesConnection>;
  budokanV104RegistrationModels?: Maybe<Budokan_V_1_0_4_RegistrationConnection>;
  budokanV104ScoreModels?: Maybe<Budokan_V_1_0_4_ScoreConnection>;
  budokanV104SettingsCounterModels?: Maybe<Budokan_V_1_0_4_SettingsCounterConnection>;
  budokanV104SettingsDetailsModels?: Maybe<Budokan_V_1_0_4_SettingsDetailsConnection>;
  budokanV104SettingsModels?: Maybe<Budokan_V_1_0_4_SettingsConnection>;
  budokanV104TokenMetadataModels?: Maybe<Budokan_V_1_0_4_TokenMetadataConnection>;
  budokanV104TokenModels?: Maybe<Budokan_V_1_0_4_TokenConnection>;
  budokanV104TournamentConfigModels?: Maybe<Budokan_V_1_0_4_TournamentConfigConnection>;
  budokanV104TournamentModels?: Maybe<Budokan_V_1_0_4_TournamentConnection>;
  budokanV104TournamentTokenMetricsModels?: Maybe<Budokan_V_1_0_4_TournamentTokenMetricsConnection>;
  budokanV105EntryCountModels?: Maybe<Budokan_V_1_0_5_EntryCountConnection>;
  budokanV105GameCounterModels?: Maybe<Budokan_V_1_0_5_GameCounterConnection>;
  budokanV105GameMetadataModels?: Maybe<Budokan_V_1_0_5_GameMetadataConnection>;
  budokanV105LeaderboardModels?: Maybe<Budokan_V_1_0_5_LeaderboardConnection>;
  budokanV105PlatformMetricsModels?: Maybe<Budokan_V_1_0_5_PlatformMetricsConnection>;
  budokanV105PrizeClaimModels?: Maybe<Budokan_V_1_0_5_PrizeClaimConnection>;
  budokanV105PrizeMetricsModels?: Maybe<Budokan_V_1_0_5_PrizeMetricsConnection>;
  budokanV105PrizeModels?: Maybe<Budokan_V_1_0_5_PrizeConnection>;
  budokanV105QualificationEntriesModels?: Maybe<Budokan_V_1_0_5_QualificationEntriesConnection>;
  budokanV105RegistrationModels?: Maybe<Budokan_V_1_0_5_RegistrationConnection>;
  budokanV105ScoreModels?: Maybe<Budokan_V_1_0_5_ScoreConnection>;
  budokanV105SettingsCounterModels?: Maybe<Budokan_V_1_0_5_SettingsCounterConnection>;
  budokanV105SettingsDetailsModels?: Maybe<Budokan_V_1_0_5_SettingsDetailsConnection>;
  budokanV105SettingsModels?: Maybe<Budokan_V_1_0_5_SettingsConnection>;
  budokanV105TokenMetadataModels?: Maybe<Budokan_V_1_0_5_TokenMetadataConnection>;
  budokanV105TokenModels?: Maybe<Budokan_V_1_0_5_TokenConnection>;
  budokanV105TournamentConfigModels?: Maybe<Budokan_V_1_0_5_TournamentConfigConnection>;
  budokanV105TournamentModels?: Maybe<Budokan_V_1_0_5_TournamentConnection>;
  budokanV105TournamentTokenMetricsModels?: Maybe<Budokan_V_1_0_5_TournamentTokenMetricsConnection>;
  budokanV106EntryCountModels?: Maybe<Budokan_V_1_0_6_EntryCountConnection>;
  budokanV106GameCounterModels?: Maybe<Budokan_V_1_0_6_GameCounterConnection>;
  budokanV106GameMetadataModels?: Maybe<Budokan_V_1_0_6_GameMetadataConnection>;
  budokanV106LeaderboardModels?: Maybe<Budokan_V_1_0_6_LeaderboardConnection>;
  budokanV106PlatformMetricsModels?: Maybe<Budokan_V_1_0_6_PlatformMetricsConnection>;
  budokanV106PrizeClaimModels?: Maybe<Budokan_V_1_0_6_PrizeClaimConnection>;
  budokanV106PrizeMetricsModels?: Maybe<Budokan_V_1_0_6_PrizeMetricsConnection>;
  budokanV106PrizeModels?: Maybe<Budokan_V_1_0_6_PrizeConnection>;
  budokanV106QualificationEntriesModels?: Maybe<Budokan_V_1_0_6_QualificationEntriesConnection>;
  budokanV106RegistrationModels?: Maybe<Budokan_V_1_0_6_RegistrationConnection>;
  budokanV106ScoreModels?: Maybe<Budokan_V_1_0_6_ScoreConnection>;
  budokanV106SettingsCounterModels?: Maybe<Budokan_V_1_0_6_SettingsCounterConnection>;
  budokanV106SettingsDetailsModels?: Maybe<Budokan_V_1_0_6_SettingsDetailsConnection>;
  budokanV106SettingsModels?: Maybe<Budokan_V_1_0_6_SettingsConnection>;
  budokanV106TokenMetadataModels?: Maybe<Budokan_V_1_0_6_TokenMetadataConnection>;
  budokanV106TokenModels?: Maybe<Budokan_V_1_0_6_TokenConnection>;
  budokanV106TournamentConfigModels?: Maybe<Budokan_V_1_0_6_TournamentConfigConnection>;
  budokanV106TournamentModels?: Maybe<Budokan_V_1_0_6_TournamentConnection>;
  budokanV106TournamentTokenMetricsModels?: Maybe<Budokan_V_1_0_6_TournamentTokenMetricsConnection>;
  darkshuffleBattleEffectsModels?: Maybe<Darkshuffle_BattleEffectsConnection>;
  darkshuffleBattleModels?: Maybe<Darkshuffle_BattleConnection>;
  darkshuffleBoardModels?: Maybe<Darkshuffle_BoardConnection>;
  darkshuffleDonationModels?: Maybe<Darkshuffle_DonationConnection>;
  darkshuffleDraftModels?: Maybe<Darkshuffle_DraftConnection>;
  darkshuffleGameEffectsModels?: Maybe<Darkshuffle_GameEffectsConnection>;
  darkshuffleGameModels?: Maybe<Darkshuffle_GameConnection>;
  darkshuffleLeaderboardModels?: Maybe<Darkshuffle_LeaderboardConnection>;
  darkshuffleMapModels?: Maybe<Darkshuffle_MapConnection>;
  darkshufflePlayerRewardModels?: Maybe<Darkshuffle_PlayerRewardConnection>;
  darkshuffleS0BattleModels?: Maybe<Darkshuffle_S0_BattleConnection>;
  darkshuffleS0BoardModels?: Maybe<Darkshuffle_S0_BoardConnection>;
  darkshuffleS0DonationModels?: Maybe<Darkshuffle_S0_DonationConnection>;
  darkshuffleS0DraftModels?: Maybe<Darkshuffle_S0_DraftConnection>;
  darkshuffleS0GameEffectsModels?: Maybe<Darkshuffle_S0_GameEffectsConnection>;
  darkshuffleS0GameModels?: Maybe<Darkshuffle_S0_GameConnection>;
  darkshuffleS0GameSettingsModels?: Maybe<Darkshuffle_S0_GameSettingsConnection>;
  darkshuffleS0GameStartEventModels?: Maybe<Darkshuffle_S0_GameStartEventConnection>;
  darkshuffleS0LeaderboardModels?: Maybe<Darkshuffle_S0_LeaderboardConnection>;
  darkshuffleS0MapModels?: Maybe<Darkshuffle_S0_MapConnection>;
  darkshuffleS0SeasonModels?: Maybe<Darkshuffle_S0_SeasonConnection>;
  darkshuffleS0TrophyCreationModels?: Maybe<Darkshuffle_S0_TrophyCreationConnection>;
  darkshuffleS0TrophyProgressionModels?: Maybe<Darkshuffle_S0_TrophyProgressionConnection>;
  darkshuffleS0WorldConfigModels?: Maybe<Darkshuffle_S0_WorldConfigConnection>;
  darkshuffleSeasonModels?: Maybe<Darkshuffle_SeasonConnection>;
  dsBattleModels?: Maybe<Ds_BattleConnection>;
  dsBoardModels?: Maybe<Ds_BoardConnection>;
  dsDraftModels?: Maybe<Ds_DraftConnection>;
  dsGameActionEventModels?: Maybe<Ds_GameActionEventConnection>;
  dsGameCounterModels?: Maybe<Ds_GameCounterConnection>;
  dsGameEffectsModels?: Maybe<Ds_GameEffectsConnection>;
  dsGameMetadataModels?: Maybe<Ds_GameMetadataConnection>;
  dsGameModels?: Maybe<Ds_GameConnection>;
  dsGameSettingsModels?: Maybe<Ds_GameSettingsConnection>;
  dsMapModels?: Maybe<Ds_MapConnection>;
  dsScoreModels?: Maybe<Ds_ScoreConnection>;
  dsSettingsCounterModels?: Maybe<Ds_SettingsCounterConnection>;
  dsSettingsDetailsModels?: Maybe<Ds_SettingsDetailsConnection>;
  dsSettingsModels?: Maybe<Ds_SettingsConnection>;
  dsTokenMetadataModels?: Maybe<Ds_TokenMetadataConnection>;
  dsTrophyCreationModels?: Maybe<Ds_TrophyCreationConnection>;
  dsTrophyProgressionModels?: Maybe<Ds_TrophyProgressionConnection>;
  dsV110BattleModels?: Maybe<Ds_V1_1_0_BattleConnection>;
  dsV110BoardModels?: Maybe<Ds_V1_1_0_BoardConnection>;
  dsV110DraftModels?: Maybe<Ds_V1_1_0_DraftConnection>;
  dsV110GameActionEventModels?: Maybe<Ds_V1_1_0_GameActionEventConnection>;
  dsV110GameCounterModels?: Maybe<Ds_V1_1_0_GameCounterConnection>;
  dsV110GameEffectsModels?: Maybe<Ds_V1_1_0_GameEffectsConnection>;
  dsV110GameMetadataModels?: Maybe<Ds_V1_1_0_GameMetadataConnection>;
  dsV110GameModels?: Maybe<Ds_V1_1_0_GameConnection>;
  dsV110GameSettingsModels?: Maybe<Ds_V1_1_0_GameSettingsConnection>;
  dsV110MapModels?: Maybe<Ds_V1_1_0_MapConnection>;
  dsV110ScoreModels?: Maybe<Ds_V1_1_0_ScoreConnection>;
  dsV110SettingsCounterModels?: Maybe<Ds_V1_1_0_SettingsCounterConnection>;
  dsV110SettingsDetailsModels?: Maybe<Ds_V1_1_0_SettingsDetailsConnection>;
  dsV110SettingsModels?: Maybe<Ds_V1_1_0_SettingsConnection>;
  dsV110TokenMetadataModels?: Maybe<Ds_V1_1_0_TokenMetadataConnection>;
  dsV110TrophyCreationModels?: Maybe<Ds_V1_1_0_TrophyCreationConnection>;
  dsV110TrophyProgressionModels?: Maybe<Ds_V1_1_0_TrophyProgressionConnection>;
  dsV110WorldConfigModels?: Maybe<Ds_V1_1_0_WorldConfigConnection>;
  dsV111BattleModels?: Maybe<Ds_V1_1_1_BattleConnection>;
  dsV111BoardModels?: Maybe<Ds_V1_1_1_BoardConnection>;
  dsV111DraftModels?: Maybe<Ds_V1_1_1_DraftConnection>;
  dsV111GameActionEventModels?: Maybe<Ds_V1_1_1_GameActionEventConnection>;
  dsV111GameCounterModels?: Maybe<Ds_V1_1_1_GameCounterConnection>;
  dsV111GameEffectsModels?: Maybe<Ds_V1_1_1_GameEffectsConnection>;
  dsV111GameMetadataModels?: Maybe<Ds_V1_1_1_GameMetadataConnection>;
  dsV111GameModels?: Maybe<Ds_V1_1_1_GameConnection>;
  dsV111GameSettingsModels?: Maybe<Ds_V1_1_1_GameSettingsConnection>;
  dsV111MapModels?: Maybe<Ds_V1_1_1_MapConnection>;
  dsV111ScoreModels?: Maybe<Ds_V1_1_1_ScoreConnection>;
  dsV111SettingsCounterModels?: Maybe<Ds_V1_1_1_SettingsCounterConnection>;
  dsV111SettingsDetailsModels?: Maybe<Ds_V1_1_1_SettingsDetailsConnection>;
  dsV111SettingsModels?: Maybe<Ds_V1_1_1_SettingsConnection>;
  dsV111TokenMetadataModels?: Maybe<Ds_V1_1_1_TokenMetadataConnection>;
  dsV111TrophyCreationModels?: Maybe<Ds_V1_1_1_TrophyCreationConnection>;
  dsV111TrophyProgressionModels?: Maybe<Ds_V1_1_1_TrophyProgressionConnection>;
  dsV111WorldConfigModels?: Maybe<Ds_V1_1_1_WorldConfigConnection>;
  dsV112BattleModels?: Maybe<Ds_V1_1_2_BattleConnection>;
  dsV112BoardModels?: Maybe<Ds_V1_1_2_BoardConnection>;
  dsV112DraftModels?: Maybe<Ds_V1_1_2_DraftConnection>;
  dsV112GameActionEventModels?: Maybe<Ds_V1_1_2_GameActionEventConnection>;
  dsV112GameCounterModels?: Maybe<Ds_V1_1_2_GameCounterConnection>;
  dsV112GameEffectsModels?: Maybe<Ds_V1_1_2_GameEffectsConnection>;
  dsV112GameMetadataModels?: Maybe<Ds_V1_1_2_GameMetadataConnection>;
  dsV112GameModels?: Maybe<Ds_V1_1_2_GameConnection>;
  dsV112GameSettingsModels?: Maybe<Ds_V1_1_2_GameSettingsConnection>;
  dsV112MapModels?: Maybe<Ds_V1_1_2_MapConnection>;
  dsV112ScoreModels?: Maybe<Ds_V1_1_2_ScoreConnection>;
  dsV112SettingsCounterModels?: Maybe<Ds_V1_1_2_SettingsCounterConnection>;
  dsV112SettingsDetailsModels?: Maybe<Ds_V1_1_2_SettingsDetailsConnection>;
  dsV112SettingsModels?: Maybe<Ds_V1_1_2_SettingsConnection>;
  dsV112TokenMetadataModels?: Maybe<Ds_V1_1_2_TokenMetadataConnection>;
  dsV112TrophyCreationModels?: Maybe<Ds_V1_1_2_TrophyCreationConnection>;
  dsV112TrophyProgressionModels?: Maybe<Ds_V1_1_2_TrophyProgressionConnection>;
  dsV112WorldConfigModels?: Maybe<Ds_V1_1_2_WorldConfigConnection>;
  dsV113BattleModels?: Maybe<Ds_V1_1_3_BattleConnection>;
  dsV113BoardModels?: Maybe<Ds_V1_1_3_BoardConnection>;
  dsV113DraftModels?: Maybe<Ds_V1_1_3_DraftConnection>;
  dsV113GameActionEventModels?: Maybe<Ds_V1_1_3_GameActionEventConnection>;
  dsV113GameCounterModels?: Maybe<Ds_V1_1_3_GameCounterConnection>;
  dsV113GameEffectsModels?: Maybe<Ds_V1_1_3_GameEffectsConnection>;
  dsV113GameMetadataModels?: Maybe<Ds_V1_1_3_GameMetadataConnection>;
  dsV113GameModels?: Maybe<Ds_V1_1_3_GameConnection>;
  dsV113GameSettingsModels?: Maybe<Ds_V1_1_3_GameSettingsConnection>;
  dsV113MapModels?: Maybe<Ds_V1_1_3_MapConnection>;
  dsV113ScoreModels?: Maybe<Ds_V1_1_3_ScoreConnection>;
  dsV113SettingsCounterModels?: Maybe<Ds_V1_1_3_SettingsCounterConnection>;
  dsV113SettingsDetailsModels?: Maybe<Ds_V1_1_3_SettingsDetailsConnection>;
  dsV113SettingsModels?: Maybe<Ds_V1_1_3_SettingsConnection>;
  dsV113TokenMetadataModels?: Maybe<Ds_V1_1_3_TokenMetadataConnection>;
  dsV113TrophyCreationModels?: Maybe<Ds_V1_1_3_TrophyCreationConnection>;
  dsV113TrophyProgressionModels?: Maybe<Ds_V1_1_3_TrophyProgressionConnection>;
  dsV113WorldConfigModels?: Maybe<Ds_V1_1_3_WorldConfigConnection>;
  dsV114BattleModels?: Maybe<Ds_V1_1_4_BattleConnection>;
  dsV114BoardModels?: Maybe<Ds_V1_1_4_BoardConnection>;
  dsV114DraftModels?: Maybe<Ds_V1_1_4_DraftConnection>;
  dsV114GameActionEventModels?: Maybe<Ds_V1_1_4_GameActionEventConnection>;
  dsV114GameCounterModels?: Maybe<Ds_V1_1_4_GameCounterConnection>;
  dsV114GameEffectsModels?: Maybe<Ds_V1_1_4_GameEffectsConnection>;
  dsV114GameMetadataModels?: Maybe<Ds_V1_1_4_GameMetadataConnection>;
  dsV114GameModels?: Maybe<Ds_V1_1_4_GameConnection>;
  dsV114GameSettingsModels?: Maybe<Ds_V1_1_4_GameSettingsConnection>;
  dsV114MapModels?: Maybe<Ds_V1_1_4_MapConnection>;
  dsV114ScoreModels?: Maybe<Ds_V1_1_4_ScoreConnection>;
  dsV114SettingsCounterModels?: Maybe<Ds_V1_1_4_SettingsCounterConnection>;
  dsV114SettingsDetailsModels?: Maybe<Ds_V1_1_4_SettingsDetailsConnection>;
  dsV114SettingsModels?: Maybe<Ds_V1_1_4_SettingsConnection>;
  dsV114TokenMetadataModels?: Maybe<Ds_V1_1_4_TokenMetadataConnection>;
  dsV114TrophyCreationModels?: Maybe<Ds_V1_1_4_TrophyCreationConnection>;
  dsV114TrophyProgressionModels?: Maybe<Ds_V1_1_4_TrophyProgressionConnection>;
  dsV114WorldConfigModels?: Maybe<Ds_V1_1_4_WorldConfigConnection>;
  dsV120BattleModels?: Maybe<Ds_V1_2_0_BattleConnection>;
  dsV120BattleResourcesModels?: Maybe<Ds_V1_2_0_BattleResourcesConnection>;
  dsV120CardModels?: Maybe<Ds_V1_2_0_CardConnection>;
  dsV120CardsCounterModels?: Maybe<Ds_V1_2_0_CardsCounterConnection>;
  dsV120CreatureCardModels?: Maybe<Ds_V1_2_0_CreatureCardConnection>;
  dsV120DraftModels?: Maybe<Ds_V1_2_0_DraftConnection>;
  dsV120GameActionEventModels?: Maybe<Ds_V1_2_0_GameActionEventConnection>;
  dsV120GameCounterModels?: Maybe<Ds_V1_2_0_GameCounterConnection>;
  dsV120GameEffectsModels?: Maybe<Ds_V1_2_0_GameEffectsConnection>;
  dsV120GameMetadataModels?: Maybe<Ds_V1_2_0_GameMetadataConnection>;
  dsV120GameModels?: Maybe<Ds_V1_2_0_GameConnection>;
  dsV120GameSettingsMetadataModels?: Maybe<Ds_V1_2_0_GameSettingsMetadataConnection>;
  dsV120GameSettingsModels?: Maybe<Ds_V1_2_0_GameSettingsConnection>;
  dsV120MapModels?: Maybe<Ds_V1_2_0_MapConnection>;
  dsV120ScoreModels?: Maybe<Ds_V1_2_0_ScoreConnection>;
  dsV120SettingsCounterModels?: Maybe<Ds_V1_2_0_SettingsCounterConnection>;
  dsV120SettingsDetailsModels?: Maybe<Ds_V1_2_0_SettingsDetailsConnection>;
  dsV120SettingsModels?: Maybe<Ds_V1_2_0_SettingsConnection>;
  dsV120SpellCardModels?: Maybe<Ds_V1_2_0_SpellCardConnection>;
  dsV120TokenMetadataModels?: Maybe<Ds_V1_2_0_TokenMetadataConnection>;
  dsV120TrophyCreationModels?: Maybe<Ds_V1_2_0_TrophyCreationConnection>;
  dsV120TrophyProgressionModels?: Maybe<Ds_V1_2_0_TrophyProgressionConnection>;
  dsWorldConfigModels?: Maybe<Ds_WorldConfigConnection>;
  entities?: Maybe<World__EntityConnection>;
  entity: World__Entity;
  eventMessage: World__EventMessage;
  eventMessages?: Maybe<World__EventMessageConnection>;
  events?: Maybe<World__EventConnection>;
  lsTournamentsV0TokenModels?: Maybe<Ls_Tournaments_V0_TokenConnection>;
  lsTournamentsV0TournamentConfigModels?: Maybe<Ls_Tournaments_V0_TournamentConfigConnection>;
  lsTournamentsV0TournamentEntriesAddressModels?: Maybe<Ls_Tournaments_V0_TournamentEntriesAddressConnection>;
  lsTournamentsV0TournamentEntriesModels?: Maybe<Ls_Tournaments_V0_TournamentEntriesConnection>;
  lsTournamentsV0TournamentEntryAddressesModels?: Maybe<Ls_Tournaments_V0_TournamentEntryAddressesConnection>;
  lsTournamentsV0TournamentGameModels?: Maybe<Ls_Tournaments_V0_TournamentGameConnection>;
  lsTournamentsV0TournamentModels?: Maybe<Ls_Tournaments_V0_TournamentConnection>;
  lsTournamentsV0TournamentPrizeModels?: Maybe<Ls_Tournaments_V0_TournamentPrizeConnection>;
  lsTournamentsV0TournamentScoresModels?: Maybe<Ls_Tournaments_V0_TournamentScoresConnection>;
  lsTournamentsV0TournamentStartsAddressModels?: Maybe<Ls_Tournaments_V0_TournamentStartsAddressConnection>;
  lsTournamentsV0TournamentTotalsModels?: Maybe<Ls_Tournaments_V0_TournamentTotalsConnection>;
  lstDbgTokenModels?: Maybe<Lst_Dbg_TokenConnection>;
  lstDbgTournamentConfigModels?: Maybe<Lst_Dbg_TournamentConfigConnection>;
  lstDbgTournamentEntriesAddressModels?: Maybe<Lst_Dbg_TournamentEntriesAddressConnection>;
  lstDbgTournamentEntriesModels?: Maybe<Lst_Dbg_TournamentEntriesConnection>;
  lstDbgTournamentEntryAddressesModels?: Maybe<Lst_Dbg_TournamentEntryAddressesConnection>;
  lstDbgTournamentGameModels?: Maybe<Lst_Dbg_TournamentGameConnection>;
  lstDbgTournamentModels?: Maybe<Lst_Dbg_TournamentConnection>;
  lstDbgTournamentPrizeModels?: Maybe<Lst_Dbg_TournamentPrizeConnection>;
  lstDbgTournamentScoresModels?: Maybe<Lst_Dbg_TournamentScoresConnection>;
  lstDbgTournamentStartsAddressModels?: Maybe<Lst_Dbg_TournamentStartsAddressConnection>;
  lstDbgTournamentTotalsModels?: Maybe<Lst_Dbg_TournamentTotalsConnection>;
  metadatas?: Maybe<World__MetadataConnection>;
  model: World__Model;
  models?: Maybe<World__ModelConnection>;
  pgEntryCountModels?: Maybe<Pg_EntryCountConnection>;
  pgGameCounterModels?: Maybe<Pg_GameCounterConnection>;
  pgGameMetadataModels?: Maybe<Pg_GameMetadataConnection>;
  pgLeaderboardModels?: Maybe<Pg_LeaderboardConnection>;
  pgPlatformMetricsModels?: Maybe<Pg_PlatformMetricsConnection>;
  pgPrizeClaimModels?: Maybe<Pg_PrizeClaimConnection>;
  pgPrizeMetricsModels?: Maybe<Pg_PrizeMetricsConnection>;
  pgPrizeModels?: Maybe<Pg_PrizeConnection>;
  pgRegistrationModels?: Maybe<Pg_RegistrationConnection>;
  pgScoreModels?: Maybe<Pg_ScoreConnection>;
  pgSettingsCounterModels?: Maybe<Pg_SettingsCounterConnection>;
  pgSettingsDetailsModels?: Maybe<Pg_SettingsDetailsConnection>;
  pgSettingsModels?: Maybe<Pg_SettingsConnection>;
  pgTokenMetadataModels?: Maybe<Pg_TokenMetadataConnection>;
  pgTokenModels?: Maybe<Pg_TokenConnection>;
  pgTournamentConfigModels?: Maybe<Pg_TournamentConfigConnection>;
  pgTournamentModels?: Maybe<Pg_TournamentConnection>;
  pgTournamentTokenMetricsModels?: Maybe<Pg_TournamentTokenMetricsConnection>;
  s0DarkshuffleBattleModels?: Maybe<S0_Darkshuffle_BattleConnection>;
  s0DarkshuffleBoardModels?: Maybe<S0_Darkshuffle_BoardConnection>;
  s0DarkshuffleDonationModels?: Maybe<S0_Darkshuffle_DonationConnection>;
  s0DarkshuffleDraftModels?: Maybe<S0_Darkshuffle_DraftConnection>;
  s0DarkshuffleGameEffectsModels?: Maybe<S0_Darkshuffle_GameEffectsConnection>;
  s0DarkshuffleGameModels?: Maybe<S0_Darkshuffle_GameConnection>;
  s0DarkshuffleGameSettingsModels?: Maybe<S0_Darkshuffle_GameSettingsConnection>;
  s0DarkshuffleGameStartDataModels?: Maybe<S0_Darkshuffle_GameStartDataConnection>;
  s0DarkshuffleGameStartEventModels?: Maybe<S0_Darkshuffle_GameStartEventConnection>;
  s0DarkshuffleLeaderboardModels?: Maybe<S0_Darkshuffle_LeaderboardConnection>;
  s0DarkshuffleMapModels?: Maybe<S0_Darkshuffle_MapConnection>;
  s0DarkshuffleSeasonModels?: Maybe<S0_Darkshuffle_SeasonConnection>;
  s0DarkshuffleTrophyCreationModels?: Maybe<S0_Darkshuffle_TrophyCreationConnection>;
  s0DarkshuffleTrophyProgressionModels?: Maybe<S0_Darkshuffle_TrophyProgressionConnection>;
  s0DarkshuffleWorldConfigModels?: Maybe<S0_Darkshuffle_WorldConfigConnection>;
  s0EternumAcceptOrderModels?: Maybe<S0_Eternum_AcceptOrderConnection>;
  s0EternumAcceptPartialOrderModels?: Maybe<S0_Eternum_AcceptPartialOrderConnection>;
  s0EternumAddressNameModels?: Maybe<S0_Eternum_AddressNameConnection>;
  s0EternumArmyModels?: Maybe<S0_Eternum_ArmyConnection>;
  s0EternumArrivalTimeModels?: Maybe<S0_Eternum_ArrivalTimeConnection>;
  s0EternumBankConfigModels?: Maybe<S0_Eternum_BankConfigConnection>;
  s0EternumBankModels?: Maybe<S0_Eternum_BankConnection>;
  s0EternumBattleClaimDataModels?: Maybe<S0_Eternum_BattleClaimDataConnection>;
  s0EternumBattleConfigModels?: Maybe<S0_Eternum_BattleConfigConnection>;
  s0EternumBattleJoinDataModels?: Maybe<S0_Eternum_BattleJoinDataConnection>;
  s0EternumBattleLeaveDataModels?: Maybe<S0_Eternum_BattleLeaveDataConnection>;
  s0EternumBattleModels?: Maybe<S0_Eternum_BattleConnection>;
  s0EternumBattlePillageDataModels?: Maybe<S0_Eternum_BattlePillageDataConnection>;
  s0EternumBattleStartDataModels?: Maybe<S0_Eternum_BattleStartDataConnection>;
  s0EternumBuildingCategoryPopConfigModels?: Maybe<S0_Eternum_BuildingCategoryPopConfigConnection>;
  s0EternumBuildingConfigModels?: Maybe<S0_Eternum_BuildingConfigConnection>;
  s0EternumBuildingGeneralConfigModels?: Maybe<S0_Eternum_BuildingGeneralConfigConnection>;
  s0EternumBuildingModels?: Maybe<S0_Eternum_BuildingConnection>;
  s0EternumBuildingQuantityv2Models?: Maybe<S0_Eternum_BuildingQuantityv2Connection>;
  s0EternumBurnDonkeyModels?: Maybe<S0_Eternum_BurnDonkeyConnection>;
  s0EternumCancelOrderModels?: Maybe<S0_Eternum_CancelOrderConnection>;
  s0EternumCapacityCategoryModels?: Maybe<S0_Eternum_CapacityCategoryConnection>;
  s0EternumCapacityConfigModels?: Maybe<S0_Eternum_CapacityConfigConnection>;
  s0EternumContributionModels?: Maybe<S0_Eternum_ContributionConnection>;
  s0EternumCreateGuildModels?: Maybe<S0_Eternum_CreateGuildConnection>;
  s0EternumCreateOrderModels?: Maybe<S0_Eternum_CreateOrderConnection>;
  s0EternumDetachedResourceModels?: Maybe<S0_Eternum_DetachedResourceConnection>;
  s0EternumEntityNameModels?: Maybe<S0_Eternum_EntityNameConnection>;
  s0EternumEntityOwnerModels?: Maybe<S0_Eternum_EntityOwnerConnection>;
  s0EternumEpochModels?: Maybe<S0_Eternum_EpochConnection>;
  s0EternumFragmentMineDiscoveredModels?: Maybe<S0_Eternum_FragmentMineDiscoveredConnection>;
  s0EternumGameEndedModels?: Maybe<S0_Eternum_GameEndedConnection>;
  s0EternumGuildMemberModels?: Maybe<S0_Eternum_GuildMemberConnection>;
  s0EternumGuildModels?: Maybe<S0_Eternum_GuildConnection>;
  s0EternumGuildWhitelistModels?: Maybe<S0_Eternum_GuildWhitelistConnection>;
  s0EternumHealthModels?: Maybe<S0_Eternum_HealthConnection>;
  s0EternumHyperstructureCoOwnersChangeModels?: Maybe<S0_Eternum_HyperstructureCoOwnersChangeConnection>;
  s0EternumHyperstructureConfigModels?: Maybe<S0_Eternum_HyperstructureConfigConnection>;
  s0EternumHyperstructureContributionModels?: Maybe<S0_Eternum_HyperstructureContributionConnection>;
  s0EternumHyperstructureFinishedModels?: Maybe<S0_Eternum_HyperstructureFinishedConnection>;
  s0EternumHyperstructureModels?: Maybe<S0_Eternum_HyperstructureConnection>;
  s0EternumHyperstructureResourceConfigModels?: Maybe<S0_Eternum_HyperstructureResourceConfigConnection>;
  s0EternumHyperstructureStartedModels?: Maybe<S0_Eternum_HyperstructureStartedConnection>;
  s0EternumJoinGuildModels?: Maybe<S0_Eternum_JoinGuildConnection>;
  s0EternumLeaderboardEntryModels?: Maybe<S0_Eternum_LeaderboardEntryConnection>;
  s0EternumLeaderboardModels?: Maybe<S0_Eternum_LeaderboardConnection>;
  s0EternumLeaderboardRegisterContributionModels?: Maybe<S0_Eternum_LeaderboardRegisterContributionConnection>;
  s0EternumLeaderboardRegisterShareModels?: Maybe<S0_Eternum_LeaderboardRegisterShareConnection>;
  s0EternumLeaderboardRegisteredModels?: Maybe<S0_Eternum_LeaderboardRegisteredConnection>;
  s0EternumLeaderboardRewardClaimedModels?: Maybe<S0_Eternum_LeaderboardRewardClaimedConnection>;
  s0EternumLevelingConfigModels?: Maybe<S0_Eternum_LevelingConfigConnection>;
  s0EternumLiquidityEventModels?: Maybe<S0_Eternum_LiquidityEventConnection>;
  s0EternumLiquidityModels?: Maybe<S0_Eternum_LiquidityConnection>;
  s0EternumMapConfigModels?: Maybe<S0_Eternum_MapConfigConnection>;
  s0EternumMapExploredModels?: Maybe<S0_Eternum_MapExploredConnection>;
  s0EternumMarketModels?: Maybe<S0_Eternum_MarketConnection>;
  s0EternumMercenariesConfigModels?: Maybe<S0_Eternum_MercenariesConfigConnection>;
  s0EternumMessageModels?: Maybe<S0_Eternum_MessageConnection>;
  s0EternumMovableModels?: Maybe<S0_Eternum_MovableConnection>;
  s0EternumOrdersModels?: Maybe<S0_Eternum_OrdersConnection>;
  s0EternumOwnedResourcesTrackerModels?: Maybe<S0_Eternum_OwnedResourcesTrackerConnection>;
  s0EternumOwnerModels?: Maybe<S0_Eternum_OwnerConnection>;
  s0EternumPopulationConfigModels?: Maybe<S0_Eternum_PopulationConfigConnection>;
  s0EternumPopulationModels?: Maybe<S0_Eternum_PopulationConnection>;
  s0EternumPositionModels?: Maybe<S0_Eternum_PositionConnection>;
  s0EternumProductionConfigModels?: Maybe<S0_Eternum_ProductionConfigConnection>;
  s0EternumProductionDeadlineModels?: Maybe<S0_Eternum_ProductionDeadlineConnection>;
  s0EternumProductionInputModels?: Maybe<S0_Eternum_ProductionInputConnection>;
  s0EternumProductionModels?: Maybe<S0_Eternum_ProductionConnection>;
  s0EternumProductionOutputModels?: Maybe<S0_Eternum_ProductionOutputConnection>;
  s0EternumProgressModels?: Maybe<S0_Eternum_ProgressConnection>;
  s0EternumProtecteeModels?: Maybe<S0_Eternum_ProtecteeConnection>;
  s0EternumProtectorModels?: Maybe<S0_Eternum_ProtectorConnection>;
  s0EternumQuantityModels?: Maybe<S0_Eternum_QuantityConnection>;
  s0EternumQuantityTrackerModels?: Maybe<S0_Eternum_QuantityTrackerConnection>;
  s0EternumQuestBonusModels?: Maybe<S0_Eternum_QuestBonusConnection>;
  s0EternumQuestConfigModels?: Maybe<S0_Eternum_QuestConfigConnection>;
  s0EternumQuestModels?: Maybe<S0_Eternum_QuestConnection>;
  s0EternumQuestRewardConfigModels?: Maybe<S0_Eternum_QuestRewardConfigConnection>;
  s0EternumRealmLevelConfigModels?: Maybe<S0_Eternum_RealmLevelConfigConnection>;
  s0EternumRealmMaxLevelConfigModels?: Maybe<S0_Eternum_RealmMaxLevelConfigConnection>;
  s0EternumRealmModels?: Maybe<S0_Eternum_RealmConnection>;
  s0EternumResourceAllowanceModels?: Maybe<S0_Eternum_ResourceAllowanceConnection>;
  s0EternumResourceBridgeConfigModels?: Maybe<S0_Eternum_ResourceBridgeConfigConnection>;
  s0EternumResourceBridgeFeeSplitConfigModels?: Maybe<S0_Eternum_ResourceBridgeFeeSplitConfigConnection>;
  s0EternumResourceBridgeWhitelistConfigModels?: Maybe<S0_Eternum_ResourceBridgeWhitelistConfigConnection>;
  s0EternumResourceCostModels?: Maybe<S0_Eternum_ResourceCostConnection>;
  s0EternumResourceModels?: Maybe<S0_Eternum_ResourceConnection>;
  s0EternumResourceTransferLockModels?: Maybe<S0_Eternum_ResourceTransferLockConnection>;
  s0EternumSeasonAddressesConfigModels?: Maybe<S0_Eternum_SeasonAddressesConfigConnection>;
  s0EternumSeasonBridgeConfigModels?: Maybe<S0_Eternum_SeasonBridgeConfigConnection>;
  s0EternumSeasonModels?: Maybe<S0_Eternum_SeasonConnection>;
  s0EternumSettleRealmDataModels?: Maybe<S0_Eternum_SettleRealmDataConnection>;
  s0EternumSettlementConfigModels?: Maybe<S0_Eternum_SettlementConfigConnection>;
  s0EternumSpeedConfigModels?: Maybe<S0_Eternum_SpeedConfigConnection>;
  s0EternumStaminaConfigModels?: Maybe<S0_Eternum_StaminaConfigConnection>;
  s0EternumStaminaModels?: Maybe<S0_Eternum_StaminaConnection>;
  s0EternumStaminaRefillConfigModels?: Maybe<S0_Eternum_StaminaRefillConfigConnection>;
  s0EternumStatusModels?: Maybe<S0_Eternum_StatusConnection>;
  s0EternumStructureCountModels?: Maybe<S0_Eternum_StructureCountConnection>;
  s0EternumStructureModels?: Maybe<S0_Eternum_StructureConnection>;
  s0EternumSwapEventModels?: Maybe<S0_Eternum_SwapEventConnection>;
  s0EternumTickConfigModels?: Maybe<S0_Eternum_TickConfigConnection>;
  s0EternumTileModels?: Maybe<S0_Eternum_TileConnection>;
  s0EternumTradeModels?: Maybe<S0_Eternum_TradeConnection>;
  s0EternumTransferModels?: Maybe<S0_Eternum_TransferConnection>;
  s0EternumTravelFoodCostConfigModels?: Maybe<S0_Eternum_TravelFoodCostConfigConnection>;
  s0EternumTravelModels?: Maybe<S0_Eternum_TravelConnection>;
  s0EternumTravelStaminaCostConfigModels?: Maybe<S0_Eternum_TravelStaminaCostConfigConnection>;
  s0EternumTroopConfigModels?: Maybe<S0_Eternum_TroopConfigConnection>;
  s0EternumTrophyCreationModels?: Maybe<S0_Eternum_TrophyCreationConnection>;
  s0EternumTrophyProgressionModels?: Maybe<S0_Eternum_TrophyProgressionConnection>;
  s0EternumVrfConfigModels?: Maybe<S0_Eternum_VrfConfigConnection>;
  s0EternumWeightConfigModels?: Maybe<S0_Eternum_WeightConfigConnection>;
  s0EternumWeightModels?: Maybe<S0_Eternum_WeightConnection>;
  s0EternumWorldConfigModels?: Maybe<S0_Eternum_WorldConfigConnection>;
  tokenBalances?: Maybe<Token__BalanceConnection>;
  tokenTransfers?: Maybe<Token__TransferConnection>;
  transaction: World__Transaction;
  transactions?: Maybe<World__TransactionConnection>;
};


export type World__QueryBodukanEntryCountModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_EntryCountOrder>;
  where?: InputMaybe<Bodukan_EntryCountWhereInput>;
};


export type World__QueryBodukanGameCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_GameCounterOrder>;
  where?: InputMaybe<Bodukan_GameCounterWhereInput>;
};


export type World__QueryBodukanGameMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_GameMetadataOrder>;
  where?: InputMaybe<Bodukan_GameMetadataWhereInput>;
};


export type World__QueryBodukanLeaderboardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_LeaderboardOrder>;
  where?: InputMaybe<Bodukan_LeaderboardWhereInput>;
};


export type World__QueryBodukanPlatformMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_PlatformMetricsOrder>;
  where?: InputMaybe<Bodukan_PlatformMetricsWhereInput>;
};


export type World__QueryBodukanPrizeClaimModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_PrizeClaimOrder>;
  where?: InputMaybe<Bodukan_PrizeClaimWhereInput>;
};


export type World__QueryBodukanPrizeMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_PrizeMetricsOrder>;
  where?: InputMaybe<Bodukan_PrizeMetricsWhereInput>;
};


export type World__QueryBodukanPrizeModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_PrizeOrder>;
  where?: InputMaybe<Bodukan_PrizeWhereInput>;
};


export type World__QueryBodukanRegistrationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_RegistrationOrder>;
  where?: InputMaybe<Bodukan_RegistrationWhereInput>;
};


export type World__QueryBodukanScoreModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_ScoreOrder>;
  where?: InputMaybe<Bodukan_ScoreWhereInput>;
};


export type World__QueryBodukanSettingsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_SettingsCounterOrder>;
  where?: InputMaybe<Bodukan_SettingsCounterWhereInput>;
};


export type World__QueryBodukanSettingsDetailsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_SettingsDetailsOrder>;
  where?: InputMaybe<Bodukan_SettingsDetailsWhereInput>;
};


export type World__QueryBodukanSettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_SettingsOrder>;
  where?: InputMaybe<Bodukan_SettingsWhereInput>;
};


export type World__QueryBodukanTokenMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_TokenMetadataOrder>;
  where?: InputMaybe<Bodukan_TokenMetadataWhereInput>;
};


export type World__QueryBodukanTokenModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_TokenOrder>;
  where?: InputMaybe<Bodukan_TokenWhereInput>;
};


export type World__QueryBodukanTournamentConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_TournamentConfigOrder>;
  where?: InputMaybe<Bodukan_TournamentConfigWhereInput>;
};


export type World__QueryBodukanTournamentModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_TournamentOrder>;
  where?: InputMaybe<Bodukan_TournamentWhereInput>;
};


export type World__QueryBodukanTournamentTokenMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Bodukan_TournamentTokenMetricsOrder>;
  where?: InputMaybe<Bodukan_TournamentTokenMetricsWhereInput>;
};


export type World__QueryBudokan106EntryCountModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_EntryCountOrder>;
  where?: InputMaybe<Budokan_1_0_6_EntryCountWhereInput>;
};


export type World__QueryBudokan106GameCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_GameCounterOrder>;
  where?: InputMaybe<Budokan_1_0_6_GameCounterWhereInput>;
};


export type World__QueryBudokan106GameMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_GameMetadataOrder>;
  where?: InputMaybe<Budokan_1_0_6_GameMetadataWhereInput>;
};


export type World__QueryBudokan106LeaderboardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_LeaderboardOrder>;
  where?: InputMaybe<Budokan_1_0_6_LeaderboardWhereInput>;
};


export type World__QueryBudokan106PlatformMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_PlatformMetricsOrder>;
  where?: InputMaybe<Budokan_1_0_6_PlatformMetricsWhereInput>;
};


export type World__QueryBudokan106PrizeClaimModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_PrizeClaimOrder>;
  where?: InputMaybe<Budokan_1_0_6_PrizeClaimWhereInput>;
};


export type World__QueryBudokan106PrizeMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_PrizeMetricsOrder>;
  where?: InputMaybe<Budokan_1_0_6_PrizeMetricsWhereInput>;
};


export type World__QueryBudokan106PrizeModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_PrizeOrder>;
  where?: InputMaybe<Budokan_1_0_6_PrizeWhereInput>;
};


export type World__QueryBudokan106QualificationEntriesModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_QualificationEntriesOrder>;
  where?: InputMaybe<Budokan_1_0_6_QualificationEntriesWhereInput>;
};


export type World__QueryBudokan106RegistrationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_RegistrationOrder>;
  where?: InputMaybe<Budokan_1_0_6_RegistrationWhereInput>;
};


export type World__QueryBudokan106ScoreModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_ScoreOrder>;
  where?: InputMaybe<Budokan_1_0_6_ScoreWhereInput>;
};


export type World__QueryBudokan106SettingsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_SettingsCounterOrder>;
  where?: InputMaybe<Budokan_1_0_6_SettingsCounterWhereInput>;
};


export type World__QueryBudokan106SettingsDetailsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_SettingsDetailsOrder>;
  where?: InputMaybe<Budokan_1_0_6_SettingsDetailsWhereInput>;
};


export type World__QueryBudokan106SettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_SettingsOrder>;
  where?: InputMaybe<Budokan_1_0_6_SettingsWhereInput>;
};


export type World__QueryBudokan106TokenMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_TokenMetadataOrder>;
  where?: InputMaybe<Budokan_1_0_6_TokenMetadataWhereInput>;
};


export type World__QueryBudokan106TokenModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_TokenOrder>;
  where?: InputMaybe<Budokan_1_0_6_TokenWhereInput>;
};


export type World__QueryBudokan106TournamentConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_TournamentConfigOrder>;
  where?: InputMaybe<Budokan_1_0_6_TournamentConfigWhereInput>;
};


export type World__QueryBudokan106TournamentModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_TournamentOrder>;
  where?: InputMaybe<Budokan_1_0_6_TournamentWhereInput>;
};


export type World__QueryBudokan106TournamentTokenMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_1_0_6_TournamentTokenMetricsOrder>;
  where?: InputMaybe<Budokan_1_0_6_TournamentTokenMetricsWhereInput>;
};


export type World__QueryBudokanEntryCountModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_EntryCountOrder>;
  where?: InputMaybe<Budokan_EntryCountWhereInput>;
};


export type World__QueryBudokanGameCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_GameCounterOrder>;
  where?: InputMaybe<Budokan_GameCounterWhereInput>;
};


export type World__QueryBudokanGameMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_GameMetadataOrder>;
  where?: InputMaybe<Budokan_GameMetadataWhereInput>;
};


export type World__QueryBudokanLeaderboardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_LeaderboardOrder>;
  where?: InputMaybe<Budokan_LeaderboardWhereInput>;
};


export type World__QueryBudokanPlatformMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_PlatformMetricsOrder>;
  where?: InputMaybe<Budokan_PlatformMetricsWhereInput>;
};


export type World__QueryBudokanPrizeClaimModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_PrizeClaimOrder>;
  where?: InputMaybe<Budokan_PrizeClaimWhereInput>;
};


export type World__QueryBudokanPrizeMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_PrizeMetricsOrder>;
  where?: InputMaybe<Budokan_PrizeMetricsWhereInput>;
};


export type World__QueryBudokanPrizeModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_PrizeOrder>;
  where?: InputMaybe<Budokan_PrizeWhereInput>;
};


export type World__QueryBudokanRegistrationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_RegistrationOrder>;
  where?: InputMaybe<Budokan_RegistrationWhereInput>;
};


export type World__QueryBudokanScoreModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_ScoreOrder>;
  where?: InputMaybe<Budokan_ScoreWhereInput>;
};


export type World__QueryBudokanSettingsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_SettingsCounterOrder>;
  where?: InputMaybe<Budokan_SettingsCounterWhereInput>;
};


export type World__QueryBudokanSettingsDetailsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_SettingsDetailsOrder>;
  where?: InputMaybe<Budokan_SettingsDetailsWhereInput>;
};


export type World__QueryBudokanSettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_SettingsOrder>;
  where?: InputMaybe<Budokan_SettingsWhereInput>;
};


export type World__QueryBudokanTokenMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_TokenMetadataOrder>;
  where?: InputMaybe<Budokan_TokenMetadataWhereInput>;
};


export type World__QueryBudokanTokenModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_TokenOrder>;
  where?: InputMaybe<Budokan_TokenWhereInput>;
};


export type World__QueryBudokanTournamentConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_TournamentConfigOrder>;
  where?: InputMaybe<Budokan_TournamentConfigWhereInput>;
};


export type World__QueryBudokanTournamentModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_TournamentOrder>;
  where?: InputMaybe<Budokan_TournamentWhereInput>;
};


export type World__QueryBudokanTournamentTokenMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_TournamentTokenMetricsOrder>;
  where?: InputMaybe<Budokan_TournamentTokenMetricsWhereInput>;
};


export type World__QueryBudokanV100EntryCountModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_EntryCountOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_EntryCountWhereInput>;
};


export type World__QueryBudokanV100GameCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_GameCounterOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_GameCounterWhereInput>;
};


export type World__QueryBudokanV100GameMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_GameMetadataOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_GameMetadataWhereInput>;
};


export type World__QueryBudokanV100LeaderboardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_LeaderboardOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_LeaderboardWhereInput>;
};


export type World__QueryBudokanV100PlatformMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_PlatformMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_PlatformMetricsWhereInput>;
};


export type World__QueryBudokanV100PrizeClaimModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_PrizeClaimOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_PrizeClaimWhereInput>;
};


export type World__QueryBudokanV100PrizeMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_PrizeMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_PrizeMetricsWhereInput>;
};


export type World__QueryBudokanV100PrizeModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_PrizeOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_PrizeWhereInput>;
};


export type World__QueryBudokanV100RegistrationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_RegistrationOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_RegistrationWhereInput>;
};


export type World__QueryBudokanV100ScoreModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_ScoreOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_ScoreWhereInput>;
};


export type World__QueryBudokanV100SettingsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_SettingsCounterOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_SettingsCounterWhereInput>;
};


export type World__QueryBudokanV100SettingsDetailsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_SettingsDetailsOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_SettingsDetailsWhereInput>;
};


export type World__QueryBudokanV100SettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_SettingsOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_SettingsWhereInput>;
};


export type World__QueryBudokanV100TokenMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_TokenMetadataOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_TokenMetadataWhereInput>;
};


export type World__QueryBudokanV100TokenModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_TokenOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_TokenWhereInput>;
};


export type World__QueryBudokanV100TournamentConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_TournamentConfigOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_TournamentConfigWhereInput>;
};


export type World__QueryBudokanV100TournamentModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_TournamentOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_TournamentWhereInput>;
};


export type World__QueryBudokanV100TournamentTokenMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_0_TournamentTokenMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_0_TournamentTokenMetricsWhereInput>;
};


export type World__QueryBudokanV101EntryCountModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_EntryCountOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_EntryCountWhereInput>;
};


export type World__QueryBudokanV101GameCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_GameCounterOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_GameCounterWhereInput>;
};


export type World__QueryBudokanV101GameMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_GameMetadataOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_GameMetadataWhereInput>;
};


export type World__QueryBudokanV101LeaderboardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_LeaderboardOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_LeaderboardWhereInput>;
};


export type World__QueryBudokanV101PlatformMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_PlatformMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_PlatformMetricsWhereInput>;
};


export type World__QueryBudokanV101PrizeClaimModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_PrizeClaimOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_PrizeClaimWhereInput>;
};


export type World__QueryBudokanV101PrizeMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_PrizeMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_PrizeMetricsWhereInput>;
};


export type World__QueryBudokanV101PrizeModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_PrizeOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_PrizeWhereInput>;
};


export type World__QueryBudokanV101RegistrationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_RegistrationOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_RegistrationWhereInput>;
};


export type World__QueryBudokanV101ScoreModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_ScoreOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_ScoreWhereInput>;
};


export type World__QueryBudokanV101SettingsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_SettingsCounterOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_SettingsCounterWhereInput>;
};


export type World__QueryBudokanV101SettingsDetailsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_SettingsDetailsOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_SettingsDetailsWhereInput>;
};


export type World__QueryBudokanV101SettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_SettingsOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_SettingsWhereInput>;
};


export type World__QueryBudokanV101TokenMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_TokenMetadataOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_TokenMetadataWhereInput>;
};


export type World__QueryBudokanV101TokenModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_TokenOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_TokenWhereInput>;
};


export type World__QueryBudokanV101TournamentConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_TournamentConfigOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_TournamentConfigWhereInput>;
};


export type World__QueryBudokanV101TournamentModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_TournamentOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_TournamentWhereInput>;
};


export type World__QueryBudokanV101TournamentTokenMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_1_TournamentTokenMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_1_TournamentTokenMetricsWhereInput>;
};


export type World__QueryBudokanV102EntryCountModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_EntryCountOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_EntryCountWhereInput>;
};


export type World__QueryBudokanV102GameCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_GameCounterOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_GameCounterWhereInput>;
};


export type World__QueryBudokanV102GameMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_GameMetadataOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_GameMetadataWhereInput>;
};


export type World__QueryBudokanV102LeaderboardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_LeaderboardOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_LeaderboardWhereInput>;
};


export type World__QueryBudokanV102PlatformMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_PlatformMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_PlatformMetricsWhereInput>;
};


export type World__QueryBudokanV102PrizeClaimModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_PrizeClaimOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_PrizeClaimWhereInput>;
};


export type World__QueryBudokanV102PrizeMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_PrizeMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_PrizeMetricsWhereInput>;
};


export type World__QueryBudokanV102PrizeModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_PrizeOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_PrizeWhereInput>;
};


export type World__QueryBudokanV102RegistrationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_RegistrationOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_RegistrationWhereInput>;
};


export type World__QueryBudokanV102ScoreModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_ScoreOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_ScoreWhereInput>;
};


export type World__QueryBudokanV102SettingsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_SettingsCounterOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_SettingsCounterWhereInput>;
};


export type World__QueryBudokanV102SettingsDetailsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_SettingsDetailsOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_SettingsDetailsWhereInput>;
};


export type World__QueryBudokanV102SettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_SettingsOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_SettingsWhereInput>;
};


export type World__QueryBudokanV102TokenMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_TokenMetadataOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_TokenMetadataWhereInput>;
};


export type World__QueryBudokanV102TokenModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_TokenOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_TokenWhereInput>;
};


export type World__QueryBudokanV102TournamentConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_TournamentConfigOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_TournamentConfigWhereInput>;
};


export type World__QueryBudokanV102TournamentModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_TournamentOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_TournamentWhereInput>;
};


export type World__QueryBudokanV102TournamentTokenMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_2_TournamentTokenMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_2_TournamentTokenMetricsWhereInput>;
};


export type World__QueryBudokanV104EntryCountModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_EntryCountOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_EntryCountWhereInput>;
};


export type World__QueryBudokanV104GameCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_GameCounterOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_GameCounterWhereInput>;
};


export type World__QueryBudokanV104GameMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_GameMetadataOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_GameMetadataWhereInput>;
};


export type World__QueryBudokanV104LeaderboardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_LeaderboardOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_LeaderboardWhereInput>;
};


export type World__QueryBudokanV104PlatformMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_PlatformMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_PlatformMetricsWhereInput>;
};


export type World__QueryBudokanV104PrizeClaimModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_PrizeClaimOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_PrizeClaimWhereInput>;
};


export type World__QueryBudokanV104PrizeMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_PrizeMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_PrizeMetricsWhereInput>;
};


export type World__QueryBudokanV104PrizeModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_PrizeOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_PrizeWhereInput>;
};


export type World__QueryBudokanV104QualificationEntriesModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_QualificationEntriesOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_QualificationEntriesWhereInput>;
};


export type World__QueryBudokanV104RegistrationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_RegistrationOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_RegistrationWhereInput>;
};


export type World__QueryBudokanV104ScoreModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_ScoreOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_ScoreWhereInput>;
};


export type World__QueryBudokanV104SettingsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_SettingsCounterOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_SettingsCounterWhereInput>;
};


export type World__QueryBudokanV104SettingsDetailsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_SettingsDetailsOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_SettingsDetailsWhereInput>;
};


export type World__QueryBudokanV104SettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_SettingsOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_SettingsWhereInput>;
};


export type World__QueryBudokanV104TokenMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_TokenMetadataOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_TokenMetadataWhereInput>;
};


export type World__QueryBudokanV104TokenModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_TokenOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_TokenWhereInput>;
};


export type World__QueryBudokanV104TournamentConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_TournamentConfigOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_TournamentConfigWhereInput>;
};


export type World__QueryBudokanV104TournamentModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_TournamentOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_TournamentWhereInput>;
};


export type World__QueryBudokanV104TournamentTokenMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_4_TournamentTokenMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_4_TournamentTokenMetricsWhereInput>;
};


export type World__QueryBudokanV105EntryCountModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_EntryCountOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_EntryCountWhereInput>;
};


export type World__QueryBudokanV105GameCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_GameCounterOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_GameCounterWhereInput>;
};


export type World__QueryBudokanV105GameMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_GameMetadataOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_GameMetadataWhereInput>;
};


export type World__QueryBudokanV105LeaderboardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_LeaderboardOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_LeaderboardWhereInput>;
};


export type World__QueryBudokanV105PlatformMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_PlatformMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_PlatformMetricsWhereInput>;
};


export type World__QueryBudokanV105PrizeClaimModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_PrizeClaimOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_PrizeClaimWhereInput>;
};


export type World__QueryBudokanV105PrizeMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_PrizeMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_PrizeMetricsWhereInput>;
};


export type World__QueryBudokanV105PrizeModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_PrizeOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_PrizeWhereInput>;
};


export type World__QueryBudokanV105QualificationEntriesModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_QualificationEntriesOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_QualificationEntriesWhereInput>;
};


export type World__QueryBudokanV105RegistrationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_RegistrationOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_RegistrationWhereInput>;
};


export type World__QueryBudokanV105ScoreModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_ScoreOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_ScoreWhereInput>;
};


export type World__QueryBudokanV105SettingsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_SettingsCounterOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_SettingsCounterWhereInput>;
};


export type World__QueryBudokanV105SettingsDetailsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_SettingsDetailsOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_SettingsDetailsWhereInput>;
};


export type World__QueryBudokanV105SettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_SettingsOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_SettingsWhereInput>;
};


export type World__QueryBudokanV105TokenMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_TokenMetadataOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_TokenMetadataWhereInput>;
};


export type World__QueryBudokanV105TokenModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_TokenOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_TokenWhereInput>;
};


export type World__QueryBudokanV105TournamentConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_TournamentConfigOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_TournamentConfigWhereInput>;
};


export type World__QueryBudokanV105TournamentModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_TournamentOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_TournamentWhereInput>;
};


export type World__QueryBudokanV105TournamentTokenMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_5_TournamentTokenMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_5_TournamentTokenMetricsWhereInput>;
};


export type World__QueryBudokanV106EntryCountModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_EntryCountOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_EntryCountWhereInput>;
};


export type World__QueryBudokanV106GameCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_GameCounterOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_GameCounterWhereInput>;
};


export type World__QueryBudokanV106GameMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_GameMetadataOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_GameMetadataWhereInput>;
};


export type World__QueryBudokanV106LeaderboardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_LeaderboardOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_LeaderboardWhereInput>;
};


export type World__QueryBudokanV106PlatformMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_PlatformMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_PlatformMetricsWhereInput>;
};


export type World__QueryBudokanV106PrizeClaimModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_PrizeClaimOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_PrizeClaimWhereInput>;
};


export type World__QueryBudokanV106PrizeMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_PrizeMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_PrizeMetricsWhereInput>;
};


export type World__QueryBudokanV106PrizeModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_PrizeOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_PrizeWhereInput>;
};


export type World__QueryBudokanV106QualificationEntriesModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_QualificationEntriesOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_QualificationEntriesWhereInput>;
};


export type World__QueryBudokanV106RegistrationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_RegistrationOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_RegistrationWhereInput>;
};


export type World__QueryBudokanV106ScoreModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_ScoreOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_ScoreWhereInput>;
};


export type World__QueryBudokanV106SettingsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_SettingsCounterOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_SettingsCounterWhereInput>;
};


export type World__QueryBudokanV106SettingsDetailsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_SettingsDetailsOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_SettingsDetailsWhereInput>;
};


export type World__QueryBudokanV106SettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_SettingsOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_SettingsWhereInput>;
};


export type World__QueryBudokanV106TokenMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_TokenMetadataOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_TokenMetadataWhereInput>;
};


export type World__QueryBudokanV106TokenModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_TokenOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_TokenWhereInput>;
};


export type World__QueryBudokanV106TournamentConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_TournamentConfigOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_TournamentConfigWhereInput>;
};


export type World__QueryBudokanV106TournamentModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_TournamentOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_TournamentWhereInput>;
};


export type World__QueryBudokanV106TournamentTokenMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Budokan_V_1_0_6_TournamentTokenMetricsOrder>;
  where?: InputMaybe<Budokan_V_1_0_6_TournamentTokenMetricsWhereInput>;
};


export type World__QueryDarkshuffleBattleEffectsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_BattleEffectsOrder>;
  where?: InputMaybe<Darkshuffle_BattleEffectsWhereInput>;
};


export type World__QueryDarkshuffleBattleModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_BattleOrder>;
  where?: InputMaybe<Darkshuffle_BattleWhereInput>;
};


export type World__QueryDarkshuffleBoardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_BoardOrder>;
  where?: InputMaybe<Darkshuffle_BoardWhereInput>;
};


export type World__QueryDarkshuffleDonationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_DonationOrder>;
  where?: InputMaybe<Darkshuffle_DonationWhereInput>;
};


export type World__QueryDarkshuffleDraftModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_DraftOrder>;
  where?: InputMaybe<Darkshuffle_DraftWhereInput>;
};


export type World__QueryDarkshuffleGameEffectsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_GameEffectsOrder>;
  where?: InputMaybe<Darkshuffle_GameEffectsWhereInput>;
};


export type World__QueryDarkshuffleGameModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_GameOrder>;
  where?: InputMaybe<Darkshuffle_GameWhereInput>;
};


export type World__QueryDarkshuffleLeaderboardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_LeaderboardOrder>;
  where?: InputMaybe<Darkshuffle_LeaderboardWhereInput>;
};


export type World__QueryDarkshuffleMapModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_MapOrder>;
  where?: InputMaybe<Darkshuffle_MapWhereInput>;
};


export type World__QueryDarkshufflePlayerRewardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_PlayerRewardOrder>;
  where?: InputMaybe<Darkshuffle_PlayerRewardWhereInput>;
};


export type World__QueryDarkshuffleS0BattleModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_S0_BattleOrder>;
  where?: InputMaybe<Darkshuffle_S0_BattleWhereInput>;
};


export type World__QueryDarkshuffleS0BoardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_S0_BoardOrder>;
  where?: InputMaybe<Darkshuffle_S0_BoardWhereInput>;
};


export type World__QueryDarkshuffleS0DonationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_S0_DonationOrder>;
  where?: InputMaybe<Darkshuffle_S0_DonationWhereInput>;
};


export type World__QueryDarkshuffleS0DraftModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_S0_DraftOrder>;
  where?: InputMaybe<Darkshuffle_S0_DraftWhereInput>;
};


export type World__QueryDarkshuffleS0GameEffectsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_S0_GameEffectsOrder>;
  where?: InputMaybe<Darkshuffle_S0_GameEffectsWhereInput>;
};


export type World__QueryDarkshuffleS0GameModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_S0_GameOrder>;
  where?: InputMaybe<Darkshuffle_S0_GameWhereInput>;
};


export type World__QueryDarkshuffleS0GameSettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_S0_GameSettingsOrder>;
  where?: InputMaybe<Darkshuffle_S0_GameSettingsWhereInput>;
};


export type World__QueryDarkshuffleS0GameStartEventModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_S0_GameStartEventOrder>;
  where?: InputMaybe<Darkshuffle_S0_GameStartEventWhereInput>;
};


export type World__QueryDarkshuffleS0LeaderboardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_S0_LeaderboardOrder>;
  where?: InputMaybe<Darkshuffle_S0_LeaderboardWhereInput>;
};


export type World__QueryDarkshuffleS0MapModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_S0_MapOrder>;
  where?: InputMaybe<Darkshuffle_S0_MapWhereInput>;
};


export type World__QueryDarkshuffleS0SeasonModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_S0_SeasonOrder>;
  where?: InputMaybe<Darkshuffle_S0_SeasonWhereInput>;
};


export type World__QueryDarkshuffleS0TrophyCreationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_S0_TrophyCreationOrder>;
  where?: InputMaybe<Darkshuffle_S0_TrophyCreationWhereInput>;
};


export type World__QueryDarkshuffleS0TrophyProgressionModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_S0_TrophyProgressionOrder>;
  where?: InputMaybe<Darkshuffle_S0_TrophyProgressionWhereInput>;
};


export type World__QueryDarkshuffleS0WorldConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_S0_WorldConfigOrder>;
  where?: InputMaybe<Darkshuffle_S0_WorldConfigWhereInput>;
};


export type World__QueryDarkshuffleSeasonModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Darkshuffle_SeasonOrder>;
  where?: InputMaybe<Darkshuffle_SeasonWhereInput>;
};


export type World__QueryDsBattleModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_BattleOrder>;
  where?: InputMaybe<Ds_BattleWhereInput>;
};


export type World__QueryDsBoardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_BoardOrder>;
  where?: InputMaybe<Ds_BoardWhereInput>;
};


export type World__QueryDsDraftModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_DraftOrder>;
  where?: InputMaybe<Ds_DraftWhereInput>;
};


export type World__QueryDsGameActionEventModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_GameActionEventOrder>;
  where?: InputMaybe<Ds_GameActionEventWhereInput>;
};


export type World__QueryDsGameCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_GameCounterOrder>;
  where?: InputMaybe<Ds_GameCounterWhereInput>;
};


export type World__QueryDsGameEffectsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_GameEffectsOrder>;
  where?: InputMaybe<Ds_GameEffectsWhereInput>;
};


export type World__QueryDsGameMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_GameMetadataOrder>;
  where?: InputMaybe<Ds_GameMetadataWhereInput>;
};


export type World__QueryDsGameModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_GameOrder>;
  where?: InputMaybe<Ds_GameWhereInput>;
};


export type World__QueryDsGameSettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_GameSettingsOrder>;
  where?: InputMaybe<Ds_GameSettingsWhereInput>;
};


export type World__QueryDsMapModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_MapOrder>;
  where?: InputMaybe<Ds_MapWhereInput>;
};


export type World__QueryDsScoreModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_ScoreOrder>;
  where?: InputMaybe<Ds_ScoreWhereInput>;
};


export type World__QueryDsSettingsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_SettingsCounterOrder>;
  where?: InputMaybe<Ds_SettingsCounterWhereInput>;
};


export type World__QueryDsSettingsDetailsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_SettingsDetailsOrder>;
  where?: InputMaybe<Ds_SettingsDetailsWhereInput>;
};


export type World__QueryDsSettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_SettingsOrder>;
  where?: InputMaybe<Ds_SettingsWhereInput>;
};


export type World__QueryDsTokenMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_TokenMetadataOrder>;
  where?: InputMaybe<Ds_TokenMetadataWhereInput>;
};


export type World__QueryDsTrophyCreationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_TrophyCreationOrder>;
  where?: InputMaybe<Ds_TrophyCreationWhereInput>;
};


export type World__QueryDsTrophyProgressionModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_TrophyProgressionOrder>;
  where?: InputMaybe<Ds_TrophyProgressionWhereInput>;
};


export type World__QueryDsV110BattleModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_BattleOrder>;
  where?: InputMaybe<Ds_V1_1_0_BattleWhereInput>;
};


export type World__QueryDsV110BoardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_BoardOrder>;
  where?: InputMaybe<Ds_V1_1_0_BoardWhereInput>;
};


export type World__QueryDsV110DraftModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_DraftOrder>;
  where?: InputMaybe<Ds_V1_1_0_DraftWhereInput>;
};


export type World__QueryDsV110GameActionEventModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_GameActionEventOrder>;
  where?: InputMaybe<Ds_V1_1_0_GameActionEventWhereInput>;
};


export type World__QueryDsV110GameCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_GameCounterOrder>;
  where?: InputMaybe<Ds_V1_1_0_GameCounterWhereInput>;
};


export type World__QueryDsV110GameEffectsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_GameEffectsOrder>;
  where?: InputMaybe<Ds_V1_1_0_GameEffectsWhereInput>;
};


export type World__QueryDsV110GameMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_GameMetadataOrder>;
  where?: InputMaybe<Ds_V1_1_0_GameMetadataWhereInput>;
};


export type World__QueryDsV110GameModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_GameOrder>;
  where?: InputMaybe<Ds_V1_1_0_GameWhereInput>;
};


export type World__QueryDsV110GameSettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_GameSettingsOrder>;
  where?: InputMaybe<Ds_V1_1_0_GameSettingsWhereInput>;
};


export type World__QueryDsV110MapModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_MapOrder>;
  where?: InputMaybe<Ds_V1_1_0_MapWhereInput>;
};


export type World__QueryDsV110ScoreModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_ScoreOrder>;
  where?: InputMaybe<Ds_V1_1_0_ScoreWhereInput>;
};


export type World__QueryDsV110SettingsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_SettingsCounterOrder>;
  where?: InputMaybe<Ds_V1_1_0_SettingsCounterWhereInput>;
};


export type World__QueryDsV110SettingsDetailsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_SettingsDetailsOrder>;
  where?: InputMaybe<Ds_V1_1_0_SettingsDetailsWhereInput>;
};


export type World__QueryDsV110SettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_SettingsOrder>;
  where?: InputMaybe<Ds_V1_1_0_SettingsWhereInput>;
};


export type World__QueryDsV110TokenMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_TokenMetadataOrder>;
  where?: InputMaybe<Ds_V1_1_0_TokenMetadataWhereInput>;
};


export type World__QueryDsV110TrophyCreationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_TrophyCreationOrder>;
  where?: InputMaybe<Ds_V1_1_0_TrophyCreationWhereInput>;
};


export type World__QueryDsV110TrophyProgressionModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_TrophyProgressionOrder>;
  where?: InputMaybe<Ds_V1_1_0_TrophyProgressionWhereInput>;
};


export type World__QueryDsV110WorldConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_0_WorldConfigOrder>;
  where?: InputMaybe<Ds_V1_1_0_WorldConfigWhereInput>;
};


export type World__QueryDsV111BattleModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_BattleOrder>;
  where?: InputMaybe<Ds_V1_1_1_BattleWhereInput>;
};


export type World__QueryDsV111BoardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_BoardOrder>;
  where?: InputMaybe<Ds_V1_1_1_BoardWhereInput>;
};


export type World__QueryDsV111DraftModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_DraftOrder>;
  where?: InputMaybe<Ds_V1_1_1_DraftWhereInput>;
};


export type World__QueryDsV111GameActionEventModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_GameActionEventOrder>;
  where?: InputMaybe<Ds_V1_1_1_GameActionEventWhereInput>;
};


export type World__QueryDsV111GameCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_GameCounterOrder>;
  where?: InputMaybe<Ds_V1_1_1_GameCounterWhereInput>;
};


export type World__QueryDsV111GameEffectsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_GameEffectsOrder>;
  where?: InputMaybe<Ds_V1_1_1_GameEffectsWhereInput>;
};


export type World__QueryDsV111GameMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_GameMetadataOrder>;
  where?: InputMaybe<Ds_V1_1_1_GameMetadataWhereInput>;
};


export type World__QueryDsV111GameModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_GameOrder>;
  where?: InputMaybe<Ds_V1_1_1_GameWhereInput>;
};


export type World__QueryDsV111GameSettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_GameSettingsOrder>;
  where?: InputMaybe<Ds_V1_1_1_GameSettingsWhereInput>;
};


export type World__QueryDsV111MapModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_MapOrder>;
  where?: InputMaybe<Ds_V1_1_1_MapWhereInput>;
};


export type World__QueryDsV111ScoreModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_ScoreOrder>;
  where?: InputMaybe<Ds_V1_1_1_ScoreWhereInput>;
};


export type World__QueryDsV111SettingsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_SettingsCounterOrder>;
  where?: InputMaybe<Ds_V1_1_1_SettingsCounterWhereInput>;
};


export type World__QueryDsV111SettingsDetailsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_SettingsDetailsOrder>;
  where?: InputMaybe<Ds_V1_1_1_SettingsDetailsWhereInput>;
};


export type World__QueryDsV111SettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_SettingsOrder>;
  where?: InputMaybe<Ds_V1_1_1_SettingsWhereInput>;
};


export type World__QueryDsV111TokenMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_TokenMetadataOrder>;
  where?: InputMaybe<Ds_V1_1_1_TokenMetadataWhereInput>;
};


export type World__QueryDsV111TrophyCreationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_TrophyCreationOrder>;
  where?: InputMaybe<Ds_V1_1_1_TrophyCreationWhereInput>;
};


export type World__QueryDsV111TrophyProgressionModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_TrophyProgressionOrder>;
  where?: InputMaybe<Ds_V1_1_1_TrophyProgressionWhereInput>;
};


export type World__QueryDsV111WorldConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_1_WorldConfigOrder>;
  where?: InputMaybe<Ds_V1_1_1_WorldConfigWhereInput>;
};


export type World__QueryDsV112BattleModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_BattleOrder>;
  where?: InputMaybe<Ds_V1_1_2_BattleWhereInput>;
};


export type World__QueryDsV112BoardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_BoardOrder>;
  where?: InputMaybe<Ds_V1_1_2_BoardWhereInput>;
};


export type World__QueryDsV112DraftModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_DraftOrder>;
  where?: InputMaybe<Ds_V1_1_2_DraftWhereInput>;
};


export type World__QueryDsV112GameActionEventModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_GameActionEventOrder>;
  where?: InputMaybe<Ds_V1_1_2_GameActionEventWhereInput>;
};


export type World__QueryDsV112GameCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_GameCounterOrder>;
  where?: InputMaybe<Ds_V1_1_2_GameCounterWhereInput>;
};


export type World__QueryDsV112GameEffectsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_GameEffectsOrder>;
  where?: InputMaybe<Ds_V1_1_2_GameEffectsWhereInput>;
};


export type World__QueryDsV112GameMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_GameMetadataOrder>;
  where?: InputMaybe<Ds_V1_1_2_GameMetadataWhereInput>;
};


export type World__QueryDsV112GameModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_GameOrder>;
  where?: InputMaybe<Ds_V1_1_2_GameWhereInput>;
};


export type World__QueryDsV112GameSettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_GameSettingsOrder>;
  where?: InputMaybe<Ds_V1_1_2_GameSettingsWhereInput>;
};


export type World__QueryDsV112MapModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_MapOrder>;
  where?: InputMaybe<Ds_V1_1_2_MapWhereInput>;
};


export type World__QueryDsV112ScoreModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_ScoreOrder>;
  where?: InputMaybe<Ds_V1_1_2_ScoreWhereInput>;
};


export type World__QueryDsV112SettingsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_SettingsCounterOrder>;
  where?: InputMaybe<Ds_V1_1_2_SettingsCounterWhereInput>;
};


export type World__QueryDsV112SettingsDetailsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_SettingsDetailsOrder>;
  where?: InputMaybe<Ds_V1_1_2_SettingsDetailsWhereInput>;
};


export type World__QueryDsV112SettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_SettingsOrder>;
  where?: InputMaybe<Ds_V1_1_2_SettingsWhereInput>;
};


export type World__QueryDsV112TokenMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_TokenMetadataOrder>;
  where?: InputMaybe<Ds_V1_1_2_TokenMetadataWhereInput>;
};


export type World__QueryDsV112TrophyCreationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_TrophyCreationOrder>;
  where?: InputMaybe<Ds_V1_1_2_TrophyCreationWhereInput>;
};


export type World__QueryDsV112TrophyProgressionModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_TrophyProgressionOrder>;
  where?: InputMaybe<Ds_V1_1_2_TrophyProgressionWhereInput>;
};


export type World__QueryDsV112WorldConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_2_WorldConfigOrder>;
  where?: InputMaybe<Ds_V1_1_2_WorldConfigWhereInput>;
};


export type World__QueryDsV113BattleModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_BattleOrder>;
  where?: InputMaybe<Ds_V1_1_3_BattleWhereInput>;
};


export type World__QueryDsV113BoardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_BoardOrder>;
  where?: InputMaybe<Ds_V1_1_3_BoardWhereInput>;
};


export type World__QueryDsV113DraftModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_DraftOrder>;
  where?: InputMaybe<Ds_V1_1_3_DraftWhereInput>;
};


export type World__QueryDsV113GameActionEventModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_GameActionEventOrder>;
  where?: InputMaybe<Ds_V1_1_3_GameActionEventWhereInput>;
};


export type World__QueryDsV113GameCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_GameCounterOrder>;
  where?: InputMaybe<Ds_V1_1_3_GameCounterWhereInput>;
};


export type World__QueryDsV113GameEffectsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_GameEffectsOrder>;
  where?: InputMaybe<Ds_V1_1_3_GameEffectsWhereInput>;
};


export type World__QueryDsV113GameMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_GameMetadataOrder>;
  where?: InputMaybe<Ds_V1_1_3_GameMetadataWhereInput>;
};


export type World__QueryDsV113GameModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_GameOrder>;
  where?: InputMaybe<Ds_V1_1_3_GameWhereInput>;
};


export type World__QueryDsV113GameSettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_GameSettingsOrder>;
  where?: InputMaybe<Ds_V1_1_3_GameSettingsWhereInput>;
};


export type World__QueryDsV113MapModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_MapOrder>;
  where?: InputMaybe<Ds_V1_1_3_MapWhereInput>;
};


export type World__QueryDsV113ScoreModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_ScoreOrder>;
  where?: InputMaybe<Ds_V1_1_3_ScoreWhereInput>;
};


export type World__QueryDsV113SettingsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_SettingsCounterOrder>;
  where?: InputMaybe<Ds_V1_1_3_SettingsCounterWhereInput>;
};


export type World__QueryDsV113SettingsDetailsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_SettingsDetailsOrder>;
  where?: InputMaybe<Ds_V1_1_3_SettingsDetailsWhereInput>;
};


export type World__QueryDsV113SettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_SettingsOrder>;
  where?: InputMaybe<Ds_V1_1_3_SettingsWhereInput>;
};


export type World__QueryDsV113TokenMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_TokenMetadataOrder>;
  where?: InputMaybe<Ds_V1_1_3_TokenMetadataWhereInput>;
};


export type World__QueryDsV113TrophyCreationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_TrophyCreationOrder>;
  where?: InputMaybe<Ds_V1_1_3_TrophyCreationWhereInput>;
};


export type World__QueryDsV113TrophyProgressionModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_TrophyProgressionOrder>;
  where?: InputMaybe<Ds_V1_1_3_TrophyProgressionWhereInput>;
};


export type World__QueryDsV113WorldConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_3_WorldConfigOrder>;
  where?: InputMaybe<Ds_V1_1_3_WorldConfigWhereInput>;
};


export type World__QueryDsV114BattleModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_BattleOrder>;
  where?: InputMaybe<Ds_V1_1_4_BattleWhereInput>;
};


export type World__QueryDsV114BoardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_BoardOrder>;
  where?: InputMaybe<Ds_V1_1_4_BoardWhereInput>;
};


export type World__QueryDsV114DraftModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_DraftOrder>;
  where?: InputMaybe<Ds_V1_1_4_DraftWhereInput>;
};


export type World__QueryDsV114GameActionEventModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_GameActionEventOrder>;
  where?: InputMaybe<Ds_V1_1_4_GameActionEventWhereInput>;
};


export type World__QueryDsV114GameCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_GameCounterOrder>;
  where?: InputMaybe<Ds_V1_1_4_GameCounterWhereInput>;
};


export type World__QueryDsV114GameEffectsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_GameEffectsOrder>;
  where?: InputMaybe<Ds_V1_1_4_GameEffectsWhereInput>;
};


export type World__QueryDsV114GameMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_GameMetadataOrder>;
  where?: InputMaybe<Ds_V1_1_4_GameMetadataWhereInput>;
};


export type World__QueryDsV114GameModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_GameOrder>;
  where?: InputMaybe<Ds_V1_1_4_GameWhereInput>;
};


export type World__QueryDsV114GameSettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_GameSettingsOrder>;
  where?: InputMaybe<Ds_V1_1_4_GameSettingsWhereInput>;
};


export type World__QueryDsV114MapModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_MapOrder>;
  where?: InputMaybe<Ds_V1_1_4_MapWhereInput>;
};


export type World__QueryDsV114ScoreModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_ScoreOrder>;
  where?: InputMaybe<Ds_V1_1_4_ScoreWhereInput>;
};


export type World__QueryDsV114SettingsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_SettingsCounterOrder>;
  where?: InputMaybe<Ds_V1_1_4_SettingsCounterWhereInput>;
};


export type World__QueryDsV114SettingsDetailsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_SettingsDetailsOrder>;
  where?: InputMaybe<Ds_V1_1_4_SettingsDetailsWhereInput>;
};


export type World__QueryDsV114SettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_SettingsOrder>;
  where?: InputMaybe<Ds_V1_1_4_SettingsWhereInput>;
};


export type World__QueryDsV114TokenMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_TokenMetadataOrder>;
  where?: InputMaybe<Ds_V1_1_4_TokenMetadataWhereInput>;
};


export type World__QueryDsV114TrophyCreationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_TrophyCreationOrder>;
  where?: InputMaybe<Ds_V1_1_4_TrophyCreationWhereInput>;
};


export type World__QueryDsV114TrophyProgressionModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_TrophyProgressionOrder>;
  where?: InputMaybe<Ds_V1_1_4_TrophyProgressionWhereInput>;
};


export type World__QueryDsV114WorldConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_1_4_WorldConfigOrder>;
  where?: InputMaybe<Ds_V1_1_4_WorldConfigWhereInput>;
};


export type World__QueryDsV120BattleModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_BattleOrder>;
  where?: InputMaybe<Ds_V1_2_0_BattleWhereInput>;
};


export type World__QueryDsV120BattleResourcesModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_BattleResourcesOrder>;
  where?: InputMaybe<Ds_V1_2_0_BattleResourcesWhereInput>;
};


export type World__QueryDsV120CardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_CardOrder>;
  where?: InputMaybe<Ds_V1_2_0_CardWhereInput>;
};


export type World__QueryDsV120CardsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_CardsCounterOrder>;
  where?: InputMaybe<Ds_V1_2_0_CardsCounterWhereInput>;
};


export type World__QueryDsV120CreatureCardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_CreatureCardOrder>;
  where?: InputMaybe<Ds_V1_2_0_CreatureCardWhereInput>;
};


export type World__QueryDsV120DraftModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_DraftOrder>;
  where?: InputMaybe<Ds_V1_2_0_DraftWhereInput>;
};


export type World__QueryDsV120GameActionEventModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_GameActionEventOrder>;
  where?: InputMaybe<Ds_V1_2_0_GameActionEventWhereInput>;
};


export type World__QueryDsV120GameCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_GameCounterOrder>;
  where?: InputMaybe<Ds_V1_2_0_GameCounterWhereInput>;
};


export type World__QueryDsV120GameEffectsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_GameEffectsOrder>;
  where?: InputMaybe<Ds_V1_2_0_GameEffectsWhereInput>;
};


export type World__QueryDsV120GameMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_GameMetadataOrder>;
  where?: InputMaybe<Ds_V1_2_0_GameMetadataWhereInput>;
};


export type World__QueryDsV120GameModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_GameOrder>;
  where?: InputMaybe<Ds_V1_2_0_GameWhereInput>;
};


export type World__QueryDsV120GameSettingsMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_GameSettingsMetadataOrder>;
  where?: InputMaybe<Ds_V1_2_0_GameSettingsMetadataWhereInput>;
};


export type World__QueryDsV120GameSettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_GameSettingsOrder>;
  where?: InputMaybe<Ds_V1_2_0_GameSettingsWhereInput>;
};


export type World__QueryDsV120MapModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_MapOrder>;
  where?: InputMaybe<Ds_V1_2_0_MapWhereInput>;
};


export type World__QueryDsV120ScoreModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_ScoreOrder>;
  where?: InputMaybe<Ds_V1_2_0_ScoreWhereInput>;
};


export type World__QueryDsV120SettingsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_SettingsCounterOrder>;
  where?: InputMaybe<Ds_V1_2_0_SettingsCounterWhereInput>;
};


export type World__QueryDsV120SettingsDetailsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_SettingsDetailsOrder>;
  where?: InputMaybe<Ds_V1_2_0_SettingsDetailsWhereInput>;
};


export type World__QueryDsV120SettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_SettingsOrder>;
  where?: InputMaybe<Ds_V1_2_0_SettingsWhereInput>;
};


export type World__QueryDsV120SpellCardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_SpellCardOrder>;
  where?: InputMaybe<Ds_V1_2_0_SpellCardWhereInput>;
};


export type World__QueryDsV120TokenMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_TokenMetadataOrder>;
  where?: InputMaybe<Ds_V1_2_0_TokenMetadataWhereInput>;
};


export type World__QueryDsV120TrophyCreationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_TrophyCreationOrder>;
  where?: InputMaybe<Ds_V1_2_0_TrophyCreationWhereInput>;
};


export type World__QueryDsV120TrophyProgressionModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_V1_2_0_TrophyProgressionOrder>;
  where?: InputMaybe<Ds_V1_2_0_TrophyProgressionWhereInput>;
};


export type World__QueryDsWorldConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ds_WorldConfigOrder>;
  where?: InputMaybe<Ds_WorldConfigWhereInput>;
};


export type World__QueryEntitiesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  keys?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type World__QueryEntityArgs = {
  id: Scalars['ID']['input'];
};


export type World__QueryEventMessageArgs = {
  id: Scalars['ID']['input'];
};


export type World__QueryEventMessagesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  keys?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type World__QueryEventsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  keys?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type World__QueryLsTournamentsV0TokenModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ls_Tournaments_V0_TokenOrder>;
  where?: InputMaybe<Ls_Tournaments_V0_TokenWhereInput>;
};


export type World__QueryLsTournamentsV0TournamentConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ls_Tournaments_V0_TournamentConfigOrder>;
  where?: InputMaybe<Ls_Tournaments_V0_TournamentConfigWhereInput>;
};


export type World__QueryLsTournamentsV0TournamentEntriesAddressModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ls_Tournaments_V0_TournamentEntriesAddressOrder>;
  where?: InputMaybe<Ls_Tournaments_V0_TournamentEntriesAddressWhereInput>;
};


export type World__QueryLsTournamentsV0TournamentEntriesModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ls_Tournaments_V0_TournamentEntriesOrder>;
  where?: InputMaybe<Ls_Tournaments_V0_TournamentEntriesWhereInput>;
};


export type World__QueryLsTournamentsV0TournamentEntryAddressesModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ls_Tournaments_V0_TournamentEntryAddressesOrder>;
  where?: InputMaybe<Ls_Tournaments_V0_TournamentEntryAddressesWhereInput>;
};


export type World__QueryLsTournamentsV0TournamentGameModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ls_Tournaments_V0_TournamentGameOrder>;
  where?: InputMaybe<Ls_Tournaments_V0_TournamentGameWhereInput>;
};


export type World__QueryLsTournamentsV0TournamentModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ls_Tournaments_V0_TournamentOrder>;
  where?: InputMaybe<Ls_Tournaments_V0_TournamentWhereInput>;
};


export type World__QueryLsTournamentsV0TournamentPrizeModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ls_Tournaments_V0_TournamentPrizeOrder>;
  where?: InputMaybe<Ls_Tournaments_V0_TournamentPrizeWhereInput>;
};


export type World__QueryLsTournamentsV0TournamentScoresModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ls_Tournaments_V0_TournamentScoresOrder>;
  where?: InputMaybe<Ls_Tournaments_V0_TournamentScoresWhereInput>;
};


export type World__QueryLsTournamentsV0TournamentStartsAddressModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ls_Tournaments_V0_TournamentStartsAddressOrder>;
  where?: InputMaybe<Ls_Tournaments_V0_TournamentStartsAddressWhereInput>;
};


export type World__QueryLsTournamentsV0TournamentTotalsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Ls_Tournaments_V0_TournamentTotalsOrder>;
  where?: InputMaybe<Ls_Tournaments_V0_TournamentTotalsWhereInput>;
};


export type World__QueryLstDbgTokenModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Lst_Dbg_TokenOrder>;
  where?: InputMaybe<Lst_Dbg_TokenWhereInput>;
};


export type World__QueryLstDbgTournamentConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Lst_Dbg_TournamentConfigOrder>;
  where?: InputMaybe<Lst_Dbg_TournamentConfigWhereInput>;
};


export type World__QueryLstDbgTournamentEntriesAddressModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Lst_Dbg_TournamentEntriesAddressOrder>;
  where?: InputMaybe<Lst_Dbg_TournamentEntriesAddressWhereInput>;
};


export type World__QueryLstDbgTournamentEntriesModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Lst_Dbg_TournamentEntriesOrder>;
  where?: InputMaybe<Lst_Dbg_TournamentEntriesWhereInput>;
};


export type World__QueryLstDbgTournamentEntryAddressesModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Lst_Dbg_TournamentEntryAddressesOrder>;
  where?: InputMaybe<Lst_Dbg_TournamentEntryAddressesWhereInput>;
};


export type World__QueryLstDbgTournamentGameModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Lst_Dbg_TournamentGameOrder>;
  where?: InputMaybe<Lst_Dbg_TournamentGameWhereInput>;
};


export type World__QueryLstDbgTournamentModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Lst_Dbg_TournamentOrder>;
  where?: InputMaybe<Lst_Dbg_TournamentWhereInput>;
};


export type World__QueryLstDbgTournamentPrizeModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Lst_Dbg_TournamentPrizeOrder>;
  where?: InputMaybe<Lst_Dbg_TournamentPrizeWhereInput>;
};


export type World__QueryLstDbgTournamentScoresModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Lst_Dbg_TournamentScoresOrder>;
  where?: InputMaybe<Lst_Dbg_TournamentScoresWhereInput>;
};


export type World__QueryLstDbgTournamentStartsAddressModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Lst_Dbg_TournamentStartsAddressOrder>;
  where?: InputMaybe<Lst_Dbg_TournamentStartsAddressWhereInput>;
};


export type World__QueryLstDbgTournamentTotalsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Lst_Dbg_TournamentTotalsOrder>;
  where?: InputMaybe<Lst_Dbg_TournamentTotalsWhereInput>;
};


export type World__QueryMetadatasArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type World__QueryModelArgs = {
  id: Scalars['ID']['input'];
};


export type World__QueryModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<World__ModelOrder>;
};


export type World__QueryPgEntryCountModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_EntryCountOrder>;
  where?: InputMaybe<Pg_EntryCountWhereInput>;
};


export type World__QueryPgGameCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_GameCounterOrder>;
  where?: InputMaybe<Pg_GameCounterWhereInput>;
};


export type World__QueryPgGameMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_GameMetadataOrder>;
  where?: InputMaybe<Pg_GameMetadataWhereInput>;
};


export type World__QueryPgLeaderboardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_LeaderboardOrder>;
  where?: InputMaybe<Pg_LeaderboardWhereInput>;
};


export type World__QueryPgPlatformMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_PlatformMetricsOrder>;
  where?: InputMaybe<Pg_PlatformMetricsWhereInput>;
};


export type World__QueryPgPrizeClaimModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_PrizeClaimOrder>;
  where?: InputMaybe<Pg_PrizeClaimWhereInput>;
};


export type World__QueryPgPrizeMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_PrizeMetricsOrder>;
  where?: InputMaybe<Pg_PrizeMetricsWhereInput>;
};


export type World__QueryPgPrizeModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_PrizeOrder>;
  where?: InputMaybe<Pg_PrizeWhereInput>;
};


export type World__QueryPgRegistrationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_RegistrationOrder>;
  where?: InputMaybe<Pg_RegistrationWhereInput>;
};


export type World__QueryPgScoreModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_ScoreOrder>;
  where?: InputMaybe<Pg_ScoreWhereInput>;
};


export type World__QueryPgSettingsCounterModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_SettingsCounterOrder>;
  where?: InputMaybe<Pg_SettingsCounterWhereInput>;
};


export type World__QueryPgSettingsDetailsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_SettingsDetailsOrder>;
  where?: InputMaybe<Pg_SettingsDetailsWhereInput>;
};


export type World__QueryPgSettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_SettingsOrder>;
  where?: InputMaybe<Pg_SettingsWhereInput>;
};


export type World__QueryPgTokenMetadataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_TokenMetadataOrder>;
  where?: InputMaybe<Pg_TokenMetadataWhereInput>;
};


export type World__QueryPgTokenModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_TokenOrder>;
  where?: InputMaybe<Pg_TokenWhereInput>;
};


export type World__QueryPgTournamentConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_TournamentConfigOrder>;
  where?: InputMaybe<Pg_TournamentConfigWhereInput>;
};


export type World__QueryPgTournamentModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_TournamentOrder>;
  where?: InputMaybe<Pg_TournamentWhereInput>;
};


export type World__QueryPgTournamentTokenMetricsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Pg_TournamentTokenMetricsOrder>;
  where?: InputMaybe<Pg_TournamentTokenMetricsWhereInput>;
};


export type World__QueryS0DarkshuffleBattleModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Darkshuffle_BattleOrder>;
  where?: InputMaybe<S0_Darkshuffle_BattleWhereInput>;
};


export type World__QueryS0DarkshuffleBoardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Darkshuffle_BoardOrder>;
  where?: InputMaybe<S0_Darkshuffle_BoardWhereInput>;
};


export type World__QueryS0DarkshuffleDonationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Darkshuffle_DonationOrder>;
  where?: InputMaybe<S0_Darkshuffle_DonationWhereInput>;
};


export type World__QueryS0DarkshuffleDraftModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Darkshuffle_DraftOrder>;
  where?: InputMaybe<S0_Darkshuffle_DraftWhereInput>;
};


export type World__QueryS0DarkshuffleGameEffectsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Darkshuffle_GameEffectsOrder>;
  where?: InputMaybe<S0_Darkshuffle_GameEffectsWhereInput>;
};


export type World__QueryS0DarkshuffleGameModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Darkshuffle_GameOrder>;
  where?: InputMaybe<S0_Darkshuffle_GameWhereInput>;
};


export type World__QueryS0DarkshuffleGameSettingsModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Darkshuffle_GameSettingsOrder>;
  where?: InputMaybe<S0_Darkshuffle_GameSettingsWhereInput>;
};


export type World__QueryS0DarkshuffleGameStartDataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Darkshuffle_GameStartDataOrder>;
  where?: InputMaybe<S0_Darkshuffle_GameStartDataWhereInput>;
};


export type World__QueryS0DarkshuffleGameStartEventModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Darkshuffle_GameStartEventOrder>;
  where?: InputMaybe<S0_Darkshuffle_GameStartEventWhereInput>;
};


export type World__QueryS0DarkshuffleLeaderboardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Darkshuffle_LeaderboardOrder>;
  where?: InputMaybe<S0_Darkshuffle_LeaderboardWhereInput>;
};


export type World__QueryS0DarkshuffleMapModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Darkshuffle_MapOrder>;
  where?: InputMaybe<S0_Darkshuffle_MapWhereInput>;
};


export type World__QueryS0DarkshuffleSeasonModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Darkshuffle_SeasonOrder>;
  where?: InputMaybe<S0_Darkshuffle_SeasonWhereInput>;
};


export type World__QueryS0DarkshuffleTrophyCreationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Darkshuffle_TrophyCreationOrder>;
  where?: InputMaybe<S0_Darkshuffle_TrophyCreationWhereInput>;
};


export type World__QueryS0DarkshuffleTrophyProgressionModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Darkshuffle_TrophyProgressionOrder>;
  where?: InputMaybe<S0_Darkshuffle_TrophyProgressionWhereInput>;
};


export type World__QueryS0DarkshuffleWorldConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Darkshuffle_WorldConfigOrder>;
  where?: InputMaybe<S0_Darkshuffle_WorldConfigWhereInput>;
};


export type World__QueryS0EternumAcceptOrderModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_AcceptOrderOrder>;
  where?: InputMaybe<S0_Eternum_AcceptOrderWhereInput>;
};


export type World__QueryS0EternumAcceptPartialOrderModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_AcceptPartialOrderOrder>;
  where?: InputMaybe<S0_Eternum_AcceptPartialOrderWhereInput>;
};


export type World__QueryS0EternumAddressNameModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_AddressNameOrder>;
  where?: InputMaybe<S0_Eternum_AddressNameWhereInput>;
};


export type World__QueryS0EternumArmyModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ArmyOrder>;
  where?: InputMaybe<S0_Eternum_ArmyWhereInput>;
};


export type World__QueryS0EternumArrivalTimeModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ArrivalTimeOrder>;
  where?: InputMaybe<S0_Eternum_ArrivalTimeWhereInput>;
};


export type World__QueryS0EternumBankConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_BankConfigOrder>;
  where?: InputMaybe<S0_Eternum_BankConfigWhereInput>;
};


export type World__QueryS0EternumBankModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_BankOrder>;
  where?: InputMaybe<S0_Eternum_BankWhereInput>;
};


export type World__QueryS0EternumBattleClaimDataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_BattleClaimDataOrder>;
  where?: InputMaybe<S0_Eternum_BattleClaimDataWhereInput>;
};


export type World__QueryS0EternumBattleConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_BattleConfigOrder>;
  where?: InputMaybe<S0_Eternum_BattleConfigWhereInput>;
};


export type World__QueryS0EternumBattleJoinDataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_BattleJoinDataOrder>;
  where?: InputMaybe<S0_Eternum_BattleJoinDataWhereInput>;
};


export type World__QueryS0EternumBattleLeaveDataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_BattleLeaveDataOrder>;
  where?: InputMaybe<S0_Eternum_BattleLeaveDataWhereInput>;
};


export type World__QueryS0EternumBattleModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_BattleOrder>;
  where?: InputMaybe<S0_Eternum_BattleWhereInput>;
};


export type World__QueryS0EternumBattlePillageDataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_BattlePillageDataOrder>;
  where?: InputMaybe<S0_Eternum_BattlePillageDataWhereInput>;
};


export type World__QueryS0EternumBattleStartDataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_BattleStartDataOrder>;
  where?: InputMaybe<S0_Eternum_BattleStartDataWhereInput>;
};


export type World__QueryS0EternumBuildingCategoryPopConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_BuildingCategoryPopConfigOrder>;
  where?: InputMaybe<S0_Eternum_BuildingCategoryPopConfigWhereInput>;
};


export type World__QueryS0EternumBuildingConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_BuildingConfigOrder>;
  where?: InputMaybe<S0_Eternum_BuildingConfigWhereInput>;
};


export type World__QueryS0EternumBuildingGeneralConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_BuildingGeneralConfigOrder>;
  where?: InputMaybe<S0_Eternum_BuildingGeneralConfigWhereInput>;
};


export type World__QueryS0EternumBuildingModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_BuildingOrder>;
  where?: InputMaybe<S0_Eternum_BuildingWhereInput>;
};


export type World__QueryS0EternumBuildingQuantityv2ModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_BuildingQuantityv2Order>;
  where?: InputMaybe<S0_Eternum_BuildingQuantityv2WhereInput>;
};


export type World__QueryS0EternumBurnDonkeyModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_BurnDonkeyOrder>;
  where?: InputMaybe<S0_Eternum_BurnDonkeyWhereInput>;
};


export type World__QueryS0EternumCancelOrderModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_CancelOrderOrder>;
  where?: InputMaybe<S0_Eternum_CancelOrderWhereInput>;
};


export type World__QueryS0EternumCapacityCategoryModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_CapacityCategoryOrder>;
  where?: InputMaybe<S0_Eternum_CapacityCategoryWhereInput>;
};


export type World__QueryS0EternumCapacityConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_CapacityConfigOrder>;
  where?: InputMaybe<S0_Eternum_CapacityConfigWhereInput>;
};


export type World__QueryS0EternumContributionModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ContributionOrder>;
  where?: InputMaybe<S0_Eternum_ContributionWhereInput>;
};


export type World__QueryS0EternumCreateGuildModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_CreateGuildOrder>;
  where?: InputMaybe<S0_Eternum_CreateGuildWhereInput>;
};


export type World__QueryS0EternumCreateOrderModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_CreateOrderOrder>;
  where?: InputMaybe<S0_Eternum_CreateOrderWhereInput>;
};


export type World__QueryS0EternumDetachedResourceModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_DetachedResourceOrder>;
  where?: InputMaybe<S0_Eternum_DetachedResourceWhereInput>;
};


export type World__QueryS0EternumEntityNameModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_EntityNameOrder>;
  where?: InputMaybe<S0_Eternum_EntityNameWhereInput>;
};


export type World__QueryS0EternumEntityOwnerModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_EntityOwnerOrder>;
  where?: InputMaybe<S0_Eternum_EntityOwnerWhereInput>;
};


export type World__QueryS0EternumEpochModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_EpochOrder>;
  where?: InputMaybe<S0_Eternum_EpochWhereInput>;
};


export type World__QueryS0EternumFragmentMineDiscoveredModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_FragmentMineDiscoveredOrder>;
  where?: InputMaybe<S0_Eternum_FragmentMineDiscoveredWhereInput>;
};


export type World__QueryS0EternumGameEndedModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_GameEndedOrder>;
  where?: InputMaybe<S0_Eternum_GameEndedWhereInput>;
};


export type World__QueryS0EternumGuildMemberModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_GuildMemberOrder>;
  where?: InputMaybe<S0_Eternum_GuildMemberWhereInput>;
};


export type World__QueryS0EternumGuildModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_GuildOrder>;
  where?: InputMaybe<S0_Eternum_GuildWhereInput>;
};


export type World__QueryS0EternumGuildWhitelistModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_GuildWhitelistOrder>;
  where?: InputMaybe<S0_Eternum_GuildWhitelistWhereInput>;
};


export type World__QueryS0EternumHealthModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_HealthOrder>;
  where?: InputMaybe<S0_Eternum_HealthWhereInput>;
};


export type World__QueryS0EternumHyperstructureCoOwnersChangeModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_HyperstructureCoOwnersChangeOrder>;
  where?: InputMaybe<S0_Eternum_HyperstructureCoOwnersChangeWhereInput>;
};


export type World__QueryS0EternumHyperstructureConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_HyperstructureConfigOrder>;
  where?: InputMaybe<S0_Eternum_HyperstructureConfigWhereInput>;
};


export type World__QueryS0EternumHyperstructureContributionModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_HyperstructureContributionOrder>;
  where?: InputMaybe<S0_Eternum_HyperstructureContributionWhereInput>;
};


export type World__QueryS0EternumHyperstructureFinishedModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_HyperstructureFinishedOrder>;
  where?: InputMaybe<S0_Eternum_HyperstructureFinishedWhereInput>;
};


export type World__QueryS0EternumHyperstructureModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_HyperstructureOrder>;
  where?: InputMaybe<S0_Eternum_HyperstructureWhereInput>;
};


export type World__QueryS0EternumHyperstructureResourceConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_HyperstructureResourceConfigOrder>;
  where?: InputMaybe<S0_Eternum_HyperstructureResourceConfigWhereInput>;
};


export type World__QueryS0EternumHyperstructureStartedModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_HyperstructureStartedOrder>;
  where?: InputMaybe<S0_Eternum_HyperstructureStartedWhereInput>;
};


export type World__QueryS0EternumJoinGuildModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_JoinGuildOrder>;
  where?: InputMaybe<S0_Eternum_JoinGuildWhereInput>;
};


export type World__QueryS0EternumLeaderboardEntryModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_LeaderboardEntryOrder>;
  where?: InputMaybe<S0_Eternum_LeaderboardEntryWhereInput>;
};


export type World__QueryS0EternumLeaderboardModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_LeaderboardOrder>;
  where?: InputMaybe<S0_Eternum_LeaderboardWhereInput>;
};


export type World__QueryS0EternumLeaderboardRegisterContributionModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_LeaderboardRegisterContributionOrder>;
  where?: InputMaybe<S0_Eternum_LeaderboardRegisterContributionWhereInput>;
};


export type World__QueryS0EternumLeaderboardRegisterShareModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_LeaderboardRegisterShareOrder>;
  where?: InputMaybe<S0_Eternum_LeaderboardRegisterShareWhereInput>;
};


export type World__QueryS0EternumLeaderboardRegisteredModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_LeaderboardRegisteredOrder>;
  where?: InputMaybe<S0_Eternum_LeaderboardRegisteredWhereInput>;
};


export type World__QueryS0EternumLeaderboardRewardClaimedModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_LeaderboardRewardClaimedOrder>;
  where?: InputMaybe<S0_Eternum_LeaderboardRewardClaimedWhereInput>;
};


export type World__QueryS0EternumLevelingConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_LevelingConfigOrder>;
  where?: InputMaybe<S0_Eternum_LevelingConfigWhereInput>;
};


export type World__QueryS0EternumLiquidityEventModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_LiquidityEventOrder>;
  where?: InputMaybe<S0_Eternum_LiquidityEventWhereInput>;
};


export type World__QueryS0EternumLiquidityModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_LiquidityOrder>;
  where?: InputMaybe<S0_Eternum_LiquidityWhereInput>;
};


export type World__QueryS0EternumMapConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_MapConfigOrder>;
  where?: InputMaybe<S0_Eternum_MapConfigWhereInput>;
};


export type World__QueryS0EternumMapExploredModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_MapExploredOrder>;
  where?: InputMaybe<S0_Eternum_MapExploredWhereInput>;
};


export type World__QueryS0EternumMarketModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_MarketOrder>;
  where?: InputMaybe<S0_Eternum_MarketWhereInput>;
};


export type World__QueryS0EternumMercenariesConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_MercenariesConfigOrder>;
  where?: InputMaybe<S0_Eternum_MercenariesConfigWhereInput>;
};


export type World__QueryS0EternumMessageModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_MessageOrder>;
  where?: InputMaybe<S0_Eternum_MessageWhereInput>;
};


export type World__QueryS0EternumMovableModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_MovableOrder>;
  where?: InputMaybe<S0_Eternum_MovableWhereInput>;
};


export type World__QueryS0EternumOrdersModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_OrdersOrder>;
  where?: InputMaybe<S0_Eternum_OrdersWhereInput>;
};


export type World__QueryS0EternumOwnedResourcesTrackerModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_OwnedResourcesTrackerOrder>;
  where?: InputMaybe<S0_Eternum_OwnedResourcesTrackerWhereInput>;
};


export type World__QueryS0EternumOwnerModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_OwnerOrder>;
  where?: InputMaybe<S0_Eternum_OwnerWhereInput>;
};


export type World__QueryS0EternumPopulationConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_PopulationConfigOrder>;
  where?: InputMaybe<S0_Eternum_PopulationConfigWhereInput>;
};


export type World__QueryS0EternumPopulationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_PopulationOrder>;
  where?: InputMaybe<S0_Eternum_PopulationWhereInput>;
};


export type World__QueryS0EternumPositionModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_PositionOrder>;
  where?: InputMaybe<S0_Eternum_PositionWhereInput>;
};


export type World__QueryS0EternumProductionConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ProductionConfigOrder>;
  where?: InputMaybe<S0_Eternum_ProductionConfigWhereInput>;
};


export type World__QueryS0EternumProductionDeadlineModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ProductionDeadlineOrder>;
  where?: InputMaybe<S0_Eternum_ProductionDeadlineWhereInput>;
};


export type World__QueryS0EternumProductionInputModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ProductionInputOrder>;
  where?: InputMaybe<S0_Eternum_ProductionInputWhereInput>;
};


export type World__QueryS0EternumProductionModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ProductionOrder>;
  where?: InputMaybe<S0_Eternum_ProductionWhereInput>;
};


export type World__QueryS0EternumProductionOutputModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ProductionOutputOrder>;
  where?: InputMaybe<S0_Eternum_ProductionOutputWhereInput>;
};


export type World__QueryS0EternumProgressModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ProgressOrder>;
  where?: InputMaybe<S0_Eternum_ProgressWhereInput>;
};


export type World__QueryS0EternumProtecteeModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ProtecteeOrder>;
  where?: InputMaybe<S0_Eternum_ProtecteeWhereInput>;
};


export type World__QueryS0EternumProtectorModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ProtectorOrder>;
  where?: InputMaybe<S0_Eternum_ProtectorWhereInput>;
};


export type World__QueryS0EternumQuantityModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_QuantityOrder>;
  where?: InputMaybe<S0_Eternum_QuantityWhereInput>;
};


export type World__QueryS0EternumQuantityTrackerModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_QuantityTrackerOrder>;
  where?: InputMaybe<S0_Eternum_QuantityTrackerWhereInput>;
};


export type World__QueryS0EternumQuestBonusModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_QuestBonusOrder>;
  where?: InputMaybe<S0_Eternum_QuestBonusWhereInput>;
};


export type World__QueryS0EternumQuestConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_QuestConfigOrder>;
  where?: InputMaybe<S0_Eternum_QuestConfigWhereInput>;
};


export type World__QueryS0EternumQuestModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_QuestOrder>;
  where?: InputMaybe<S0_Eternum_QuestWhereInput>;
};


export type World__QueryS0EternumQuestRewardConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_QuestRewardConfigOrder>;
  where?: InputMaybe<S0_Eternum_QuestRewardConfigWhereInput>;
};


export type World__QueryS0EternumRealmLevelConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_RealmLevelConfigOrder>;
  where?: InputMaybe<S0_Eternum_RealmLevelConfigWhereInput>;
};


export type World__QueryS0EternumRealmMaxLevelConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_RealmMaxLevelConfigOrder>;
  where?: InputMaybe<S0_Eternum_RealmMaxLevelConfigWhereInput>;
};


export type World__QueryS0EternumRealmModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_RealmOrder>;
  where?: InputMaybe<S0_Eternum_RealmWhereInput>;
};


export type World__QueryS0EternumResourceAllowanceModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ResourceAllowanceOrder>;
  where?: InputMaybe<S0_Eternum_ResourceAllowanceWhereInput>;
};


export type World__QueryS0EternumResourceBridgeConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ResourceBridgeConfigOrder>;
  where?: InputMaybe<S0_Eternum_ResourceBridgeConfigWhereInput>;
};


export type World__QueryS0EternumResourceBridgeFeeSplitConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ResourceBridgeFeeSplitConfigOrder>;
  where?: InputMaybe<S0_Eternum_ResourceBridgeFeeSplitConfigWhereInput>;
};


export type World__QueryS0EternumResourceBridgeWhitelistConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ResourceBridgeWhitelistConfigOrder>;
  where?: InputMaybe<S0_Eternum_ResourceBridgeWhitelistConfigWhereInput>;
};


export type World__QueryS0EternumResourceCostModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ResourceCostOrder>;
  where?: InputMaybe<S0_Eternum_ResourceCostWhereInput>;
};


export type World__QueryS0EternumResourceModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ResourceOrder>;
  where?: InputMaybe<S0_Eternum_ResourceWhereInput>;
};


export type World__QueryS0EternumResourceTransferLockModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_ResourceTransferLockOrder>;
  where?: InputMaybe<S0_Eternum_ResourceTransferLockWhereInput>;
};


export type World__QueryS0EternumSeasonAddressesConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_SeasonAddressesConfigOrder>;
  where?: InputMaybe<S0_Eternum_SeasonAddressesConfigWhereInput>;
};


export type World__QueryS0EternumSeasonBridgeConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_SeasonBridgeConfigOrder>;
  where?: InputMaybe<S0_Eternum_SeasonBridgeConfigWhereInput>;
};


export type World__QueryS0EternumSeasonModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_SeasonOrder>;
  where?: InputMaybe<S0_Eternum_SeasonWhereInput>;
};


export type World__QueryS0EternumSettleRealmDataModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_SettleRealmDataOrder>;
  where?: InputMaybe<S0_Eternum_SettleRealmDataWhereInput>;
};


export type World__QueryS0EternumSettlementConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_SettlementConfigOrder>;
  where?: InputMaybe<S0_Eternum_SettlementConfigWhereInput>;
};


export type World__QueryS0EternumSpeedConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_SpeedConfigOrder>;
  where?: InputMaybe<S0_Eternum_SpeedConfigWhereInput>;
};


export type World__QueryS0EternumStaminaConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_StaminaConfigOrder>;
  where?: InputMaybe<S0_Eternum_StaminaConfigWhereInput>;
};


export type World__QueryS0EternumStaminaModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_StaminaOrder>;
  where?: InputMaybe<S0_Eternum_StaminaWhereInput>;
};


export type World__QueryS0EternumStaminaRefillConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_StaminaRefillConfigOrder>;
  where?: InputMaybe<S0_Eternum_StaminaRefillConfigWhereInput>;
};


export type World__QueryS0EternumStatusModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_StatusOrder>;
  where?: InputMaybe<S0_Eternum_StatusWhereInput>;
};


export type World__QueryS0EternumStructureCountModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_StructureCountOrder>;
  where?: InputMaybe<S0_Eternum_StructureCountWhereInput>;
};


export type World__QueryS0EternumStructureModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_StructureOrder>;
  where?: InputMaybe<S0_Eternum_StructureWhereInput>;
};


export type World__QueryS0EternumSwapEventModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_SwapEventOrder>;
  where?: InputMaybe<S0_Eternum_SwapEventWhereInput>;
};


export type World__QueryS0EternumTickConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_TickConfigOrder>;
  where?: InputMaybe<S0_Eternum_TickConfigWhereInput>;
};


export type World__QueryS0EternumTileModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_TileOrder>;
  where?: InputMaybe<S0_Eternum_TileWhereInput>;
};


export type World__QueryS0EternumTradeModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_TradeOrder>;
  where?: InputMaybe<S0_Eternum_TradeWhereInput>;
};


export type World__QueryS0EternumTransferModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_TransferOrder>;
  where?: InputMaybe<S0_Eternum_TransferWhereInput>;
};


export type World__QueryS0EternumTravelFoodCostConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_TravelFoodCostConfigOrder>;
  where?: InputMaybe<S0_Eternum_TravelFoodCostConfigWhereInput>;
};


export type World__QueryS0EternumTravelModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_TravelOrder>;
  where?: InputMaybe<S0_Eternum_TravelWhereInput>;
};


export type World__QueryS0EternumTravelStaminaCostConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_TravelStaminaCostConfigOrder>;
  where?: InputMaybe<S0_Eternum_TravelStaminaCostConfigWhereInput>;
};


export type World__QueryS0EternumTroopConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_TroopConfigOrder>;
  where?: InputMaybe<S0_Eternum_TroopConfigWhereInput>;
};


export type World__QueryS0EternumTrophyCreationModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_TrophyCreationOrder>;
  where?: InputMaybe<S0_Eternum_TrophyCreationWhereInput>;
};


export type World__QueryS0EternumTrophyProgressionModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_TrophyProgressionOrder>;
  where?: InputMaybe<S0_Eternum_TrophyProgressionWhereInput>;
};


export type World__QueryS0EternumVrfConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_VrfConfigOrder>;
  where?: InputMaybe<S0_Eternum_VrfConfigWhereInput>;
};


export type World__QueryS0EternumWeightConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_WeightConfigOrder>;
  where?: InputMaybe<S0_Eternum_WeightConfigWhereInput>;
};


export type World__QueryS0EternumWeightModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_WeightOrder>;
  where?: InputMaybe<S0_Eternum_WeightWhereInput>;
};


export type World__QueryS0EternumWorldConfigModelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<S0_Eternum_WorldConfigOrder>;
  where?: InputMaybe<S0_Eternum_WorldConfigWhereInput>;
};


export type World__QueryTokenBalancesArgs = {
  accountAddress: Scalars['String']['input'];
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type World__QueryTokenTransfersArgs = {
  accountAddress: Scalars['String']['input'];
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type World__QueryTransactionArgs = {
  transactionHash: Scalars['ID']['input'];
};


export type World__QueryTransactionsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};

export type World__Social = {
  __typename?: 'World__Social';
  name?: Maybe<Scalars['String']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type World__Subscription = {
  __typename?: 'World__Subscription';
  entityUpdated: World__Entity;
  eventEmitted: World__Event;
  eventMessageUpdated: World__EventMessage;
  modelRegistered: World__Model;
};


export type World__SubscriptionEntityUpdatedArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type World__SubscriptionEventEmittedArgs = {
  keys?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type World__SubscriptionEventMessageUpdatedArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type World__SubscriptionModelRegisteredArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
};

export type World__Transaction = {
  __typename?: 'World__Transaction';
  calldata?: Maybe<Array<Maybe<Scalars['felt252']['output']>>>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  executedAt?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  maxFee?: Maybe<Scalars['felt252']['output']>;
  nonce?: Maybe<Scalars['felt252']['output']>;
  senderAddress?: Maybe<Scalars['felt252']['output']>;
  signature?: Maybe<Array<Maybe<Scalars['felt252']['output']>>>;
  transactionHash?: Maybe<Scalars['felt252']['output']>;
};

export type World__TransactionConnection = {
  __typename?: 'World__TransactionConnection';
  edges?: Maybe<Array<Maybe<World__TransactionEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type World__TransactionEdge = {
  __typename?: 'World__TransactionEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<World__Transaction>;
};

export type Bodukan_Erc20Data = {
  __typename?: 'bodukan_ERC20Data';
  amount?: Maybe<Scalars['u128']['output']>;
};

export type Bodukan_Erc721Data = {
  __typename?: 'bodukan_ERC721Data';
  id?: Maybe<Scalars['u128']['output']>;
};

export type Bodukan_EntryCount = {
  __typename?: 'bodukan_EntryCount';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Bodukan_EntryCountConnection = {
  __typename?: 'bodukan_EntryCountConnection';
  edges?: Maybe<Array<Maybe<Bodukan_EntryCountEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_EntryCountEdge = {
  __typename?: 'bodukan_EntryCountEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_EntryCount>;
};

export type Bodukan_EntryCountOrder = {
  direction: OrderDirection;
  field: Bodukan_EntryCountOrderField;
};

export enum Bodukan_EntryCountOrderField {
  Count = 'COUNT',
  TournamentId = 'TOURNAMENT_ID'
}

export type Bodukan_EntryCountWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Bodukan_EntryFee = {
  __typename?: 'bodukan_EntryFee';
  amount?: Maybe<Scalars['u128']['output']>;
  distribution?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  game_creator_share?: Maybe<Bodukan_Optionu8>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  tournament_creator_share?: Maybe<Bodukan_Optionu8>;
};

export type Bodukan_EntryRequirement = {
  __typename?: 'bodukan_EntryRequirement';
  allowlist?: Maybe<Array<Maybe<Scalars['ContractAddress']['output']>>>;
  option?: Maybe<Scalars['Enum']['output']>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
  tournament?: Maybe<Bodukan_TournamentType>;
};

export type Bodukan_GameConfig = {
  __typename?: 'bodukan_GameConfig';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  prize_spots?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
};

export type Bodukan_GameCounter = {
  __typename?: 'bodukan_GameCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Bodukan_GameCounterConnection = {
  __typename?: 'bodukan_GameCounterConnection';
  edges?: Maybe<Array<Maybe<Bodukan_GameCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_GameCounterEdge = {
  __typename?: 'bodukan_GameCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_GameCounter>;
};

export type Bodukan_GameCounterOrder = {
  direction: OrderDirection;
  field: Bodukan_GameCounterOrderField;
};

export enum Bodukan_GameCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Bodukan_GameCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Bodukan_GameMetadata = {
  __typename?: 'bodukan_GameMetadata';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  creator_address?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  developer?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  genre?: Maybe<Scalars['felt252']['output']>;
  image?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  publisher?: Maybe<Scalars['felt252']['output']>;
};

export type Bodukan_GameMetadataConnection = {
  __typename?: 'bodukan_GameMetadataConnection';
  edges?: Maybe<Array<Maybe<Bodukan_GameMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_GameMetadataEdge = {
  __typename?: 'bodukan_GameMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_GameMetadata>;
};

export type Bodukan_GameMetadataOrder = {
  direction: OrderDirection;
  field: Bodukan_GameMetadataOrderField;
};

export enum Bodukan_GameMetadataOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  CreatorAddress = 'CREATOR_ADDRESS',
  Description = 'DESCRIPTION',
  Developer = 'DEVELOPER',
  Genre = 'GENRE',
  Image = 'IMAGE',
  Name = 'NAME',
  Publisher = 'PUBLISHER'
}

export type Bodukan_GameMetadataWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  developer?: InputMaybe<Scalars['felt252']['input']>;
  developerEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerGT?: InputMaybe<Scalars['felt252']['input']>;
  developerGTE?: InputMaybe<Scalars['felt252']['input']>;
  developerIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerLIKE?: InputMaybe<Scalars['felt252']['input']>;
  developerLT?: InputMaybe<Scalars['felt252']['input']>;
  developerLTE?: InputMaybe<Scalars['felt252']['input']>;
  developerNEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genre?: InputMaybe<Scalars['felt252']['input']>;
  genreEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreGT?: InputMaybe<Scalars['felt252']['input']>;
  genreGTE?: InputMaybe<Scalars['felt252']['input']>;
  genreIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genreLT?: InputMaybe<Scalars['felt252']['input']>;
  genreLTE?: InputMaybe<Scalars['felt252']['input']>;
  genreNEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  image?: InputMaybe<Scalars['ByteArray']['input']>;
  imageEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisher?: InputMaybe<Scalars['felt252']['input']>;
  publisherEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherGT?: InputMaybe<Scalars['felt252']['input']>;
  publisherGTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisherLT?: InputMaybe<Scalars['felt252']['input']>;
  publisherLTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherNEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Bodukan_Leaderboard = {
  __typename?: 'bodukan_Leaderboard';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  token_ids?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Bodukan_LeaderboardConnection = {
  __typename?: 'bodukan_LeaderboardConnection';
  edges?: Maybe<Array<Maybe<Bodukan_LeaderboardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_LeaderboardEdge = {
  __typename?: 'bodukan_LeaderboardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_Leaderboard>;
};

export type Bodukan_LeaderboardOrder = {
  direction: OrderDirection;
  field: Bodukan_LeaderboardOrderField;
};

export enum Bodukan_LeaderboardOrderField {
  TokenIds = 'TOKEN_IDS',
  TournamentId = 'TOURNAMENT_ID'
}

export type Bodukan_LeaderboardWhereInput = {
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Bodukan_Lifecycle = {
  __typename?: 'bodukan_Lifecycle';
  end?: Maybe<Bodukan_Optionu64>;
  mint?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Bodukan_Optionu64>;
};

export type Bodukan_Metadata = {
  __typename?: 'bodukan_Metadata';
  description?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Bodukan_OptionEntryFee = {
  __typename?: 'bodukan_OptionEntryFee';
  Some?: Maybe<Bodukan_EntryFee>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Bodukan_OptionEntryRequirement = {
  __typename?: 'bodukan_OptionEntryRequirement';
  Some?: Maybe<Bodukan_EntryRequirement>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Bodukan_OptionPeriod = {
  __typename?: 'bodukan_OptionPeriod';
  Some?: Maybe<Bodukan_Period>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Bodukan_Optionu8 = {
  __typename?: 'bodukan_Optionu8';
  Some?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Bodukan_Optionu64 = {
  __typename?: 'bodukan_Optionu64';
  Some?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Bodukan_Period = {
  __typename?: 'bodukan_Period';
  end?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
};

export type Bodukan_PlatformMetrics = {
  __typename?: 'bodukan_PlatformMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_tournaments?: Maybe<Scalars['u64']['output']>;
};

export type Bodukan_PlatformMetricsConnection = {
  __typename?: 'bodukan_PlatformMetricsConnection';
  edges?: Maybe<Array<Maybe<Bodukan_PlatformMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_PlatformMetricsEdge = {
  __typename?: 'bodukan_PlatformMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_PlatformMetrics>;
};

export type Bodukan_PlatformMetricsOrder = {
  direction: OrderDirection;
  field: Bodukan_PlatformMetricsOrderField;
};

export enum Bodukan_PlatformMetricsOrderField {
  Key = 'KEY',
  TotalTournaments = 'TOTAL_TOURNAMENTS'
}

export type Bodukan_PlatformMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_tournaments?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Bodukan_Prize = {
  __typename?: 'bodukan_Prize';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u64']['output']>;
  payout_position?: Maybe<Scalars['u8']['output']>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  token_type?: Maybe<Bodukan_TokenType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Bodukan_PrizeClaim = {
  __typename?: 'bodukan_PrizeClaim';
  claimed?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  prize_type?: Maybe<Bodukan_PrizeType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Bodukan_PrizeClaimConnection = {
  __typename?: 'bodukan_PrizeClaimConnection';
  edges?: Maybe<Array<Maybe<Bodukan_PrizeClaimEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_PrizeClaimEdge = {
  __typename?: 'bodukan_PrizeClaimEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_PrizeClaim>;
};

export type Bodukan_PrizeClaimOrder = {
  direction: OrderDirection;
  field: Bodukan_PrizeClaimOrderField;
};

export enum Bodukan_PrizeClaimOrderField {
  Claimed = 'CLAIMED',
  PrizeType = 'PRIZE_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Bodukan_PrizeClaimWhereInput = {
  claimed?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Bodukan_PrizeConnection = {
  __typename?: 'bodukan_PrizeConnection';
  edges?: Maybe<Array<Maybe<Bodukan_PrizeEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_PrizeEdge = {
  __typename?: 'bodukan_PrizeEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_Prize>;
};

export type Bodukan_PrizeMetrics = {
  __typename?: 'bodukan_PrizeMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_prizes?: Maybe<Scalars['u64']['output']>;
};

export type Bodukan_PrizeMetricsConnection = {
  __typename?: 'bodukan_PrizeMetricsConnection';
  edges?: Maybe<Array<Maybe<Bodukan_PrizeMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_PrizeMetricsEdge = {
  __typename?: 'bodukan_PrizeMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_PrizeMetrics>;
};

export type Bodukan_PrizeMetricsOrder = {
  direction: OrderDirection;
  field: Bodukan_PrizeMetricsOrderField;
};

export enum Bodukan_PrizeMetricsOrderField {
  Key = 'KEY',
  TotalPrizes = 'TOTAL_PRIZES'
}

export type Bodukan_PrizeMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_prizes?: InputMaybe<Scalars['u64']['input']>;
  total_prizesEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Bodukan_PrizeOrder = {
  direction: OrderDirection;
  field: Bodukan_PrizeOrderField;
};

export enum Bodukan_PrizeOrderField {
  Id = 'ID',
  PayoutPosition = 'PAYOUT_POSITION',
  TokenAddress = 'TOKEN_ADDRESS',
  TokenType = 'TOKEN_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Bodukan_PrizeType = {
  __typename?: 'bodukan_PrizeType';
  EntryFees?: Maybe<Bodukan_Role>;
  Sponsored?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Bodukan_PrizeWhereInput = {
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  payout_position?: InputMaybe<Scalars['u8']['input']>;
  payout_positionEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionLIKE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Bodukan_Registration = {
  __typename?: 'bodukan_Registration';
  entity?: Maybe<World__Entity>;
  entry_number?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  game_token_id?: Maybe<Scalars['u64']['output']>;
  has_submitted?: Maybe<Scalars['bool']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Bodukan_RegistrationConnection = {
  __typename?: 'bodukan_RegistrationConnection';
  edges?: Maybe<Array<Maybe<Bodukan_RegistrationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_RegistrationEdge = {
  __typename?: 'bodukan_RegistrationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_Registration>;
};

export type Bodukan_RegistrationOrder = {
  direction: OrderDirection;
  field: Bodukan_RegistrationOrderField;
};

export enum Bodukan_RegistrationOrderField {
  EntryNumber = 'ENTRY_NUMBER',
  GameTokenId = 'GAME_TOKEN_ID',
  HasSubmitted = 'HAS_SUBMITTED',
  TournamentId = 'TOURNAMENT_ID'
}

export type Bodukan_RegistrationWhereInput = {
  entry_number?: InputMaybe<Scalars['u32']['input']>;
  entry_numberEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberLIKE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  game_token_id?: InputMaybe<Scalars['u64']['input']>;
  game_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  has_submitted?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Bodukan_Role = {
  __typename?: 'bodukan_Role';
  Position?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Bodukan_Schedule = {
  __typename?: 'bodukan_Schedule';
  game?: Maybe<Bodukan_Period>;
  registration?: Maybe<Bodukan_OptionPeriod>;
  submission_duration?: Maybe<Scalars['u64']['output']>;
};

export type Bodukan_Score = {
  __typename?: 'bodukan_Score';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  score?: Maybe<Scalars['u32']['output']>;
};

export type Bodukan_ScoreConnection = {
  __typename?: 'bodukan_ScoreConnection';
  edges?: Maybe<Array<Maybe<Bodukan_ScoreEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_ScoreEdge = {
  __typename?: 'bodukan_ScoreEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_Score>;
};

export type Bodukan_ScoreOrder = {
  direction: OrderDirection;
  field: Bodukan_ScoreOrderField;
};

export enum Bodukan_ScoreOrderField {
  GameId = 'GAME_ID',
  Score = 'SCORE'
}

export type Bodukan_ScoreWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  score?: InputMaybe<Scalars['u32']['input']>;
  scoreEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreGT?: InputMaybe<Scalars['u32']['input']>;
  scoreGTE?: InputMaybe<Scalars['u32']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u32']['input']>;
  scoreLT?: InputMaybe<Scalars['u32']['input']>;
  scoreLTE?: InputMaybe<Scalars['u32']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Bodukan_Settings = {
  __typename?: 'bodukan_Settings';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  value?: Maybe<Scalars['felt252']['output']>;
};

export type Bodukan_SettingsConnection = {
  __typename?: 'bodukan_SettingsConnection';
  edges?: Maybe<Array<Maybe<Bodukan_SettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_SettingsCounter = {
  __typename?: 'bodukan_SettingsCounter';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Bodukan_SettingsCounterConnection = {
  __typename?: 'bodukan_SettingsCounterConnection';
  edges?: Maybe<Array<Maybe<Bodukan_SettingsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_SettingsCounterEdge = {
  __typename?: 'bodukan_SettingsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_SettingsCounter>;
};

export type Bodukan_SettingsCounterOrder = {
  direction: OrderDirection;
  field: Bodukan_SettingsCounterOrderField;
};

export enum Bodukan_SettingsCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Bodukan_SettingsCounterWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Bodukan_SettingsDetails = {
  __typename?: 'bodukan_SettingsDetails';
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Bodukan_SettingsDetailsConnection = {
  __typename?: 'bodukan_SettingsDetailsConnection';
  edges?: Maybe<Array<Maybe<Bodukan_SettingsDetailsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_SettingsDetailsEdge = {
  __typename?: 'bodukan_SettingsDetailsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_SettingsDetails>;
};

export type Bodukan_SettingsDetailsOrder = {
  direction: OrderDirection;
  field: Bodukan_SettingsDetailsOrderField;
};

export enum Bodukan_SettingsDetailsOrderField {
  Description = 'DESCRIPTION',
  Exists = 'EXISTS',
  Id = 'ID',
  Name = 'NAME'
}

export type Bodukan_SettingsDetailsWhereInput = {
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Bodukan_SettingsEdge = {
  __typename?: 'bodukan_SettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_Settings>;
};

export type Bodukan_SettingsOrder = {
  direction: OrderDirection;
  field: Bodukan_SettingsOrderField;
};

export enum Bodukan_SettingsOrderField {
  Id = 'ID',
  Name = 'NAME',
  Value = 'VALUE'
}

export type Bodukan_SettingsWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  value?: InputMaybe<Scalars['felt252']['input']>;
  valueEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueGT?: InputMaybe<Scalars['felt252']['input']>;
  valueGTE?: InputMaybe<Scalars['felt252']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['felt252']['input']>;
  valueLT?: InputMaybe<Scalars['felt252']['input']>;
  valueLTE?: InputMaybe<Scalars['felt252']['input']>;
  valueNEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Bodukan_Token = {
  __typename?: 'bodukan_Token';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  is_registered?: Maybe<Scalars['bool']['output']>;
  name?: Maybe<Scalars['ByteArray']['output']>;
  symbol?: Maybe<Scalars['ByteArray']['output']>;
  token_type?: Maybe<Bodukan_TokenType>;
};

export type Bodukan_TokenConnection = {
  __typename?: 'bodukan_TokenConnection';
  edges?: Maybe<Array<Maybe<Bodukan_TokenEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_TokenEdge = {
  __typename?: 'bodukan_TokenEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_Token>;
};

export type Bodukan_TokenMetadata = {
  __typename?: 'bodukan_TokenMetadata';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lifecycle?: Maybe<Bodukan_Lifecycle>;
  minted_by?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
};

export type Bodukan_TokenMetadataConnection = {
  __typename?: 'bodukan_TokenMetadataConnection';
  edges?: Maybe<Array<Maybe<Bodukan_TokenMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_TokenMetadataEdge = {
  __typename?: 'bodukan_TokenMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_TokenMetadata>;
};

export type Bodukan_TokenMetadataOrder = {
  direction: OrderDirection;
  field: Bodukan_TokenMetadataOrderField;
};

export enum Bodukan_TokenMetadataOrderField {
  Lifecycle = 'LIFECYCLE',
  MintedBy = 'MINTED_BY',
  PlayerName = 'PLAYER_NAME',
  SettingsId = 'SETTINGS_ID',
  TokenId = 'TOKEN_ID'
}

export type Bodukan_TokenMetadataWhereInput = {
  minted_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  token_id?: InputMaybe<Scalars['u64']['input']>;
  token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idGT?: InputMaybe<Scalars['u64']['input']>;
  token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  token_idLT?: InputMaybe<Scalars['u64']['input']>;
  token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Bodukan_TokenOrder = {
  direction: OrderDirection;
  field: Bodukan_TokenOrderField;
};

export enum Bodukan_TokenOrderField {
  Address = 'ADDRESS',
  IsRegistered = 'IS_REGISTERED',
  Name = 'NAME',
  Symbol = 'SYMBOL',
  TokenType = 'TOKEN_TYPE'
}

export type Bodukan_TokenType = {
  __typename?: 'bodukan_TokenType';
  erc20?: Maybe<Bodukan_Erc20Data>;
  erc721?: Maybe<Bodukan_Erc721Data>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Bodukan_TokenWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  is_registered?: InputMaybe<Scalars['bool']['input']>;
  name?: InputMaybe<Scalars['ByteArray']['input']>;
  nameEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbol?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
};

export type Bodukan_Tournament = {
  __typename?: 'bodukan_Tournament';
  created_at?: Maybe<Scalars['u64']['output']>;
  created_by?: Maybe<Scalars['ContractAddress']['output']>;
  creator_token_id?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entry_fee?: Maybe<Bodukan_OptionEntryFee>;
  entry_requirement?: Maybe<Bodukan_OptionEntryRequirement>;
  eventMessage?: Maybe<World__EventMessage>;
  game_config?: Maybe<Bodukan_GameConfig>;
  id?: Maybe<Scalars['u64']['output']>;
  metadata?: Maybe<Bodukan_Metadata>;
  schedule?: Maybe<Bodukan_Schedule>;
};

export type Bodukan_TournamentConfig = {
  __typename?: 'bodukan_TournamentConfig';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  safe_mode?: Maybe<Scalars['bool']['output']>;
  test_mode?: Maybe<Scalars['bool']['output']>;
};

export type Bodukan_TournamentConfigConnection = {
  __typename?: 'bodukan_TournamentConfigConnection';
  edges?: Maybe<Array<Maybe<Bodukan_TournamentConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_TournamentConfigEdge = {
  __typename?: 'bodukan_TournamentConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_TournamentConfig>;
};

export type Bodukan_TournamentConfigOrder = {
  direction: OrderDirection;
  field: Bodukan_TournamentConfigOrderField;
};

export enum Bodukan_TournamentConfigOrderField {
  Key = 'KEY',
  SafeMode = 'SAFE_MODE',
  TestMode = 'TEST_MODE'
}

export type Bodukan_TournamentConfigWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  safe_mode?: InputMaybe<Scalars['bool']['input']>;
  test_mode?: InputMaybe<Scalars['bool']['input']>;
};

export type Bodukan_TournamentConnection = {
  __typename?: 'bodukan_TournamentConnection';
  edges?: Maybe<Array<Maybe<Bodukan_TournamentEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_TournamentEdge = {
  __typename?: 'bodukan_TournamentEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_Tournament>;
};

export type Bodukan_TournamentOrder = {
  direction: OrderDirection;
  field: Bodukan_TournamentOrderField;
};

export enum Bodukan_TournamentOrderField {
  CreatedAt = 'CREATED_AT',
  CreatedBy = 'CREATED_BY',
  CreatorTokenId = 'CREATOR_TOKEN_ID',
  EntryFee = 'ENTRY_FEE',
  EntryRequirement = 'ENTRY_REQUIREMENT',
  GameConfig = 'GAME_CONFIG',
  Id = 'ID',
  Metadata = 'METADATA',
  Schedule = 'SCHEDULE'
}

export type Bodukan_TournamentTokenMetrics = {
  __typename?: 'bodukan_TournamentTokenMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_supply?: Maybe<Scalars['u64']['output']>;
};

export type Bodukan_TournamentTokenMetricsConnection = {
  __typename?: 'bodukan_TournamentTokenMetricsConnection';
  edges?: Maybe<Array<Maybe<Bodukan_TournamentTokenMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Bodukan_TournamentTokenMetricsEdge = {
  __typename?: 'bodukan_TournamentTokenMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Bodukan_TournamentTokenMetrics>;
};

export type Bodukan_TournamentTokenMetricsOrder = {
  direction: OrderDirection;
  field: Bodukan_TournamentTokenMetricsOrderField;
};

export enum Bodukan_TournamentTokenMetricsOrderField {
  Key = 'KEY',
  TotalSupply = 'TOTAL_SUPPLY'
}

export type Bodukan_TournamentTokenMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_supply?: InputMaybe<Scalars['u64']['input']>;
  total_supplyEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Bodukan_TournamentType = {
  __typename?: 'bodukan_TournamentType';
  option?: Maybe<Scalars['Enum']['output']>;
  participants?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  winners?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
};

export type Bodukan_TournamentWhereInput = {
  created_at?: InputMaybe<Scalars['u64']['input']>;
  created_atEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atGT?: InputMaybe<Scalars['u64']['input']>;
  created_atGTE?: InputMaybe<Scalars['u64']['input']>;
  created_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_atLT?: InputMaybe<Scalars['u64']['input']>;
  created_atLTE?: InputMaybe<Scalars['u64']['input']>;
  created_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_token_id?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_1_0_6_Erc20Data = {
  __typename?: 'budokan_1_0_6_ERC20Data';
  amount?: Maybe<Scalars['u128']['output']>;
};

export type Budokan_1_0_6_Erc721Data = {
  __typename?: 'budokan_1_0_6_ERC721Data';
  id?: Maybe<Scalars['u128']['output']>;
};

export type Budokan_1_0_6_EntryCount = {
  __typename?: 'budokan_1_0_6_EntryCount';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_1_0_6_EntryCountConnection = {
  __typename?: 'budokan_1_0_6_EntryCountConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_EntryCountEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_EntryCountEdge = {
  __typename?: 'budokan_1_0_6_EntryCountEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_EntryCount>;
};

export type Budokan_1_0_6_EntryCountOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_EntryCountOrderField;
};

export enum Budokan_1_0_6_EntryCountOrderField {
  Count = 'COUNT',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_1_0_6_EntryCountWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_1_0_6_EntryFee = {
  __typename?: 'budokan_1_0_6_EntryFee';
  amount?: Maybe<Scalars['u128']['output']>;
  distribution?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  game_creator_share?: Maybe<Budokan_1_0_6_Optionu8>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  tournament_creator_share?: Maybe<Budokan_1_0_6_Optionu8>;
};

export type Budokan_1_0_6_EntryRequirement = {
  __typename?: 'budokan_1_0_6_EntryRequirement';
  entry_limit?: Maybe<Scalars['u8']['output']>;
  entry_requirement_type?: Maybe<Budokan_1_0_6_EntryRequirementType>;
};

export type Budokan_1_0_6_EntryRequirementType = {
  __typename?: 'budokan_1_0_6_EntryRequirementType';
  allowlist?: Maybe<Array<Maybe<Scalars['ContractAddress']['output']>>>;
  option?: Maybe<Scalars['Enum']['output']>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
  tournament?: Maybe<Budokan_1_0_6_TournamentType>;
};

export type Budokan_1_0_6_GameConfig = {
  __typename?: 'budokan_1_0_6_GameConfig';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  prize_spots?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
};

export type Budokan_1_0_6_GameCounter = {
  __typename?: 'budokan_1_0_6_GameCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_1_0_6_GameCounterConnection = {
  __typename?: 'budokan_1_0_6_GameCounterConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_GameCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_GameCounterEdge = {
  __typename?: 'budokan_1_0_6_GameCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_GameCounter>;
};

export type Budokan_1_0_6_GameCounterOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_GameCounterOrderField;
};

export enum Budokan_1_0_6_GameCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Budokan_1_0_6_GameCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_1_0_6_GameMetadata = {
  __typename?: 'budokan_1_0_6_GameMetadata';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  creator_address?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  developer?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  genre?: Maybe<Scalars['felt252']['output']>;
  image?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  publisher?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_1_0_6_GameMetadataConnection = {
  __typename?: 'budokan_1_0_6_GameMetadataConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_GameMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_GameMetadataEdge = {
  __typename?: 'budokan_1_0_6_GameMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_GameMetadata>;
};

export type Budokan_1_0_6_GameMetadataOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_GameMetadataOrderField;
};

export enum Budokan_1_0_6_GameMetadataOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  CreatorAddress = 'CREATOR_ADDRESS',
  Description = 'DESCRIPTION',
  Developer = 'DEVELOPER',
  Genre = 'GENRE',
  Image = 'IMAGE',
  Name = 'NAME',
  Publisher = 'PUBLISHER'
}

export type Budokan_1_0_6_GameMetadataWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  developer?: InputMaybe<Scalars['felt252']['input']>;
  developerEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerGT?: InputMaybe<Scalars['felt252']['input']>;
  developerGTE?: InputMaybe<Scalars['felt252']['input']>;
  developerIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerLIKE?: InputMaybe<Scalars['felt252']['input']>;
  developerLT?: InputMaybe<Scalars['felt252']['input']>;
  developerLTE?: InputMaybe<Scalars['felt252']['input']>;
  developerNEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genre?: InputMaybe<Scalars['felt252']['input']>;
  genreEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreGT?: InputMaybe<Scalars['felt252']['input']>;
  genreGTE?: InputMaybe<Scalars['felt252']['input']>;
  genreIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genreLT?: InputMaybe<Scalars['felt252']['input']>;
  genreLTE?: InputMaybe<Scalars['felt252']['input']>;
  genreNEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  image?: InputMaybe<Scalars['ByteArray']['input']>;
  imageEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisher?: InputMaybe<Scalars['felt252']['input']>;
  publisherEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherGT?: InputMaybe<Scalars['felt252']['input']>;
  publisherGTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisherLT?: InputMaybe<Scalars['felt252']['input']>;
  publisherLTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherNEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_1_0_6_Leaderboard = {
  __typename?: 'budokan_1_0_6_Leaderboard';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  token_ids?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_1_0_6_LeaderboardConnection = {
  __typename?: 'budokan_1_0_6_LeaderboardConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_LeaderboardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_LeaderboardEdge = {
  __typename?: 'budokan_1_0_6_LeaderboardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_Leaderboard>;
};

export type Budokan_1_0_6_LeaderboardOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_LeaderboardOrderField;
};

export enum Budokan_1_0_6_LeaderboardOrderField {
  TokenIds = 'TOKEN_IDS',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_1_0_6_LeaderboardWhereInput = {
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_1_0_6_Lifecycle = {
  __typename?: 'budokan_1_0_6_Lifecycle';
  end?: Maybe<Budokan_1_0_6_Optionu64>;
  mint?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Budokan_1_0_6_Optionu64>;
};

export type Budokan_1_0_6_Metadata = {
  __typename?: 'budokan_1_0_6_Metadata';
  description?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_1_0_6_NftQualification = {
  __typename?: 'budokan_1_0_6_NFTQualification';
  token_id?: Maybe<Scalars['u256']['output']>;
};

export type Budokan_1_0_6_OptionEntryFee = {
  __typename?: 'budokan_1_0_6_OptionEntryFee';
  Some?: Maybe<Budokan_1_0_6_EntryFee>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_1_0_6_OptionEntryRequirement = {
  __typename?: 'budokan_1_0_6_OptionEntryRequirement';
  Some?: Maybe<Budokan_1_0_6_EntryRequirement>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_1_0_6_OptionPeriod = {
  __typename?: 'budokan_1_0_6_OptionPeriod';
  Some?: Maybe<Budokan_1_0_6_Period>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_1_0_6_Optionu8 = {
  __typename?: 'budokan_1_0_6_Optionu8';
  Some?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_1_0_6_Optionu64 = {
  __typename?: 'budokan_1_0_6_Optionu64';
  Some?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_1_0_6_Period = {
  __typename?: 'budokan_1_0_6_Period';
  end?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_1_0_6_PlatformMetrics = {
  __typename?: 'budokan_1_0_6_PlatformMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_tournaments?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_1_0_6_PlatformMetricsConnection = {
  __typename?: 'budokan_1_0_6_PlatformMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_PlatformMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_PlatformMetricsEdge = {
  __typename?: 'budokan_1_0_6_PlatformMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_PlatformMetrics>;
};

export type Budokan_1_0_6_PlatformMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_PlatformMetricsOrderField;
};

export enum Budokan_1_0_6_PlatformMetricsOrderField {
  Key = 'KEY',
  TotalTournaments = 'TOTAL_TOURNAMENTS'
}

export type Budokan_1_0_6_PlatformMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_tournaments?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_1_0_6_Prize = {
  __typename?: 'budokan_1_0_6_Prize';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u64']['output']>;
  payout_position?: Maybe<Scalars['u8']['output']>;
  sponsor_address?: Maybe<Scalars['ContractAddress']['output']>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  token_type?: Maybe<Budokan_1_0_6_TokenType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_1_0_6_PrizeClaim = {
  __typename?: 'budokan_1_0_6_PrizeClaim';
  claimed?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  prize_type?: Maybe<Budokan_1_0_6_PrizeType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_1_0_6_PrizeClaimConnection = {
  __typename?: 'budokan_1_0_6_PrizeClaimConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_PrizeClaimEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_PrizeClaimEdge = {
  __typename?: 'budokan_1_0_6_PrizeClaimEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_PrizeClaim>;
};

export type Budokan_1_0_6_PrizeClaimOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_PrizeClaimOrderField;
};

export enum Budokan_1_0_6_PrizeClaimOrderField {
  Claimed = 'CLAIMED',
  PrizeType = 'PRIZE_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_1_0_6_PrizeClaimWhereInput = {
  claimed?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_1_0_6_PrizeConnection = {
  __typename?: 'budokan_1_0_6_PrizeConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_PrizeEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_PrizeEdge = {
  __typename?: 'budokan_1_0_6_PrizeEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_Prize>;
};

export type Budokan_1_0_6_PrizeMetrics = {
  __typename?: 'budokan_1_0_6_PrizeMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_prizes?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_1_0_6_PrizeMetricsConnection = {
  __typename?: 'budokan_1_0_6_PrizeMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_PrizeMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_PrizeMetricsEdge = {
  __typename?: 'budokan_1_0_6_PrizeMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_PrizeMetrics>;
};

export type Budokan_1_0_6_PrizeMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_PrizeMetricsOrderField;
};

export enum Budokan_1_0_6_PrizeMetricsOrderField {
  Key = 'KEY',
  TotalPrizes = 'TOTAL_PRIZES'
}

export type Budokan_1_0_6_PrizeMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_prizes?: InputMaybe<Scalars['u64']['input']>;
  total_prizesEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_1_0_6_PrizeOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_PrizeOrderField;
};

export enum Budokan_1_0_6_PrizeOrderField {
  Id = 'ID',
  PayoutPosition = 'PAYOUT_POSITION',
  SponsorAddress = 'SPONSOR_ADDRESS',
  TokenAddress = 'TOKEN_ADDRESS',
  TokenType = 'TOKEN_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_1_0_6_PrizeType = {
  __typename?: 'budokan_1_0_6_PrizeType';
  EntryFees?: Maybe<Budokan_1_0_6_Role>;
  Sponsored?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_1_0_6_PrizeWhereInput = {
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  payout_position?: InputMaybe<Scalars['u8']['input']>;
  payout_positionEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionLIKE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  sponsor_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  sponsor_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  sponsor_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_1_0_6_QualificationEntries = {
  __typename?: 'budokan_1_0_6_QualificationEntries';
  entity?: Maybe<World__Entity>;
  entry_count?: Maybe<Scalars['u8']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  qualification_proof?: Maybe<Budokan_1_0_6_QualificationProof>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_1_0_6_QualificationEntriesConnection = {
  __typename?: 'budokan_1_0_6_QualificationEntriesConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_QualificationEntriesEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_QualificationEntriesEdge = {
  __typename?: 'budokan_1_0_6_QualificationEntriesEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_QualificationEntries>;
};

export type Budokan_1_0_6_QualificationEntriesOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_QualificationEntriesOrderField;
};

export enum Budokan_1_0_6_QualificationEntriesOrderField {
  EntryCount = 'ENTRY_COUNT',
  QualificationProof = 'QUALIFICATION_PROOF',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_1_0_6_QualificationEntriesWhereInput = {
  entry_count?: InputMaybe<Scalars['u8']['input']>;
  entry_countEQ?: InputMaybe<Scalars['u8']['input']>;
  entry_countGT?: InputMaybe<Scalars['u8']['input']>;
  entry_countGTE?: InputMaybe<Scalars['u8']['input']>;
  entry_countIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  entry_countLIKE?: InputMaybe<Scalars['u8']['input']>;
  entry_countLT?: InputMaybe<Scalars['u8']['input']>;
  entry_countLTE?: InputMaybe<Scalars['u8']['input']>;
  entry_countNEQ?: InputMaybe<Scalars['u8']['input']>;
  entry_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  entry_countNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_1_0_6_QualificationProof = {
  __typename?: 'budokan_1_0_6_QualificationProof';
  Address?: Maybe<Scalars['ContractAddress']['output']>;
  NFT?: Maybe<Budokan_1_0_6_NftQualification>;
  Tournament?: Maybe<Budokan_1_0_6_TournamentQualification>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_1_0_6_Registration = {
  __typename?: 'budokan_1_0_6_Registration';
  entity?: Maybe<World__Entity>;
  entry_number?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  game_token_id?: Maybe<Scalars['u64']['output']>;
  has_submitted?: Maybe<Scalars['bool']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_1_0_6_RegistrationConnection = {
  __typename?: 'budokan_1_0_6_RegistrationConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_RegistrationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_RegistrationEdge = {
  __typename?: 'budokan_1_0_6_RegistrationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_Registration>;
};

export type Budokan_1_0_6_RegistrationOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_RegistrationOrderField;
};

export enum Budokan_1_0_6_RegistrationOrderField {
  EntryNumber = 'ENTRY_NUMBER',
  GameTokenId = 'GAME_TOKEN_ID',
  HasSubmitted = 'HAS_SUBMITTED',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_1_0_6_RegistrationWhereInput = {
  entry_number?: InputMaybe<Scalars['u32']['input']>;
  entry_numberEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberLIKE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  game_token_id?: InputMaybe<Scalars['u64']['input']>;
  game_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  has_submitted?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_1_0_6_Role = {
  __typename?: 'budokan_1_0_6_Role';
  Position?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_1_0_6_Schedule = {
  __typename?: 'budokan_1_0_6_Schedule';
  game?: Maybe<Budokan_1_0_6_Period>;
  registration?: Maybe<Budokan_1_0_6_OptionPeriod>;
  submission_duration?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_1_0_6_Score = {
  __typename?: 'budokan_1_0_6_Score';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  score?: Maybe<Scalars['u32']['output']>;
};

export type Budokan_1_0_6_ScoreConnection = {
  __typename?: 'budokan_1_0_6_ScoreConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_ScoreEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_ScoreEdge = {
  __typename?: 'budokan_1_0_6_ScoreEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_Score>;
};

export type Budokan_1_0_6_ScoreOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_ScoreOrderField;
};

export enum Budokan_1_0_6_ScoreOrderField {
  GameId = 'GAME_ID',
  Score = 'SCORE'
}

export type Budokan_1_0_6_ScoreWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  score?: InputMaybe<Scalars['u32']['input']>;
  scoreEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreGT?: InputMaybe<Scalars['u32']['input']>;
  scoreGTE?: InputMaybe<Scalars['u32']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u32']['input']>;
  scoreLT?: InputMaybe<Scalars['u32']['input']>;
  scoreLTE?: InputMaybe<Scalars['u32']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Budokan_1_0_6_Settings = {
  __typename?: 'budokan_1_0_6_Settings';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  value?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_1_0_6_SettingsConnection = {
  __typename?: 'budokan_1_0_6_SettingsConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_SettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_SettingsCounter = {
  __typename?: 'budokan_1_0_6_SettingsCounter';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_1_0_6_SettingsCounterConnection = {
  __typename?: 'budokan_1_0_6_SettingsCounterConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_SettingsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_SettingsCounterEdge = {
  __typename?: 'budokan_1_0_6_SettingsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_SettingsCounter>;
};

export type Budokan_1_0_6_SettingsCounterOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_SettingsCounterOrderField;
};

export enum Budokan_1_0_6_SettingsCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Budokan_1_0_6_SettingsCounterWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_1_0_6_SettingsDetails = {
  __typename?: 'budokan_1_0_6_SettingsDetails';
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_1_0_6_SettingsDetailsConnection = {
  __typename?: 'budokan_1_0_6_SettingsDetailsConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_SettingsDetailsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_SettingsDetailsEdge = {
  __typename?: 'budokan_1_0_6_SettingsDetailsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_SettingsDetails>;
};

export type Budokan_1_0_6_SettingsDetailsOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_SettingsDetailsOrderField;
};

export enum Budokan_1_0_6_SettingsDetailsOrderField {
  Description = 'DESCRIPTION',
  Exists = 'EXISTS',
  Id = 'ID',
  Name = 'NAME'
}

export type Budokan_1_0_6_SettingsDetailsWhereInput = {
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_1_0_6_SettingsEdge = {
  __typename?: 'budokan_1_0_6_SettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_Settings>;
};

export type Budokan_1_0_6_SettingsOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_SettingsOrderField;
};

export enum Budokan_1_0_6_SettingsOrderField {
  Id = 'ID',
  Name = 'NAME',
  Value = 'VALUE'
}

export type Budokan_1_0_6_SettingsWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  value?: InputMaybe<Scalars['felt252']['input']>;
  valueEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueGT?: InputMaybe<Scalars['felt252']['input']>;
  valueGTE?: InputMaybe<Scalars['felt252']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['felt252']['input']>;
  valueLT?: InputMaybe<Scalars['felt252']['input']>;
  valueLTE?: InputMaybe<Scalars['felt252']['input']>;
  valueNEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_1_0_6_Token = {
  __typename?: 'budokan_1_0_6_Token';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  is_registered?: Maybe<Scalars['bool']['output']>;
  name?: Maybe<Scalars['ByteArray']['output']>;
  symbol?: Maybe<Scalars['ByteArray']['output']>;
  token_type?: Maybe<Budokan_1_0_6_TokenType>;
};

export type Budokan_1_0_6_TokenConnection = {
  __typename?: 'budokan_1_0_6_TokenConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_TokenEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_TokenEdge = {
  __typename?: 'budokan_1_0_6_TokenEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_Token>;
};

export type Budokan_1_0_6_TokenMetadata = {
  __typename?: 'budokan_1_0_6_TokenMetadata';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lifecycle?: Maybe<Budokan_1_0_6_Lifecycle>;
  minted_by?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_1_0_6_TokenMetadataConnection = {
  __typename?: 'budokan_1_0_6_TokenMetadataConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_TokenMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_TokenMetadataEdge = {
  __typename?: 'budokan_1_0_6_TokenMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_TokenMetadata>;
};

export type Budokan_1_0_6_TokenMetadataOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_TokenMetadataOrderField;
};

export enum Budokan_1_0_6_TokenMetadataOrderField {
  Lifecycle = 'LIFECYCLE',
  MintedBy = 'MINTED_BY',
  PlayerName = 'PLAYER_NAME',
  SettingsId = 'SETTINGS_ID',
  TokenId = 'TOKEN_ID'
}

export type Budokan_1_0_6_TokenMetadataWhereInput = {
  minted_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  token_id?: InputMaybe<Scalars['u64']['input']>;
  token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idGT?: InputMaybe<Scalars['u64']['input']>;
  token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  token_idLT?: InputMaybe<Scalars['u64']['input']>;
  token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_1_0_6_TokenOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_TokenOrderField;
};

export enum Budokan_1_0_6_TokenOrderField {
  Address = 'ADDRESS',
  IsRegistered = 'IS_REGISTERED',
  Name = 'NAME',
  Symbol = 'SYMBOL',
  TokenType = 'TOKEN_TYPE'
}

export type Budokan_1_0_6_TokenType = {
  __typename?: 'budokan_1_0_6_TokenType';
  erc20?: Maybe<Budokan_1_0_6_Erc20Data>;
  erc721?: Maybe<Budokan_1_0_6_Erc721Data>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_1_0_6_TokenWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  is_registered?: InputMaybe<Scalars['bool']['input']>;
  name?: InputMaybe<Scalars['ByteArray']['input']>;
  nameEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbol?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
};

export type Budokan_1_0_6_Tournament = {
  __typename?: 'budokan_1_0_6_Tournament';
  created_at?: Maybe<Scalars['u64']['output']>;
  created_by?: Maybe<Scalars['ContractAddress']['output']>;
  creator_token_id?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entry_fee?: Maybe<Budokan_1_0_6_OptionEntryFee>;
  entry_requirement?: Maybe<Budokan_1_0_6_OptionEntryRequirement>;
  eventMessage?: Maybe<World__EventMessage>;
  game_config?: Maybe<Budokan_1_0_6_GameConfig>;
  id?: Maybe<Scalars['u64']['output']>;
  metadata?: Maybe<Budokan_1_0_6_Metadata>;
  schedule?: Maybe<Budokan_1_0_6_Schedule>;
};

export type Budokan_1_0_6_TournamentConfig = {
  __typename?: 'budokan_1_0_6_TournamentConfig';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  safe_mode?: Maybe<Scalars['bool']['output']>;
  test_mode?: Maybe<Scalars['bool']['output']>;
};

export type Budokan_1_0_6_TournamentConfigConnection = {
  __typename?: 'budokan_1_0_6_TournamentConfigConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_TournamentConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_TournamentConfigEdge = {
  __typename?: 'budokan_1_0_6_TournamentConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_TournamentConfig>;
};

export type Budokan_1_0_6_TournamentConfigOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_TournamentConfigOrderField;
};

export enum Budokan_1_0_6_TournamentConfigOrderField {
  Key = 'KEY',
  SafeMode = 'SAFE_MODE',
  TestMode = 'TEST_MODE'
}

export type Budokan_1_0_6_TournamentConfigWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  safe_mode?: InputMaybe<Scalars['bool']['input']>;
  test_mode?: InputMaybe<Scalars['bool']['input']>;
};

export type Budokan_1_0_6_TournamentConnection = {
  __typename?: 'budokan_1_0_6_TournamentConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_TournamentEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_TournamentEdge = {
  __typename?: 'budokan_1_0_6_TournamentEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_Tournament>;
};

export type Budokan_1_0_6_TournamentOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_TournamentOrderField;
};

export enum Budokan_1_0_6_TournamentOrderField {
  CreatedAt = 'CREATED_AT',
  CreatedBy = 'CREATED_BY',
  CreatorTokenId = 'CREATOR_TOKEN_ID',
  EntryFee = 'ENTRY_FEE',
  EntryRequirement = 'ENTRY_REQUIREMENT',
  GameConfig = 'GAME_CONFIG',
  Id = 'ID',
  Metadata = 'METADATA',
  Schedule = 'SCHEDULE'
}

export type Budokan_1_0_6_TournamentQualification = {
  __typename?: 'budokan_1_0_6_TournamentQualification';
  position?: Maybe<Scalars['u8']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_1_0_6_TournamentTokenMetrics = {
  __typename?: 'budokan_1_0_6_TournamentTokenMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_supply?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_1_0_6_TournamentTokenMetricsConnection = {
  __typename?: 'budokan_1_0_6_TournamentTokenMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_1_0_6_TournamentTokenMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_1_0_6_TournamentTokenMetricsEdge = {
  __typename?: 'budokan_1_0_6_TournamentTokenMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_1_0_6_TournamentTokenMetrics>;
};

export type Budokan_1_0_6_TournamentTokenMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_1_0_6_TournamentTokenMetricsOrderField;
};

export enum Budokan_1_0_6_TournamentTokenMetricsOrderField {
  Key = 'KEY',
  TotalSupply = 'TOTAL_SUPPLY'
}

export type Budokan_1_0_6_TournamentTokenMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_supply?: InputMaybe<Scalars['u64']['input']>;
  total_supplyEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_1_0_6_TournamentType = {
  __typename?: 'budokan_1_0_6_TournamentType';
  option?: Maybe<Scalars['Enum']['output']>;
  participants?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  winners?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
};

export type Budokan_1_0_6_TournamentWhereInput = {
  created_at?: InputMaybe<Scalars['u64']['input']>;
  created_atEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atGT?: InputMaybe<Scalars['u64']['input']>;
  created_atGTE?: InputMaybe<Scalars['u64']['input']>;
  created_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_atLT?: InputMaybe<Scalars['u64']['input']>;
  created_atLTE?: InputMaybe<Scalars['u64']['input']>;
  created_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_token_id?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_Erc20Data = {
  __typename?: 'budokan_ERC20Data';
  amount?: Maybe<Scalars['u128']['output']>;
};

export type Budokan_Erc721Data = {
  __typename?: 'budokan_ERC721Data';
  id?: Maybe<Scalars['u128']['output']>;
};

export type Budokan_EntryCount = {
  __typename?: 'budokan_EntryCount';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_EntryCountConnection = {
  __typename?: 'budokan_EntryCountConnection';
  edges?: Maybe<Array<Maybe<Budokan_EntryCountEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_EntryCountEdge = {
  __typename?: 'budokan_EntryCountEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_EntryCount>;
};

export type Budokan_EntryCountOrder = {
  direction: OrderDirection;
  field: Budokan_EntryCountOrderField;
};

export enum Budokan_EntryCountOrderField {
  Count = 'COUNT',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_EntryCountWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_EntryFee = {
  __typename?: 'budokan_EntryFee';
  amount?: Maybe<Scalars['u128']['output']>;
  distribution?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  game_creator_share?: Maybe<Budokan_Optionu8>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  tournament_creator_share?: Maybe<Budokan_Optionu8>;
};

export type Budokan_EntryRequirement = {
  __typename?: 'budokan_EntryRequirement';
  allowlist?: Maybe<Array<Maybe<Scalars['ContractAddress']['output']>>>;
  option?: Maybe<Scalars['Enum']['output']>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
  tournament?: Maybe<Budokan_TournamentType>;
};

export type Budokan_GameConfig = {
  __typename?: 'budokan_GameConfig';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  prize_spots?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
};

export type Budokan_GameCounter = {
  __typename?: 'budokan_GameCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_GameCounterConnection = {
  __typename?: 'budokan_GameCounterConnection';
  edges?: Maybe<Array<Maybe<Budokan_GameCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_GameCounterEdge = {
  __typename?: 'budokan_GameCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_GameCounter>;
};

export type Budokan_GameCounterOrder = {
  direction: OrderDirection;
  field: Budokan_GameCounterOrderField;
};

export enum Budokan_GameCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Budokan_GameCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_GameMetadata = {
  __typename?: 'budokan_GameMetadata';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  creator_address?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  developer?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  genre?: Maybe<Scalars['felt252']['output']>;
  image?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  publisher?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_GameMetadataConnection = {
  __typename?: 'budokan_GameMetadataConnection';
  edges?: Maybe<Array<Maybe<Budokan_GameMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_GameMetadataEdge = {
  __typename?: 'budokan_GameMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_GameMetadata>;
};

export type Budokan_GameMetadataOrder = {
  direction: OrderDirection;
  field: Budokan_GameMetadataOrderField;
};

export enum Budokan_GameMetadataOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  CreatorAddress = 'CREATOR_ADDRESS',
  Description = 'DESCRIPTION',
  Developer = 'DEVELOPER',
  Genre = 'GENRE',
  Image = 'IMAGE',
  Name = 'NAME',
  Publisher = 'PUBLISHER'
}

export type Budokan_GameMetadataWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  developer?: InputMaybe<Scalars['felt252']['input']>;
  developerEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerGT?: InputMaybe<Scalars['felt252']['input']>;
  developerGTE?: InputMaybe<Scalars['felt252']['input']>;
  developerIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerLIKE?: InputMaybe<Scalars['felt252']['input']>;
  developerLT?: InputMaybe<Scalars['felt252']['input']>;
  developerLTE?: InputMaybe<Scalars['felt252']['input']>;
  developerNEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genre?: InputMaybe<Scalars['felt252']['input']>;
  genreEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreGT?: InputMaybe<Scalars['felt252']['input']>;
  genreGTE?: InputMaybe<Scalars['felt252']['input']>;
  genreIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genreLT?: InputMaybe<Scalars['felt252']['input']>;
  genreLTE?: InputMaybe<Scalars['felt252']['input']>;
  genreNEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  image?: InputMaybe<Scalars['ByteArray']['input']>;
  imageEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisher?: InputMaybe<Scalars['felt252']['input']>;
  publisherEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherGT?: InputMaybe<Scalars['felt252']['input']>;
  publisherGTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisherLT?: InputMaybe<Scalars['felt252']['input']>;
  publisherLTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherNEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_Leaderboard = {
  __typename?: 'budokan_Leaderboard';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  token_ids?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_LeaderboardConnection = {
  __typename?: 'budokan_LeaderboardConnection';
  edges?: Maybe<Array<Maybe<Budokan_LeaderboardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_LeaderboardEdge = {
  __typename?: 'budokan_LeaderboardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_Leaderboard>;
};

export type Budokan_LeaderboardOrder = {
  direction: OrderDirection;
  field: Budokan_LeaderboardOrderField;
};

export enum Budokan_LeaderboardOrderField {
  TokenIds = 'TOKEN_IDS',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_LeaderboardWhereInput = {
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_Lifecycle = {
  __typename?: 'budokan_Lifecycle';
  end?: Maybe<Budokan_Optionu64>;
  mint?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Budokan_Optionu64>;
};

export type Budokan_Metadata = {
  __typename?: 'budokan_Metadata';
  description?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_OptionEntryFee = {
  __typename?: 'budokan_OptionEntryFee';
  Some?: Maybe<Budokan_EntryFee>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_OptionEntryRequirement = {
  __typename?: 'budokan_OptionEntryRequirement';
  Some?: Maybe<Budokan_EntryRequirement>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_OptionPeriod = {
  __typename?: 'budokan_OptionPeriod';
  Some?: Maybe<Budokan_Period>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_Optionu8 = {
  __typename?: 'budokan_Optionu8';
  Some?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_Optionu64 = {
  __typename?: 'budokan_Optionu64';
  Some?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_Period = {
  __typename?: 'budokan_Period';
  end?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_PlatformMetrics = {
  __typename?: 'budokan_PlatformMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_tournaments?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_PlatformMetricsConnection = {
  __typename?: 'budokan_PlatformMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_PlatformMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_PlatformMetricsEdge = {
  __typename?: 'budokan_PlatformMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_PlatformMetrics>;
};

export type Budokan_PlatformMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_PlatformMetricsOrderField;
};

export enum Budokan_PlatformMetricsOrderField {
  Key = 'KEY',
  TotalTournaments = 'TOTAL_TOURNAMENTS'
}

export type Budokan_PlatformMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_tournaments?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_Prize = {
  __typename?: 'budokan_Prize';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u64']['output']>;
  payout_position?: Maybe<Scalars['u8']['output']>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  token_type?: Maybe<Budokan_TokenType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_PrizeClaim = {
  __typename?: 'budokan_PrizeClaim';
  claimed?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  prize_type?: Maybe<Budokan_PrizeType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_PrizeClaimConnection = {
  __typename?: 'budokan_PrizeClaimConnection';
  edges?: Maybe<Array<Maybe<Budokan_PrizeClaimEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_PrizeClaimEdge = {
  __typename?: 'budokan_PrizeClaimEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_PrizeClaim>;
};

export type Budokan_PrizeClaimOrder = {
  direction: OrderDirection;
  field: Budokan_PrizeClaimOrderField;
};

export enum Budokan_PrizeClaimOrderField {
  Claimed = 'CLAIMED',
  PrizeType = 'PRIZE_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_PrizeClaimWhereInput = {
  claimed?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_PrizeConnection = {
  __typename?: 'budokan_PrizeConnection';
  edges?: Maybe<Array<Maybe<Budokan_PrizeEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_PrizeEdge = {
  __typename?: 'budokan_PrizeEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_Prize>;
};

export type Budokan_PrizeMetrics = {
  __typename?: 'budokan_PrizeMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_prizes?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_PrizeMetricsConnection = {
  __typename?: 'budokan_PrizeMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_PrizeMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_PrizeMetricsEdge = {
  __typename?: 'budokan_PrizeMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_PrizeMetrics>;
};

export type Budokan_PrizeMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_PrizeMetricsOrderField;
};

export enum Budokan_PrizeMetricsOrderField {
  Key = 'KEY',
  TotalPrizes = 'TOTAL_PRIZES'
}

export type Budokan_PrizeMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_prizes?: InputMaybe<Scalars['u64']['input']>;
  total_prizesEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_PrizeOrder = {
  direction: OrderDirection;
  field: Budokan_PrizeOrderField;
};

export enum Budokan_PrizeOrderField {
  Id = 'ID',
  PayoutPosition = 'PAYOUT_POSITION',
  TokenAddress = 'TOKEN_ADDRESS',
  TokenType = 'TOKEN_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_PrizeType = {
  __typename?: 'budokan_PrizeType';
  EntryFees?: Maybe<Budokan_Role>;
  Sponsored?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_PrizeWhereInput = {
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  payout_position?: InputMaybe<Scalars['u8']['input']>;
  payout_positionEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionLIKE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_Registration = {
  __typename?: 'budokan_Registration';
  entity?: Maybe<World__Entity>;
  entry_number?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  game_token_id?: Maybe<Scalars['u64']['output']>;
  has_submitted?: Maybe<Scalars['bool']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_RegistrationConnection = {
  __typename?: 'budokan_RegistrationConnection';
  edges?: Maybe<Array<Maybe<Budokan_RegistrationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_RegistrationEdge = {
  __typename?: 'budokan_RegistrationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_Registration>;
};

export type Budokan_RegistrationOrder = {
  direction: OrderDirection;
  field: Budokan_RegistrationOrderField;
};

export enum Budokan_RegistrationOrderField {
  EntryNumber = 'ENTRY_NUMBER',
  GameTokenId = 'GAME_TOKEN_ID',
  HasSubmitted = 'HAS_SUBMITTED',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_RegistrationWhereInput = {
  entry_number?: InputMaybe<Scalars['u32']['input']>;
  entry_numberEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberLIKE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  game_token_id?: InputMaybe<Scalars['u64']['input']>;
  game_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  has_submitted?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_Role = {
  __typename?: 'budokan_Role';
  Position?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_Schedule = {
  __typename?: 'budokan_Schedule';
  game?: Maybe<Budokan_Period>;
  registration?: Maybe<Budokan_OptionPeriod>;
  submission_duration?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_Score = {
  __typename?: 'budokan_Score';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  score?: Maybe<Scalars['u32']['output']>;
};

export type Budokan_ScoreConnection = {
  __typename?: 'budokan_ScoreConnection';
  edges?: Maybe<Array<Maybe<Budokan_ScoreEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_ScoreEdge = {
  __typename?: 'budokan_ScoreEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_Score>;
};

export type Budokan_ScoreOrder = {
  direction: OrderDirection;
  field: Budokan_ScoreOrderField;
};

export enum Budokan_ScoreOrderField {
  GameId = 'GAME_ID',
  Score = 'SCORE'
}

export type Budokan_ScoreWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  score?: InputMaybe<Scalars['u32']['input']>;
  scoreEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreGT?: InputMaybe<Scalars['u32']['input']>;
  scoreGTE?: InputMaybe<Scalars['u32']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u32']['input']>;
  scoreLT?: InputMaybe<Scalars['u32']['input']>;
  scoreLTE?: InputMaybe<Scalars['u32']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Budokan_Settings = {
  __typename?: 'budokan_Settings';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  value?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_SettingsConnection = {
  __typename?: 'budokan_SettingsConnection';
  edges?: Maybe<Array<Maybe<Budokan_SettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_SettingsCounter = {
  __typename?: 'budokan_SettingsCounter';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_SettingsCounterConnection = {
  __typename?: 'budokan_SettingsCounterConnection';
  edges?: Maybe<Array<Maybe<Budokan_SettingsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_SettingsCounterEdge = {
  __typename?: 'budokan_SettingsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_SettingsCounter>;
};

export type Budokan_SettingsCounterOrder = {
  direction: OrderDirection;
  field: Budokan_SettingsCounterOrderField;
};

export enum Budokan_SettingsCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Budokan_SettingsCounterWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_SettingsDetails = {
  __typename?: 'budokan_SettingsDetails';
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_SettingsDetailsConnection = {
  __typename?: 'budokan_SettingsDetailsConnection';
  edges?: Maybe<Array<Maybe<Budokan_SettingsDetailsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_SettingsDetailsEdge = {
  __typename?: 'budokan_SettingsDetailsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_SettingsDetails>;
};

export type Budokan_SettingsDetailsOrder = {
  direction: OrderDirection;
  field: Budokan_SettingsDetailsOrderField;
};

export enum Budokan_SettingsDetailsOrderField {
  Description = 'DESCRIPTION',
  Exists = 'EXISTS',
  Id = 'ID',
  Name = 'NAME'
}

export type Budokan_SettingsDetailsWhereInput = {
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_SettingsEdge = {
  __typename?: 'budokan_SettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_Settings>;
};

export type Budokan_SettingsOrder = {
  direction: OrderDirection;
  field: Budokan_SettingsOrderField;
};

export enum Budokan_SettingsOrderField {
  Id = 'ID',
  Name = 'NAME',
  Value = 'VALUE'
}

export type Budokan_SettingsWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  value?: InputMaybe<Scalars['felt252']['input']>;
  valueEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueGT?: InputMaybe<Scalars['felt252']['input']>;
  valueGTE?: InputMaybe<Scalars['felt252']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['felt252']['input']>;
  valueLT?: InputMaybe<Scalars['felt252']['input']>;
  valueLTE?: InputMaybe<Scalars['felt252']['input']>;
  valueNEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_Token = {
  __typename?: 'budokan_Token';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  is_registered?: Maybe<Scalars['bool']['output']>;
  name?: Maybe<Scalars['ByteArray']['output']>;
  symbol?: Maybe<Scalars['ByteArray']['output']>;
  token_type?: Maybe<Budokan_TokenType>;
};

export type Budokan_TokenConnection = {
  __typename?: 'budokan_TokenConnection';
  edges?: Maybe<Array<Maybe<Budokan_TokenEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_TokenEdge = {
  __typename?: 'budokan_TokenEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_Token>;
};

export type Budokan_TokenMetadata = {
  __typename?: 'budokan_TokenMetadata';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lifecycle?: Maybe<Budokan_Lifecycle>;
  minted_by?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_TokenMetadataConnection = {
  __typename?: 'budokan_TokenMetadataConnection';
  edges?: Maybe<Array<Maybe<Budokan_TokenMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_TokenMetadataEdge = {
  __typename?: 'budokan_TokenMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_TokenMetadata>;
};

export type Budokan_TokenMetadataOrder = {
  direction: OrderDirection;
  field: Budokan_TokenMetadataOrderField;
};

export enum Budokan_TokenMetadataOrderField {
  Lifecycle = 'LIFECYCLE',
  MintedBy = 'MINTED_BY',
  PlayerName = 'PLAYER_NAME',
  SettingsId = 'SETTINGS_ID',
  TokenId = 'TOKEN_ID'
}

export type Budokan_TokenMetadataWhereInput = {
  minted_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  token_id?: InputMaybe<Scalars['u64']['input']>;
  token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idGT?: InputMaybe<Scalars['u64']['input']>;
  token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  token_idLT?: InputMaybe<Scalars['u64']['input']>;
  token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_TokenOrder = {
  direction: OrderDirection;
  field: Budokan_TokenOrderField;
};

export enum Budokan_TokenOrderField {
  Address = 'ADDRESS',
  IsRegistered = 'IS_REGISTERED',
  Name = 'NAME',
  Symbol = 'SYMBOL',
  TokenType = 'TOKEN_TYPE'
}

export type Budokan_TokenType = {
  __typename?: 'budokan_TokenType';
  erc20?: Maybe<Budokan_Erc20Data>;
  erc721?: Maybe<Budokan_Erc721Data>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_TokenWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  is_registered?: InputMaybe<Scalars['bool']['input']>;
  name?: InputMaybe<Scalars['ByteArray']['input']>;
  nameEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbol?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
};

export type Budokan_Tournament = {
  __typename?: 'budokan_Tournament';
  created_at?: Maybe<Scalars['u64']['output']>;
  created_by?: Maybe<Scalars['ContractAddress']['output']>;
  creator_token_id?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entry_fee?: Maybe<Budokan_OptionEntryFee>;
  entry_requirement?: Maybe<Budokan_OptionEntryRequirement>;
  eventMessage?: Maybe<World__EventMessage>;
  game_config?: Maybe<Budokan_GameConfig>;
  id?: Maybe<Scalars['u64']['output']>;
  metadata?: Maybe<Budokan_Metadata>;
  schedule?: Maybe<Budokan_Schedule>;
};

export type Budokan_TournamentConfig = {
  __typename?: 'budokan_TournamentConfig';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  safe_mode?: Maybe<Scalars['bool']['output']>;
  test_mode?: Maybe<Scalars['bool']['output']>;
};

export type Budokan_TournamentConfigConnection = {
  __typename?: 'budokan_TournamentConfigConnection';
  edges?: Maybe<Array<Maybe<Budokan_TournamentConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_TournamentConfigEdge = {
  __typename?: 'budokan_TournamentConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_TournamentConfig>;
};

export type Budokan_TournamentConfigOrder = {
  direction: OrderDirection;
  field: Budokan_TournamentConfigOrderField;
};

export enum Budokan_TournamentConfigOrderField {
  Key = 'KEY',
  SafeMode = 'SAFE_MODE',
  TestMode = 'TEST_MODE'
}

export type Budokan_TournamentConfigWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  safe_mode?: InputMaybe<Scalars['bool']['input']>;
  test_mode?: InputMaybe<Scalars['bool']['input']>;
};

export type Budokan_TournamentConnection = {
  __typename?: 'budokan_TournamentConnection';
  edges?: Maybe<Array<Maybe<Budokan_TournamentEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_TournamentEdge = {
  __typename?: 'budokan_TournamentEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_Tournament>;
};

export type Budokan_TournamentOrder = {
  direction: OrderDirection;
  field: Budokan_TournamentOrderField;
};

export enum Budokan_TournamentOrderField {
  CreatedAt = 'CREATED_AT',
  CreatedBy = 'CREATED_BY',
  CreatorTokenId = 'CREATOR_TOKEN_ID',
  EntryFee = 'ENTRY_FEE',
  EntryRequirement = 'ENTRY_REQUIREMENT',
  GameConfig = 'GAME_CONFIG',
  Id = 'ID',
  Metadata = 'METADATA',
  Schedule = 'SCHEDULE'
}

export type Budokan_TournamentTokenMetrics = {
  __typename?: 'budokan_TournamentTokenMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_supply?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_TournamentTokenMetricsConnection = {
  __typename?: 'budokan_TournamentTokenMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_TournamentTokenMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_TournamentTokenMetricsEdge = {
  __typename?: 'budokan_TournamentTokenMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_TournamentTokenMetrics>;
};

export type Budokan_TournamentTokenMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_TournamentTokenMetricsOrderField;
};

export enum Budokan_TournamentTokenMetricsOrderField {
  Key = 'KEY',
  TotalSupply = 'TOTAL_SUPPLY'
}

export type Budokan_TournamentTokenMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_supply?: InputMaybe<Scalars['u64']['input']>;
  total_supplyEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_TournamentType = {
  __typename?: 'budokan_TournamentType';
  option?: Maybe<Scalars['Enum']['output']>;
  participants?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  winners?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
};

export type Budokan_TournamentWhereInput = {
  created_at?: InputMaybe<Scalars['u64']['input']>;
  created_atEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atGT?: InputMaybe<Scalars['u64']['input']>;
  created_atGTE?: InputMaybe<Scalars['u64']['input']>;
  created_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_atLT?: InputMaybe<Scalars['u64']['input']>;
  created_atLTE?: InputMaybe<Scalars['u64']['input']>;
  created_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_token_id?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_0_Erc20Data = {
  __typename?: 'budokan_v_1_0_0_ERC20Data';
  amount?: Maybe<Scalars['u128']['output']>;
};

export type Budokan_V_1_0_0_Erc721Data = {
  __typename?: 'budokan_v_1_0_0_ERC721Data';
  id?: Maybe<Scalars['u128']['output']>;
};

export type Budokan_V_1_0_0_EntryCount = {
  __typename?: 'budokan_v_1_0_0_EntryCount';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_0_EntryCountConnection = {
  __typename?: 'budokan_v_1_0_0_EntryCountConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_EntryCountEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_EntryCountEdge = {
  __typename?: 'budokan_v_1_0_0_EntryCountEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_EntryCount>;
};

export type Budokan_V_1_0_0_EntryCountOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_EntryCountOrderField;
};

export enum Budokan_V_1_0_0_EntryCountOrderField {
  Count = 'COUNT',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_0_EntryCountWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_0_EntryFee = {
  __typename?: 'budokan_v_1_0_0_EntryFee';
  amount?: Maybe<Scalars['u128']['output']>;
  distribution?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  game_creator_share?: Maybe<Budokan_V_1_0_0_Optionu8>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  tournament_creator_share?: Maybe<Budokan_V_1_0_0_Optionu8>;
};

export type Budokan_V_1_0_0_EntryRequirement = {
  __typename?: 'budokan_v_1_0_0_EntryRequirement';
  allowlist?: Maybe<Array<Maybe<Scalars['ContractAddress']['output']>>>;
  option?: Maybe<Scalars['Enum']['output']>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
  tournament?: Maybe<Budokan_V_1_0_0_TournamentType>;
};

export type Budokan_V_1_0_0_GameConfig = {
  __typename?: 'budokan_v_1_0_0_GameConfig';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  prize_spots?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
};

export type Budokan_V_1_0_0_GameCounter = {
  __typename?: 'budokan_v_1_0_0_GameCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_0_GameCounterConnection = {
  __typename?: 'budokan_v_1_0_0_GameCounterConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_GameCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_GameCounterEdge = {
  __typename?: 'budokan_v_1_0_0_GameCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_GameCounter>;
};

export type Budokan_V_1_0_0_GameCounterOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_GameCounterOrderField;
};

export enum Budokan_V_1_0_0_GameCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Budokan_V_1_0_0_GameCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_0_GameMetadata = {
  __typename?: 'budokan_v_1_0_0_GameMetadata';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  creator_address?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  developer?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  genre?: Maybe<Scalars['felt252']['output']>;
  image?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  publisher?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_0_GameMetadataConnection = {
  __typename?: 'budokan_v_1_0_0_GameMetadataConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_GameMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_GameMetadataEdge = {
  __typename?: 'budokan_v_1_0_0_GameMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_GameMetadata>;
};

export type Budokan_V_1_0_0_GameMetadataOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_GameMetadataOrderField;
};

export enum Budokan_V_1_0_0_GameMetadataOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  CreatorAddress = 'CREATOR_ADDRESS',
  Description = 'DESCRIPTION',
  Developer = 'DEVELOPER',
  Genre = 'GENRE',
  Image = 'IMAGE',
  Name = 'NAME',
  Publisher = 'PUBLISHER'
}

export type Budokan_V_1_0_0_GameMetadataWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  developer?: InputMaybe<Scalars['felt252']['input']>;
  developerEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerGT?: InputMaybe<Scalars['felt252']['input']>;
  developerGTE?: InputMaybe<Scalars['felt252']['input']>;
  developerIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerLIKE?: InputMaybe<Scalars['felt252']['input']>;
  developerLT?: InputMaybe<Scalars['felt252']['input']>;
  developerLTE?: InputMaybe<Scalars['felt252']['input']>;
  developerNEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genre?: InputMaybe<Scalars['felt252']['input']>;
  genreEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreGT?: InputMaybe<Scalars['felt252']['input']>;
  genreGTE?: InputMaybe<Scalars['felt252']['input']>;
  genreIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genreLT?: InputMaybe<Scalars['felt252']['input']>;
  genreLTE?: InputMaybe<Scalars['felt252']['input']>;
  genreNEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  image?: InputMaybe<Scalars['ByteArray']['input']>;
  imageEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisher?: InputMaybe<Scalars['felt252']['input']>;
  publisherEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherGT?: InputMaybe<Scalars['felt252']['input']>;
  publisherGTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisherLT?: InputMaybe<Scalars['felt252']['input']>;
  publisherLTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherNEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_0_Leaderboard = {
  __typename?: 'budokan_v_1_0_0_Leaderboard';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  token_ids?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_0_LeaderboardConnection = {
  __typename?: 'budokan_v_1_0_0_LeaderboardConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_LeaderboardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_LeaderboardEdge = {
  __typename?: 'budokan_v_1_0_0_LeaderboardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_Leaderboard>;
};

export type Budokan_V_1_0_0_LeaderboardOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_LeaderboardOrderField;
};

export enum Budokan_V_1_0_0_LeaderboardOrderField {
  TokenIds = 'TOKEN_IDS',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_0_LeaderboardWhereInput = {
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_0_Lifecycle = {
  __typename?: 'budokan_v_1_0_0_Lifecycle';
  end?: Maybe<Budokan_V_1_0_0_Optionu64>;
  mint?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Budokan_V_1_0_0_Optionu64>;
};

export type Budokan_V_1_0_0_Metadata = {
  __typename?: 'budokan_v_1_0_0_Metadata';
  description?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_0_OptionEntryFee = {
  __typename?: 'budokan_v_1_0_0_OptionEntryFee';
  Some?: Maybe<Budokan_V_1_0_0_EntryFee>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_0_OptionEntryRequirement = {
  __typename?: 'budokan_v_1_0_0_OptionEntryRequirement';
  Some?: Maybe<Budokan_V_1_0_0_EntryRequirement>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_0_OptionPeriod = {
  __typename?: 'budokan_v_1_0_0_OptionPeriod';
  Some?: Maybe<Budokan_V_1_0_0_Period>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_0_Optionu8 = {
  __typename?: 'budokan_v_1_0_0_Optionu8';
  Some?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_0_Optionu64 = {
  __typename?: 'budokan_v_1_0_0_Optionu64';
  Some?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_0_Period = {
  __typename?: 'budokan_v_1_0_0_Period';
  end?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_0_PlatformMetrics = {
  __typename?: 'budokan_v_1_0_0_PlatformMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_tournaments?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_0_PlatformMetricsConnection = {
  __typename?: 'budokan_v_1_0_0_PlatformMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_PlatformMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_PlatformMetricsEdge = {
  __typename?: 'budokan_v_1_0_0_PlatformMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_PlatformMetrics>;
};

export type Budokan_V_1_0_0_PlatformMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_PlatformMetricsOrderField;
};

export enum Budokan_V_1_0_0_PlatformMetricsOrderField {
  Key = 'KEY',
  TotalTournaments = 'TOTAL_TOURNAMENTS'
}

export type Budokan_V_1_0_0_PlatformMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_tournaments?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_0_Prize = {
  __typename?: 'budokan_v_1_0_0_Prize';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u64']['output']>;
  payout_position?: Maybe<Scalars['u8']['output']>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  token_type?: Maybe<Budokan_V_1_0_0_TokenType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_0_PrizeClaim = {
  __typename?: 'budokan_v_1_0_0_PrizeClaim';
  claimed?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  prize_type?: Maybe<Budokan_V_1_0_0_PrizeType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_0_PrizeClaimConnection = {
  __typename?: 'budokan_v_1_0_0_PrizeClaimConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_PrizeClaimEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_PrizeClaimEdge = {
  __typename?: 'budokan_v_1_0_0_PrizeClaimEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_PrizeClaim>;
};

export type Budokan_V_1_0_0_PrizeClaimOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_PrizeClaimOrderField;
};

export enum Budokan_V_1_0_0_PrizeClaimOrderField {
  Claimed = 'CLAIMED',
  PrizeType = 'PRIZE_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_0_PrizeClaimWhereInput = {
  claimed?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_0_PrizeConnection = {
  __typename?: 'budokan_v_1_0_0_PrizeConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_PrizeEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_PrizeEdge = {
  __typename?: 'budokan_v_1_0_0_PrizeEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_Prize>;
};

export type Budokan_V_1_0_0_PrizeMetrics = {
  __typename?: 'budokan_v_1_0_0_PrizeMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_prizes?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_0_PrizeMetricsConnection = {
  __typename?: 'budokan_v_1_0_0_PrizeMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_PrizeMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_PrizeMetricsEdge = {
  __typename?: 'budokan_v_1_0_0_PrizeMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_PrizeMetrics>;
};

export type Budokan_V_1_0_0_PrizeMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_PrizeMetricsOrderField;
};

export enum Budokan_V_1_0_0_PrizeMetricsOrderField {
  Key = 'KEY',
  TotalPrizes = 'TOTAL_PRIZES'
}

export type Budokan_V_1_0_0_PrizeMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_prizes?: InputMaybe<Scalars['u64']['input']>;
  total_prizesEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_0_PrizeOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_PrizeOrderField;
};

export enum Budokan_V_1_0_0_PrizeOrderField {
  Id = 'ID',
  PayoutPosition = 'PAYOUT_POSITION',
  TokenAddress = 'TOKEN_ADDRESS',
  TokenType = 'TOKEN_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_0_PrizeType = {
  __typename?: 'budokan_v_1_0_0_PrizeType';
  EntryFees?: Maybe<Budokan_V_1_0_0_Role>;
  Sponsored?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_0_PrizeWhereInput = {
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  payout_position?: InputMaybe<Scalars['u8']['input']>;
  payout_positionEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionLIKE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_0_Registration = {
  __typename?: 'budokan_v_1_0_0_Registration';
  entity?: Maybe<World__Entity>;
  entry_number?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  game_token_id?: Maybe<Scalars['u64']['output']>;
  has_submitted?: Maybe<Scalars['bool']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_0_RegistrationConnection = {
  __typename?: 'budokan_v_1_0_0_RegistrationConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_RegistrationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_RegistrationEdge = {
  __typename?: 'budokan_v_1_0_0_RegistrationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_Registration>;
};

export type Budokan_V_1_0_0_RegistrationOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_RegistrationOrderField;
};

export enum Budokan_V_1_0_0_RegistrationOrderField {
  EntryNumber = 'ENTRY_NUMBER',
  GameTokenId = 'GAME_TOKEN_ID',
  HasSubmitted = 'HAS_SUBMITTED',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_0_RegistrationWhereInput = {
  entry_number?: InputMaybe<Scalars['u32']['input']>;
  entry_numberEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberLIKE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  game_token_id?: InputMaybe<Scalars['u64']['input']>;
  game_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  has_submitted?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_0_Role = {
  __typename?: 'budokan_v_1_0_0_Role';
  Position?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_0_Schedule = {
  __typename?: 'budokan_v_1_0_0_Schedule';
  game?: Maybe<Budokan_V_1_0_0_Period>;
  registration?: Maybe<Budokan_V_1_0_0_OptionPeriod>;
  submission_duration?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_0_Score = {
  __typename?: 'budokan_v_1_0_0_Score';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  score?: Maybe<Scalars['u32']['output']>;
};

export type Budokan_V_1_0_0_ScoreConnection = {
  __typename?: 'budokan_v_1_0_0_ScoreConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_ScoreEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_ScoreEdge = {
  __typename?: 'budokan_v_1_0_0_ScoreEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_Score>;
};

export type Budokan_V_1_0_0_ScoreOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_ScoreOrderField;
};

export enum Budokan_V_1_0_0_ScoreOrderField {
  GameId = 'GAME_ID',
  Score = 'SCORE'
}

export type Budokan_V_1_0_0_ScoreWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  score?: InputMaybe<Scalars['u32']['input']>;
  scoreEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreGT?: InputMaybe<Scalars['u32']['input']>;
  scoreGTE?: InputMaybe<Scalars['u32']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u32']['input']>;
  scoreLT?: InputMaybe<Scalars['u32']['input']>;
  scoreLTE?: InputMaybe<Scalars['u32']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Budokan_V_1_0_0_Settings = {
  __typename?: 'budokan_v_1_0_0_Settings';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  value?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_0_SettingsConnection = {
  __typename?: 'budokan_v_1_0_0_SettingsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_SettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_SettingsCounter = {
  __typename?: 'budokan_v_1_0_0_SettingsCounter';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_0_SettingsCounterConnection = {
  __typename?: 'budokan_v_1_0_0_SettingsCounterConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_SettingsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_SettingsCounterEdge = {
  __typename?: 'budokan_v_1_0_0_SettingsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_SettingsCounter>;
};

export type Budokan_V_1_0_0_SettingsCounterOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_SettingsCounterOrderField;
};

export enum Budokan_V_1_0_0_SettingsCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Budokan_V_1_0_0_SettingsCounterWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_0_SettingsDetails = {
  __typename?: 'budokan_v_1_0_0_SettingsDetails';
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_0_SettingsDetailsConnection = {
  __typename?: 'budokan_v_1_0_0_SettingsDetailsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_SettingsDetailsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_SettingsDetailsEdge = {
  __typename?: 'budokan_v_1_0_0_SettingsDetailsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_SettingsDetails>;
};

export type Budokan_V_1_0_0_SettingsDetailsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_SettingsDetailsOrderField;
};

export enum Budokan_V_1_0_0_SettingsDetailsOrderField {
  Description = 'DESCRIPTION',
  Exists = 'EXISTS',
  Id = 'ID',
  Name = 'NAME'
}

export type Budokan_V_1_0_0_SettingsDetailsWhereInput = {
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_0_SettingsEdge = {
  __typename?: 'budokan_v_1_0_0_SettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_Settings>;
};

export type Budokan_V_1_0_0_SettingsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_SettingsOrderField;
};

export enum Budokan_V_1_0_0_SettingsOrderField {
  Id = 'ID',
  Name = 'NAME',
  Value = 'VALUE'
}

export type Budokan_V_1_0_0_SettingsWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  value?: InputMaybe<Scalars['felt252']['input']>;
  valueEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueGT?: InputMaybe<Scalars['felt252']['input']>;
  valueGTE?: InputMaybe<Scalars['felt252']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['felt252']['input']>;
  valueLT?: InputMaybe<Scalars['felt252']['input']>;
  valueLTE?: InputMaybe<Scalars['felt252']['input']>;
  valueNEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_0_Token = {
  __typename?: 'budokan_v_1_0_0_Token';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  is_registered?: Maybe<Scalars['bool']['output']>;
  name?: Maybe<Scalars['ByteArray']['output']>;
  symbol?: Maybe<Scalars['ByteArray']['output']>;
  token_type?: Maybe<Budokan_V_1_0_0_TokenType>;
};

export type Budokan_V_1_0_0_TokenConnection = {
  __typename?: 'budokan_v_1_0_0_TokenConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_TokenEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_TokenEdge = {
  __typename?: 'budokan_v_1_0_0_TokenEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_Token>;
};

export type Budokan_V_1_0_0_TokenMetadata = {
  __typename?: 'budokan_v_1_0_0_TokenMetadata';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lifecycle?: Maybe<Budokan_V_1_0_0_Lifecycle>;
  minted_by?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_0_TokenMetadataConnection = {
  __typename?: 'budokan_v_1_0_0_TokenMetadataConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_TokenMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_TokenMetadataEdge = {
  __typename?: 'budokan_v_1_0_0_TokenMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_TokenMetadata>;
};

export type Budokan_V_1_0_0_TokenMetadataOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_TokenMetadataOrderField;
};

export enum Budokan_V_1_0_0_TokenMetadataOrderField {
  Lifecycle = 'LIFECYCLE',
  MintedBy = 'MINTED_BY',
  PlayerName = 'PLAYER_NAME',
  SettingsId = 'SETTINGS_ID',
  TokenId = 'TOKEN_ID'
}

export type Budokan_V_1_0_0_TokenMetadataWhereInput = {
  minted_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  token_id?: InputMaybe<Scalars['u64']['input']>;
  token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idGT?: InputMaybe<Scalars['u64']['input']>;
  token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  token_idLT?: InputMaybe<Scalars['u64']['input']>;
  token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_0_TokenOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_TokenOrderField;
};

export enum Budokan_V_1_0_0_TokenOrderField {
  Address = 'ADDRESS',
  IsRegistered = 'IS_REGISTERED',
  Name = 'NAME',
  Symbol = 'SYMBOL',
  TokenType = 'TOKEN_TYPE'
}

export type Budokan_V_1_0_0_TokenType = {
  __typename?: 'budokan_v_1_0_0_TokenType';
  erc20?: Maybe<Budokan_V_1_0_0_Erc20Data>;
  erc721?: Maybe<Budokan_V_1_0_0_Erc721Data>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_0_TokenWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  is_registered?: InputMaybe<Scalars['bool']['input']>;
  name?: InputMaybe<Scalars['ByteArray']['input']>;
  nameEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbol?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
};

export type Budokan_V_1_0_0_Tournament = {
  __typename?: 'budokan_v_1_0_0_Tournament';
  created_at?: Maybe<Scalars['u64']['output']>;
  created_by?: Maybe<Scalars['ContractAddress']['output']>;
  creator_token_id?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entry_fee?: Maybe<Budokan_V_1_0_0_OptionEntryFee>;
  entry_requirement?: Maybe<Budokan_V_1_0_0_OptionEntryRequirement>;
  eventMessage?: Maybe<World__EventMessage>;
  game_config?: Maybe<Budokan_V_1_0_0_GameConfig>;
  id?: Maybe<Scalars['u64']['output']>;
  metadata?: Maybe<Budokan_V_1_0_0_Metadata>;
  schedule?: Maybe<Budokan_V_1_0_0_Schedule>;
};

export type Budokan_V_1_0_0_TournamentConfig = {
  __typename?: 'budokan_v_1_0_0_TournamentConfig';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  safe_mode?: Maybe<Scalars['bool']['output']>;
  test_mode?: Maybe<Scalars['bool']['output']>;
};

export type Budokan_V_1_0_0_TournamentConfigConnection = {
  __typename?: 'budokan_v_1_0_0_TournamentConfigConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_TournamentConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_TournamentConfigEdge = {
  __typename?: 'budokan_v_1_0_0_TournamentConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_TournamentConfig>;
};

export type Budokan_V_1_0_0_TournamentConfigOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_TournamentConfigOrderField;
};

export enum Budokan_V_1_0_0_TournamentConfigOrderField {
  Key = 'KEY',
  SafeMode = 'SAFE_MODE',
  TestMode = 'TEST_MODE'
}

export type Budokan_V_1_0_0_TournamentConfigWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  safe_mode?: InputMaybe<Scalars['bool']['input']>;
  test_mode?: InputMaybe<Scalars['bool']['input']>;
};

export type Budokan_V_1_0_0_TournamentConnection = {
  __typename?: 'budokan_v_1_0_0_TournamentConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_TournamentEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_TournamentEdge = {
  __typename?: 'budokan_v_1_0_0_TournamentEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_Tournament>;
};

export type Budokan_V_1_0_0_TournamentOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_TournamentOrderField;
};

export enum Budokan_V_1_0_0_TournamentOrderField {
  CreatedAt = 'CREATED_AT',
  CreatedBy = 'CREATED_BY',
  CreatorTokenId = 'CREATOR_TOKEN_ID',
  EntryFee = 'ENTRY_FEE',
  EntryRequirement = 'ENTRY_REQUIREMENT',
  GameConfig = 'GAME_CONFIG',
  Id = 'ID',
  Metadata = 'METADATA',
  Schedule = 'SCHEDULE'
}

export type Budokan_V_1_0_0_TournamentTokenMetrics = {
  __typename?: 'budokan_v_1_0_0_TournamentTokenMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_supply?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_0_TournamentTokenMetricsConnection = {
  __typename?: 'budokan_v_1_0_0_TournamentTokenMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_0_TournamentTokenMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_0_TournamentTokenMetricsEdge = {
  __typename?: 'budokan_v_1_0_0_TournamentTokenMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_0_TournamentTokenMetrics>;
};

export type Budokan_V_1_0_0_TournamentTokenMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_0_TournamentTokenMetricsOrderField;
};

export enum Budokan_V_1_0_0_TournamentTokenMetricsOrderField {
  Key = 'KEY',
  TotalSupply = 'TOTAL_SUPPLY'
}

export type Budokan_V_1_0_0_TournamentTokenMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_supply?: InputMaybe<Scalars['u64']['input']>;
  total_supplyEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_0_TournamentType = {
  __typename?: 'budokan_v_1_0_0_TournamentType';
  option?: Maybe<Scalars['Enum']['output']>;
  participants?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  winners?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
};

export type Budokan_V_1_0_0_TournamentWhereInput = {
  created_at?: InputMaybe<Scalars['u64']['input']>;
  created_atEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atGT?: InputMaybe<Scalars['u64']['input']>;
  created_atGTE?: InputMaybe<Scalars['u64']['input']>;
  created_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_atLT?: InputMaybe<Scalars['u64']['input']>;
  created_atLTE?: InputMaybe<Scalars['u64']['input']>;
  created_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_token_id?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_1_Erc20Data = {
  __typename?: 'budokan_v_1_0_1_ERC20Data';
  amount?: Maybe<Scalars['u128']['output']>;
};

export type Budokan_V_1_0_1_Erc721Data = {
  __typename?: 'budokan_v_1_0_1_ERC721Data';
  id?: Maybe<Scalars['u128']['output']>;
};

export type Budokan_V_1_0_1_EntryCount = {
  __typename?: 'budokan_v_1_0_1_EntryCount';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_1_EntryCountConnection = {
  __typename?: 'budokan_v_1_0_1_EntryCountConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_EntryCountEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_EntryCountEdge = {
  __typename?: 'budokan_v_1_0_1_EntryCountEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_EntryCount>;
};

export type Budokan_V_1_0_1_EntryCountOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_EntryCountOrderField;
};

export enum Budokan_V_1_0_1_EntryCountOrderField {
  Count = 'COUNT',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_1_EntryCountWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_1_EntryFee = {
  __typename?: 'budokan_v_1_0_1_EntryFee';
  amount?: Maybe<Scalars['u128']['output']>;
  distribution?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  game_creator_share?: Maybe<Budokan_V_1_0_1_Optionu8>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  tournament_creator_share?: Maybe<Budokan_V_1_0_1_Optionu8>;
};

export type Budokan_V_1_0_1_EntryRequirement = {
  __typename?: 'budokan_v_1_0_1_EntryRequirement';
  allowlist?: Maybe<Array<Maybe<Scalars['ContractAddress']['output']>>>;
  option?: Maybe<Scalars['Enum']['output']>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
  tournament?: Maybe<Budokan_V_1_0_1_TournamentType>;
};

export type Budokan_V_1_0_1_GameConfig = {
  __typename?: 'budokan_v_1_0_1_GameConfig';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  prize_spots?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
};

export type Budokan_V_1_0_1_GameCounter = {
  __typename?: 'budokan_v_1_0_1_GameCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_1_GameCounterConnection = {
  __typename?: 'budokan_v_1_0_1_GameCounterConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_GameCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_GameCounterEdge = {
  __typename?: 'budokan_v_1_0_1_GameCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_GameCounter>;
};

export type Budokan_V_1_0_1_GameCounterOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_GameCounterOrderField;
};

export enum Budokan_V_1_0_1_GameCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Budokan_V_1_0_1_GameCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_1_GameMetadata = {
  __typename?: 'budokan_v_1_0_1_GameMetadata';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  creator_address?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  developer?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  genre?: Maybe<Scalars['felt252']['output']>;
  image?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  publisher?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_1_GameMetadataConnection = {
  __typename?: 'budokan_v_1_0_1_GameMetadataConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_GameMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_GameMetadataEdge = {
  __typename?: 'budokan_v_1_0_1_GameMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_GameMetadata>;
};

export type Budokan_V_1_0_1_GameMetadataOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_GameMetadataOrderField;
};

export enum Budokan_V_1_0_1_GameMetadataOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  CreatorAddress = 'CREATOR_ADDRESS',
  Description = 'DESCRIPTION',
  Developer = 'DEVELOPER',
  Genre = 'GENRE',
  Image = 'IMAGE',
  Name = 'NAME',
  Publisher = 'PUBLISHER'
}

export type Budokan_V_1_0_1_GameMetadataWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  developer?: InputMaybe<Scalars['felt252']['input']>;
  developerEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerGT?: InputMaybe<Scalars['felt252']['input']>;
  developerGTE?: InputMaybe<Scalars['felt252']['input']>;
  developerIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerLIKE?: InputMaybe<Scalars['felt252']['input']>;
  developerLT?: InputMaybe<Scalars['felt252']['input']>;
  developerLTE?: InputMaybe<Scalars['felt252']['input']>;
  developerNEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genre?: InputMaybe<Scalars['felt252']['input']>;
  genreEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreGT?: InputMaybe<Scalars['felt252']['input']>;
  genreGTE?: InputMaybe<Scalars['felt252']['input']>;
  genreIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genreLT?: InputMaybe<Scalars['felt252']['input']>;
  genreLTE?: InputMaybe<Scalars['felt252']['input']>;
  genreNEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  image?: InputMaybe<Scalars['ByteArray']['input']>;
  imageEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisher?: InputMaybe<Scalars['felt252']['input']>;
  publisherEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherGT?: InputMaybe<Scalars['felt252']['input']>;
  publisherGTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisherLT?: InputMaybe<Scalars['felt252']['input']>;
  publisherLTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherNEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_1_Leaderboard = {
  __typename?: 'budokan_v_1_0_1_Leaderboard';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  token_ids?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_1_LeaderboardConnection = {
  __typename?: 'budokan_v_1_0_1_LeaderboardConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_LeaderboardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_LeaderboardEdge = {
  __typename?: 'budokan_v_1_0_1_LeaderboardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_Leaderboard>;
};

export type Budokan_V_1_0_1_LeaderboardOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_LeaderboardOrderField;
};

export enum Budokan_V_1_0_1_LeaderboardOrderField {
  TokenIds = 'TOKEN_IDS',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_1_LeaderboardWhereInput = {
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_1_Lifecycle = {
  __typename?: 'budokan_v_1_0_1_Lifecycle';
  end?: Maybe<Budokan_V_1_0_1_Optionu64>;
  mint?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Budokan_V_1_0_1_Optionu64>;
};

export type Budokan_V_1_0_1_Metadata = {
  __typename?: 'budokan_v_1_0_1_Metadata';
  description?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_1_OptionEntryFee = {
  __typename?: 'budokan_v_1_0_1_OptionEntryFee';
  Some?: Maybe<Budokan_V_1_0_1_EntryFee>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_1_OptionEntryRequirement = {
  __typename?: 'budokan_v_1_0_1_OptionEntryRequirement';
  Some?: Maybe<Budokan_V_1_0_1_EntryRequirement>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_1_OptionPeriod = {
  __typename?: 'budokan_v_1_0_1_OptionPeriod';
  Some?: Maybe<Budokan_V_1_0_1_Period>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_1_Optionu8 = {
  __typename?: 'budokan_v_1_0_1_Optionu8';
  Some?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_1_Optionu64 = {
  __typename?: 'budokan_v_1_0_1_Optionu64';
  Some?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_1_Period = {
  __typename?: 'budokan_v_1_0_1_Period';
  end?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_1_PlatformMetrics = {
  __typename?: 'budokan_v_1_0_1_PlatformMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_tournaments?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_1_PlatformMetricsConnection = {
  __typename?: 'budokan_v_1_0_1_PlatformMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_PlatformMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_PlatformMetricsEdge = {
  __typename?: 'budokan_v_1_0_1_PlatformMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_PlatformMetrics>;
};

export type Budokan_V_1_0_1_PlatformMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_PlatformMetricsOrderField;
};

export enum Budokan_V_1_0_1_PlatformMetricsOrderField {
  Key = 'KEY',
  TotalTournaments = 'TOTAL_TOURNAMENTS'
}

export type Budokan_V_1_0_1_PlatformMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_tournaments?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_1_Prize = {
  __typename?: 'budokan_v_1_0_1_Prize';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u64']['output']>;
  payout_position?: Maybe<Scalars['u8']['output']>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  token_type?: Maybe<Budokan_V_1_0_1_TokenType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_1_PrizeClaim = {
  __typename?: 'budokan_v_1_0_1_PrizeClaim';
  claimed?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  prize_type?: Maybe<Budokan_V_1_0_1_PrizeType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_1_PrizeClaimConnection = {
  __typename?: 'budokan_v_1_0_1_PrizeClaimConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_PrizeClaimEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_PrizeClaimEdge = {
  __typename?: 'budokan_v_1_0_1_PrizeClaimEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_PrizeClaim>;
};

export type Budokan_V_1_0_1_PrizeClaimOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_PrizeClaimOrderField;
};

export enum Budokan_V_1_0_1_PrizeClaimOrderField {
  Claimed = 'CLAIMED',
  PrizeType = 'PRIZE_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_1_PrizeClaimWhereInput = {
  claimed?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_1_PrizeConnection = {
  __typename?: 'budokan_v_1_0_1_PrizeConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_PrizeEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_PrizeEdge = {
  __typename?: 'budokan_v_1_0_1_PrizeEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_Prize>;
};

export type Budokan_V_1_0_1_PrizeMetrics = {
  __typename?: 'budokan_v_1_0_1_PrizeMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_prizes?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_1_PrizeMetricsConnection = {
  __typename?: 'budokan_v_1_0_1_PrizeMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_PrizeMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_PrizeMetricsEdge = {
  __typename?: 'budokan_v_1_0_1_PrizeMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_PrizeMetrics>;
};

export type Budokan_V_1_0_1_PrizeMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_PrizeMetricsOrderField;
};

export enum Budokan_V_1_0_1_PrizeMetricsOrderField {
  Key = 'KEY',
  TotalPrizes = 'TOTAL_PRIZES'
}

export type Budokan_V_1_0_1_PrizeMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_prizes?: InputMaybe<Scalars['u64']['input']>;
  total_prizesEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_1_PrizeOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_PrizeOrderField;
};

export enum Budokan_V_1_0_1_PrizeOrderField {
  Id = 'ID',
  PayoutPosition = 'PAYOUT_POSITION',
  TokenAddress = 'TOKEN_ADDRESS',
  TokenType = 'TOKEN_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_1_PrizeType = {
  __typename?: 'budokan_v_1_0_1_PrizeType';
  EntryFees?: Maybe<Budokan_V_1_0_1_Role>;
  Sponsored?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_1_PrizeWhereInput = {
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  payout_position?: InputMaybe<Scalars['u8']['input']>;
  payout_positionEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionLIKE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_1_Registration = {
  __typename?: 'budokan_v_1_0_1_Registration';
  entity?: Maybe<World__Entity>;
  entry_number?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  game_token_id?: Maybe<Scalars['u64']['output']>;
  has_submitted?: Maybe<Scalars['bool']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_1_RegistrationConnection = {
  __typename?: 'budokan_v_1_0_1_RegistrationConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_RegistrationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_RegistrationEdge = {
  __typename?: 'budokan_v_1_0_1_RegistrationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_Registration>;
};

export type Budokan_V_1_0_1_RegistrationOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_RegistrationOrderField;
};

export enum Budokan_V_1_0_1_RegistrationOrderField {
  EntryNumber = 'ENTRY_NUMBER',
  GameTokenId = 'GAME_TOKEN_ID',
  HasSubmitted = 'HAS_SUBMITTED',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_1_RegistrationWhereInput = {
  entry_number?: InputMaybe<Scalars['u32']['input']>;
  entry_numberEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberLIKE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  game_token_id?: InputMaybe<Scalars['u64']['input']>;
  game_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  has_submitted?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_1_Role = {
  __typename?: 'budokan_v_1_0_1_Role';
  Position?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_1_Schedule = {
  __typename?: 'budokan_v_1_0_1_Schedule';
  game?: Maybe<Budokan_V_1_0_1_Period>;
  registration?: Maybe<Budokan_V_1_0_1_OptionPeriod>;
  submission_duration?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_1_Score = {
  __typename?: 'budokan_v_1_0_1_Score';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  score?: Maybe<Scalars['u32']['output']>;
};

export type Budokan_V_1_0_1_ScoreConnection = {
  __typename?: 'budokan_v_1_0_1_ScoreConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_ScoreEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_ScoreEdge = {
  __typename?: 'budokan_v_1_0_1_ScoreEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_Score>;
};

export type Budokan_V_1_0_1_ScoreOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_ScoreOrderField;
};

export enum Budokan_V_1_0_1_ScoreOrderField {
  GameId = 'GAME_ID',
  Score = 'SCORE'
}

export type Budokan_V_1_0_1_ScoreWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  score?: InputMaybe<Scalars['u32']['input']>;
  scoreEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreGT?: InputMaybe<Scalars['u32']['input']>;
  scoreGTE?: InputMaybe<Scalars['u32']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u32']['input']>;
  scoreLT?: InputMaybe<Scalars['u32']['input']>;
  scoreLTE?: InputMaybe<Scalars['u32']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Budokan_V_1_0_1_Settings = {
  __typename?: 'budokan_v_1_0_1_Settings';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  value?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_1_SettingsConnection = {
  __typename?: 'budokan_v_1_0_1_SettingsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_SettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_SettingsCounter = {
  __typename?: 'budokan_v_1_0_1_SettingsCounter';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_1_SettingsCounterConnection = {
  __typename?: 'budokan_v_1_0_1_SettingsCounterConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_SettingsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_SettingsCounterEdge = {
  __typename?: 'budokan_v_1_0_1_SettingsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_SettingsCounter>;
};

export type Budokan_V_1_0_1_SettingsCounterOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_SettingsCounterOrderField;
};

export enum Budokan_V_1_0_1_SettingsCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Budokan_V_1_0_1_SettingsCounterWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_1_SettingsDetails = {
  __typename?: 'budokan_v_1_0_1_SettingsDetails';
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_1_SettingsDetailsConnection = {
  __typename?: 'budokan_v_1_0_1_SettingsDetailsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_SettingsDetailsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_SettingsDetailsEdge = {
  __typename?: 'budokan_v_1_0_1_SettingsDetailsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_SettingsDetails>;
};

export type Budokan_V_1_0_1_SettingsDetailsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_SettingsDetailsOrderField;
};

export enum Budokan_V_1_0_1_SettingsDetailsOrderField {
  Description = 'DESCRIPTION',
  Exists = 'EXISTS',
  Id = 'ID',
  Name = 'NAME'
}

export type Budokan_V_1_0_1_SettingsDetailsWhereInput = {
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_1_SettingsEdge = {
  __typename?: 'budokan_v_1_0_1_SettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_Settings>;
};

export type Budokan_V_1_0_1_SettingsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_SettingsOrderField;
};

export enum Budokan_V_1_0_1_SettingsOrderField {
  Id = 'ID',
  Name = 'NAME',
  Value = 'VALUE'
}

export type Budokan_V_1_0_1_SettingsWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  value?: InputMaybe<Scalars['felt252']['input']>;
  valueEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueGT?: InputMaybe<Scalars['felt252']['input']>;
  valueGTE?: InputMaybe<Scalars['felt252']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['felt252']['input']>;
  valueLT?: InputMaybe<Scalars['felt252']['input']>;
  valueLTE?: InputMaybe<Scalars['felt252']['input']>;
  valueNEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_1_Token = {
  __typename?: 'budokan_v_1_0_1_Token';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  is_registered?: Maybe<Scalars['bool']['output']>;
  name?: Maybe<Scalars['ByteArray']['output']>;
  symbol?: Maybe<Scalars['ByteArray']['output']>;
  token_type?: Maybe<Budokan_V_1_0_1_TokenType>;
};

export type Budokan_V_1_0_1_TokenConnection = {
  __typename?: 'budokan_v_1_0_1_TokenConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_TokenEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_TokenEdge = {
  __typename?: 'budokan_v_1_0_1_TokenEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_Token>;
};

export type Budokan_V_1_0_1_TokenMetadata = {
  __typename?: 'budokan_v_1_0_1_TokenMetadata';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lifecycle?: Maybe<Budokan_V_1_0_1_Lifecycle>;
  minted_by?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_1_TokenMetadataConnection = {
  __typename?: 'budokan_v_1_0_1_TokenMetadataConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_TokenMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_TokenMetadataEdge = {
  __typename?: 'budokan_v_1_0_1_TokenMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_TokenMetadata>;
};

export type Budokan_V_1_0_1_TokenMetadataOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_TokenMetadataOrderField;
};

export enum Budokan_V_1_0_1_TokenMetadataOrderField {
  Lifecycle = 'LIFECYCLE',
  MintedBy = 'MINTED_BY',
  PlayerName = 'PLAYER_NAME',
  SettingsId = 'SETTINGS_ID',
  TokenId = 'TOKEN_ID'
}

export type Budokan_V_1_0_1_TokenMetadataWhereInput = {
  minted_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  token_id?: InputMaybe<Scalars['u64']['input']>;
  token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idGT?: InputMaybe<Scalars['u64']['input']>;
  token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  token_idLT?: InputMaybe<Scalars['u64']['input']>;
  token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_1_TokenOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_TokenOrderField;
};

export enum Budokan_V_1_0_1_TokenOrderField {
  Address = 'ADDRESS',
  IsRegistered = 'IS_REGISTERED',
  Name = 'NAME',
  Symbol = 'SYMBOL',
  TokenType = 'TOKEN_TYPE'
}

export type Budokan_V_1_0_1_TokenType = {
  __typename?: 'budokan_v_1_0_1_TokenType';
  erc20?: Maybe<Budokan_V_1_0_1_Erc20Data>;
  erc721?: Maybe<Budokan_V_1_0_1_Erc721Data>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_1_TokenWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  is_registered?: InputMaybe<Scalars['bool']['input']>;
  name?: InputMaybe<Scalars['ByteArray']['input']>;
  nameEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbol?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
};

export type Budokan_V_1_0_1_Tournament = {
  __typename?: 'budokan_v_1_0_1_Tournament';
  created_at?: Maybe<Scalars['u64']['output']>;
  created_by?: Maybe<Scalars['ContractAddress']['output']>;
  creator_token_id?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entry_fee?: Maybe<Budokan_V_1_0_1_OptionEntryFee>;
  entry_requirement?: Maybe<Budokan_V_1_0_1_OptionEntryRequirement>;
  eventMessage?: Maybe<World__EventMessage>;
  game_config?: Maybe<Budokan_V_1_0_1_GameConfig>;
  id?: Maybe<Scalars['u64']['output']>;
  metadata?: Maybe<Budokan_V_1_0_1_Metadata>;
  schedule?: Maybe<Budokan_V_1_0_1_Schedule>;
};

export type Budokan_V_1_0_1_TournamentConfig = {
  __typename?: 'budokan_v_1_0_1_TournamentConfig';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  safe_mode?: Maybe<Scalars['bool']['output']>;
  test_mode?: Maybe<Scalars['bool']['output']>;
};

export type Budokan_V_1_0_1_TournamentConfigConnection = {
  __typename?: 'budokan_v_1_0_1_TournamentConfigConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_TournamentConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_TournamentConfigEdge = {
  __typename?: 'budokan_v_1_0_1_TournamentConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_TournamentConfig>;
};

export type Budokan_V_1_0_1_TournamentConfigOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_TournamentConfigOrderField;
};

export enum Budokan_V_1_0_1_TournamentConfigOrderField {
  Key = 'KEY',
  SafeMode = 'SAFE_MODE',
  TestMode = 'TEST_MODE'
}

export type Budokan_V_1_0_1_TournamentConfigWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  safe_mode?: InputMaybe<Scalars['bool']['input']>;
  test_mode?: InputMaybe<Scalars['bool']['input']>;
};

export type Budokan_V_1_0_1_TournamentConnection = {
  __typename?: 'budokan_v_1_0_1_TournamentConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_TournamentEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_TournamentEdge = {
  __typename?: 'budokan_v_1_0_1_TournamentEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_Tournament>;
};

export type Budokan_V_1_0_1_TournamentOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_TournamentOrderField;
};

export enum Budokan_V_1_0_1_TournamentOrderField {
  CreatedAt = 'CREATED_AT',
  CreatedBy = 'CREATED_BY',
  CreatorTokenId = 'CREATOR_TOKEN_ID',
  EntryFee = 'ENTRY_FEE',
  EntryRequirement = 'ENTRY_REQUIREMENT',
  GameConfig = 'GAME_CONFIG',
  Id = 'ID',
  Metadata = 'METADATA',
  Schedule = 'SCHEDULE'
}

export type Budokan_V_1_0_1_TournamentTokenMetrics = {
  __typename?: 'budokan_v_1_0_1_TournamentTokenMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_supply?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_1_TournamentTokenMetricsConnection = {
  __typename?: 'budokan_v_1_0_1_TournamentTokenMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_1_TournamentTokenMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_1_TournamentTokenMetricsEdge = {
  __typename?: 'budokan_v_1_0_1_TournamentTokenMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_1_TournamentTokenMetrics>;
};

export type Budokan_V_1_0_1_TournamentTokenMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_1_TournamentTokenMetricsOrderField;
};

export enum Budokan_V_1_0_1_TournamentTokenMetricsOrderField {
  Key = 'KEY',
  TotalSupply = 'TOTAL_SUPPLY'
}

export type Budokan_V_1_0_1_TournamentTokenMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_supply?: InputMaybe<Scalars['u64']['input']>;
  total_supplyEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_1_TournamentType = {
  __typename?: 'budokan_v_1_0_1_TournamentType';
  option?: Maybe<Scalars['Enum']['output']>;
  participants?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  winners?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
};

export type Budokan_V_1_0_1_TournamentWhereInput = {
  created_at?: InputMaybe<Scalars['u64']['input']>;
  created_atEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atGT?: InputMaybe<Scalars['u64']['input']>;
  created_atGTE?: InputMaybe<Scalars['u64']['input']>;
  created_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_atLT?: InputMaybe<Scalars['u64']['input']>;
  created_atLTE?: InputMaybe<Scalars['u64']['input']>;
  created_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_token_id?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_2_Erc20Data = {
  __typename?: 'budokan_v_1_0_2_ERC20Data';
  amount?: Maybe<Scalars['u128']['output']>;
};

export type Budokan_V_1_0_2_Erc721Data = {
  __typename?: 'budokan_v_1_0_2_ERC721Data';
  id?: Maybe<Scalars['u128']['output']>;
};

export type Budokan_V_1_0_2_EntryCount = {
  __typename?: 'budokan_v_1_0_2_EntryCount';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_2_EntryCountConnection = {
  __typename?: 'budokan_v_1_0_2_EntryCountConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_EntryCountEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_EntryCountEdge = {
  __typename?: 'budokan_v_1_0_2_EntryCountEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_EntryCount>;
};

export type Budokan_V_1_0_2_EntryCountOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_EntryCountOrderField;
};

export enum Budokan_V_1_0_2_EntryCountOrderField {
  Count = 'COUNT',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_2_EntryCountWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_2_EntryFee = {
  __typename?: 'budokan_v_1_0_2_EntryFee';
  amount?: Maybe<Scalars['u128']['output']>;
  distribution?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  game_creator_share?: Maybe<Budokan_V_1_0_2_Optionu8>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  tournament_creator_share?: Maybe<Budokan_V_1_0_2_Optionu8>;
};

export type Budokan_V_1_0_2_EntryRequirement = {
  __typename?: 'budokan_v_1_0_2_EntryRequirement';
  allowlist?: Maybe<Array<Maybe<Scalars['ContractAddress']['output']>>>;
  option?: Maybe<Scalars['Enum']['output']>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
  tournament?: Maybe<Budokan_V_1_0_2_TournamentType>;
};

export type Budokan_V_1_0_2_GameConfig = {
  __typename?: 'budokan_v_1_0_2_GameConfig';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  prize_spots?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
};

export type Budokan_V_1_0_2_GameCounter = {
  __typename?: 'budokan_v_1_0_2_GameCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_2_GameCounterConnection = {
  __typename?: 'budokan_v_1_0_2_GameCounterConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_GameCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_GameCounterEdge = {
  __typename?: 'budokan_v_1_0_2_GameCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_GameCounter>;
};

export type Budokan_V_1_0_2_GameCounterOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_GameCounterOrderField;
};

export enum Budokan_V_1_0_2_GameCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Budokan_V_1_0_2_GameCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_2_GameMetadata = {
  __typename?: 'budokan_v_1_0_2_GameMetadata';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  creator_address?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  developer?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  genre?: Maybe<Scalars['felt252']['output']>;
  image?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  publisher?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_2_GameMetadataConnection = {
  __typename?: 'budokan_v_1_0_2_GameMetadataConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_GameMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_GameMetadataEdge = {
  __typename?: 'budokan_v_1_0_2_GameMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_GameMetadata>;
};

export type Budokan_V_1_0_2_GameMetadataOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_GameMetadataOrderField;
};

export enum Budokan_V_1_0_2_GameMetadataOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  CreatorAddress = 'CREATOR_ADDRESS',
  Description = 'DESCRIPTION',
  Developer = 'DEVELOPER',
  Genre = 'GENRE',
  Image = 'IMAGE',
  Name = 'NAME',
  Publisher = 'PUBLISHER'
}

export type Budokan_V_1_0_2_GameMetadataWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  developer?: InputMaybe<Scalars['felt252']['input']>;
  developerEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerGT?: InputMaybe<Scalars['felt252']['input']>;
  developerGTE?: InputMaybe<Scalars['felt252']['input']>;
  developerIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerLIKE?: InputMaybe<Scalars['felt252']['input']>;
  developerLT?: InputMaybe<Scalars['felt252']['input']>;
  developerLTE?: InputMaybe<Scalars['felt252']['input']>;
  developerNEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genre?: InputMaybe<Scalars['felt252']['input']>;
  genreEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreGT?: InputMaybe<Scalars['felt252']['input']>;
  genreGTE?: InputMaybe<Scalars['felt252']['input']>;
  genreIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genreLT?: InputMaybe<Scalars['felt252']['input']>;
  genreLTE?: InputMaybe<Scalars['felt252']['input']>;
  genreNEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  image?: InputMaybe<Scalars['ByteArray']['input']>;
  imageEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisher?: InputMaybe<Scalars['felt252']['input']>;
  publisherEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherGT?: InputMaybe<Scalars['felt252']['input']>;
  publisherGTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisherLT?: InputMaybe<Scalars['felt252']['input']>;
  publisherLTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherNEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_2_Leaderboard = {
  __typename?: 'budokan_v_1_0_2_Leaderboard';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  token_ids?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_2_LeaderboardConnection = {
  __typename?: 'budokan_v_1_0_2_LeaderboardConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_LeaderboardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_LeaderboardEdge = {
  __typename?: 'budokan_v_1_0_2_LeaderboardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_Leaderboard>;
};

export type Budokan_V_1_0_2_LeaderboardOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_LeaderboardOrderField;
};

export enum Budokan_V_1_0_2_LeaderboardOrderField {
  TokenIds = 'TOKEN_IDS',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_2_LeaderboardWhereInput = {
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_2_Lifecycle = {
  __typename?: 'budokan_v_1_0_2_Lifecycle';
  end?: Maybe<Budokan_V_1_0_2_Optionu64>;
  mint?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Budokan_V_1_0_2_Optionu64>;
};

export type Budokan_V_1_0_2_Metadata = {
  __typename?: 'budokan_v_1_0_2_Metadata';
  description?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_2_OptionEntryFee = {
  __typename?: 'budokan_v_1_0_2_OptionEntryFee';
  Some?: Maybe<Budokan_V_1_0_2_EntryFee>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_2_OptionEntryRequirement = {
  __typename?: 'budokan_v_1_0_2_OptionEntryRequirement';
  Some?: Maybe<Budokan_V_1_0_2_EntryRequirement>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_2_OptionPeriod = {
  __typename?: 'budokan_v_1_0_2_OptionPeriod';
  Some?: Maybe<Budokan_V_1_0_2_Period>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_2_Optionu8 = {
  __typename?: 'budokan_v_1_0_2_Optionu8';
  Some?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_2_Optionu64 = {
  __typename?: 'budokan_v_1_0_2_Optionu64';
  Some?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_2_Period = {
  __typename?: 'budokan_v_1_0_2_Period';
  end?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_2_PlatformMetrics = {
  __typename?: 'budokan_v_1_0_2_PlatformMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_tournaments?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_2_PlatformMetricsConnection = {
  __typename?: 'budokan_v_1_0_2_PlatformMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_PlatformMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_PlatformMetricsEdge = {
  __typename?: 'budokan_v_1_0_2_PlatformMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_PlatformMetrics>;
};

export type Budokan_V_1_0_2_PlatformMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_PlatformMetricsOrderField;
};

export enum Budokan_V_1_0_2_PlatformMetricsOrderField {
  Key = 'KEY',
  TotalTournaments = 'TOTAL_TOURNAMENTS'
}

export type Budokan_V_1_0_2_PlatformMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_tournaments?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_2_Prize = {
  __typename?: 'budokan_v_1_0_2_Prize';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u64']['output']>;
  payout_position?: Maybe<Scalars['u8']['output']>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  token_type?: Maybe<Budokan_V_1_0_2_TokenType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_2_PrizeClaim = {
  __typename?: 'budokan_v_1_0_2_PrizeClaim';
  claimed?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  prize_type?: Maybe<Budokan_V_1_0_2_PrizeType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_2_PrizeClaimConnection = {
  __typename?: 'budokan_v_1_0_2_PrizeClaimConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_PrizeClaimEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_PrizeClaimEdge = {
  __typename?: 'budokan_v_1_0_2_PrizeClaimEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_PrizeClaim>;
};

export type Budokan_V_1_0_2_PrizeClaimOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_PrizeClaimOrderField;
};

export enum Budokan_V_1_0_2_PrizeClaimOrderField {
  Claimed = 'CLAIMED',
  PrizeType = 'PRIZE_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_2_PrizeClaimWhereInput = {
  claimed?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_2_PrizeConnection = {
  __typename?: 'budokan_v_1_0_2_PrizeConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_PrizeEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_PrizeEdge = {
  __typename?: 'budokan_v_1_0_2_PrizeEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_Prize>;
};

export type Budokan_V_1_0_2_PrizeMetrics = {
  __typename?: 'budokan_v_1_0_2_PrizeMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_prizes?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_2_PrizeMetricsConnection = {
  __typename?: 'budokan_v_1_0_2_PrizeMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_PrizeMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_PrizeMetricsEdge = {
  __typename?: 'budokan_v_1_0_2_PrizeMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_PrizeMetrics>;
};

export type Budokan_V_1_0_2_PrizeMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_PrizeMetricsOrderField;
};

export enum Budokan_V_1_0_2_PrizeMetricsOrderField {
  Key = 'KEY',
  TotalPrizes = 'TOTAL_PRIZES'
}

export type Budokan_V_1_0_2_PrizeMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_prizes?: InputMaybe<Scalars['u64']['input']>;
  total_prizesEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_2_PrizeOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_PrizeOrderField;
};

export enum Budokan_V_1_0_2_PrizeOrderField {
  Id = 'ID',
  PayoutPosition = 'PAYOUT_POSITION',
  TokenAddress = 'TOKEN_ADDRESS',
  TokenType = 'TOKEN_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_2_PrizeType = {
  __typename?: 'budokan_v_1_0_2_PrizeType';
  EntryFees?: Maybe<Budokan_V_1_0_2_Role>;
  Sponsored?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_2_PrizeWhereInput = {
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  payout_position?: InputMaybe<Scalars['u8']['input']>;
  payout_positionEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionLIKE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_2_Registration = {
  __typename?: 'budokan_v_1_0_2_Registration';
  entity?: Maybe<World__Entity>;
  entry_number?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  game_token_id?: Maybe<Scalars['u64']['output']>;
  has_submitted?: Maybe<Scalars['bool']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_2_RegistrationConnection = {
  __typename?: 'budokan_v_1_0_2_RegistrationConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_RegistrationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_RegistrationEdge = {
  __typename?: 'budokan_v_1_0_2_RegistrationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_Registration>;
};

export type Budokan_V_1_0_2_RegistrationOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_RegistrationOrderField;
};

export enum Budokan_V_1_0_2_RegistrationOrderField {
  EntryNumber = 'ENTRY_NUMBER',
  GameTokenId = 'GAME_TOKEN_ID',
  HasSubmitted = 'HAS_SUBMITTED',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_2_RegistrationWhereInput = {
  entry_number?: InputMaybe<Scalars['u32']['input']>;
  entry_numberEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberLIKE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  game_token_id?: InputMaybe<Scalars['u64']['input']>;
  game_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  has_submitted?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_2_Role = {
  __typename?: 'budokan_v_1_0_2_Role';
  Position?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_2_Schedule = {
  __typename?: 'budokan_v_1_0_2_Schedule';
  game?: Maybe<Budokan_V_1_0_2_Period>;
  registration?: Maybe<Budokan_V_1_0_2_OptionPeriod>;
  submission_duration?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_2_Score = {
  __typename?: 'budokan_v_1_0_2_Score';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  score?: Maybe<Scalars['u32']['output']>;
};

export type Budokan_V_1_0_2_ScoreConnection = {
  __typename?: 'budokan_v_1_0_2_ScoreConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_ScoreEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_ScoreEdge = {
  __typename?: 'budokan_v_1_0_2_ScoreEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_Score>;
};

export type Budokan_V_1_0_2_ScoreOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_ScoreOrderField;
};

export enum Budokan_V_1_0_2_ScoreOrderField {
  GameId = 'GAME_ID',
  Score = 'SCORE'
}

export type Budokan_V_1_0_2_ScoreWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  score?: InputMaybe<Scalars['u32']['input']>;
  scoreEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreGT?: InputMaybe<Scalars['u32']['input']>;
  scoreGTE?: InputMaybe<Scalars['u32']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u32']['input']>;
  scoreLT?: InputMaybe<Scalars['u32']['input']>;
  scoreLTE?: InputMaybe<Scalars['u32']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Budokan_V_1_0_2_Settings = {
  __typename?: 'budokan_v_1_0_2_Settings';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  value?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_2_SettingsConnection = {
  __typename?: 'budokan_v_1_0_2_SettingsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_SettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_SettingsCounter = {
  __typename?: 'budokan_v_1_0_2_SettingsCounter';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_2_SettingsCounterConnection = {
  __typename?: 'budokan_v_1_0_2_SettingsCounterConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_SettingsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_SettingsCounterEdge = {
  __typename?: 'budokan_v_1_0_2_SettingsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_SettingsCounter>;
};

export type Budokan_V_1_0_2_SettingsCounterOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_SettingsCounterOrderField;
};

export enum Budokan_V_1_0_2_SettingsCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Budokan_V_1_0_2_SettingsCounterWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_2_SettingsDetails = {
  __typename?: 'budokan_v_1_0_2_SettingsDetails';
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_2_SettingsDetailsConnection = {
  __typename?: 'budokan_v_1_0_2_SettingsDetailsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_SettingsDetailsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_SettingsDetailsEdge = {
  __typename?: 'budokan_v_1_0_2_SettingsDetailsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_SettingsDetails>;
};

export type Budokan_V_1_0_2_SettingsDetailsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_SettingsDetailsOrderField;
};

export enum Budokan_V_1_0_2_SettingsDetailsOrderField {
  Description = 'DESCRIPTION',
  Exists = 'EXISTS',
  Id = 'ID',
  Name = 'NAME'
}

export type Budokan_V_1_0_2_SettingsDetailsWhereInput = {
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_2_SettingsEdge = {
  __typename?: 'budokan_v_1_0_2_SettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_Settings>;
};

export type Budokan_V_1_0_2_SettingsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_SettingsOrderField;
};

export enum Budokan_V_1_0_2_SettingsOrderField {
  Id = 'ID',
  Name = 'NAME',
  Value = 'VALUE'
}

export type Budokan_V_1_0_2_SettingsWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  value?: InputMaybe<Scalars['felt252']['input']>;
  valueEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueGT?: InputMaybe<Scalars['felt252']['input']>;
  valueGTE?: InputMaybe<Scalars['felt252']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['felt252']['input']>;
  valueLT?: InputMaybe<Scalars['felt252']['input']>;
  valueLTE?: InputMaybe<Scalars['felt252']['input']>;
  valueNEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_2_Token = {
  __typename?: 'budokan_v_1_0_2_Token';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  is_registered?: Maybe<Scalars['bool']['output']>;
  name?: Maybe<Scalars['ByteArray']['output']>;
  symbol?: Maybe<Scalars['ByteArray']['output']>;
  token_type?: Maybe<Budokan_V_1_0_2_TokenType>;
};

export type Budokan_V_1_0_2_TokenConnection = {
  __typename?: 'budokan_v_1_0_2_TokenConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_TokenEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_TokenEdge = {
  __typename?: 'budokan_v_1_0_2_TokenEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_Token>;
};

export type Budokan_V_1_0_2_TokenMetadata = {
  __typename?: 'budokan_v_1_0_2_TokenMetadata';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lifecycle?: Maybe<Budokan_V_1_0_2_Lifecycle>;
  minted_by?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_2_TokenMetadataConnection = {
  __typename?: 'budokan_v_1_0_2_TokenMetadataConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_TokenMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_TokenMetadataEdge = {
  __typename?: 'budokan_v_1_0_2_TokenMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_TokenMetadata>;
};

export type Budokan_V_1_0_2_TokenMetadataOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_TokenMetadataOrderField;
};

export enum Budokan_V_1_0_2_TokenMetadataOrderField {
  Lifecycle = 'LIFECYCLE',
  MintedBy = 'MINTED_BY',
  PlayerName = 'PLAYER_NAME',
  SettingsId = 'SETTINGS_ID',
  TokenId = 'TOKEN_ID'
}

export type Budokan_V_1_0_2_TokenMetadataWhereInput = {
  minted_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  token_id?: InputMaybe<Scalars['u64']['input']>;
  token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idGT?: InputMaybe<Scalars['u64']['input']>;
  token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  token_idLT?: InputMaybe<Scalars['u64']['input']>;
  token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_2_TokenOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_TokenOrderField;
};

export enum Budokan_V_1_0_2_TokenOrderField {
  Address = 'ADDRESS',
  IsRegistered = 'IS_REGISTERED',
  Name = 'NAME',
  Symbol = 'SYMBOL',
  TokenType = 'TOKEN_TYPE'
}

export type Budokan_V_1_0_2_TokenType = {
  __typename?: 'budokan_v_1_0_2_TokenType';
  erc20?: Maybe<Budokan_V_1_0_2_Erc20Data>;
  erc721?: Maybe<Budokan_V_1_0_2_Erc721Data>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_2_TokenWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  is_registered?: InputMaybe<Scalars['bool']['input']>;
  name?: InputMaybe<Scalars['ByteArray']['input']>;
  nameEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbol?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
};

export type Budokan_V_1_0_2_Tournament = {
  __typename?: 'budokan_v_1_0_2_Tournament';
  created_at?: Maybe<Scalars['u64']['output']>;
  created_by?: Maybe<Scalars['ContractAddress']['output']>;
  creator_token_id?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entry_fee?: Maybe<Budokan_V_1_0_2_OptionEntryFee>;
  entry_requirement?: Maybe<Budokan_V_1_0_2_OptionEntryRequirement>;
  eventMessage?: Maybe<World__EventMessage>;
  game_config?: Maybe<Budokan_V_1_0_2_GameConfig>;
  id?: Maybe<Scalars['u64']['output']>;
  metadata?: Maybe<Budokan_V_1_0_2_Metadata>;
  schedule?: Maybe<Budokan_V_1_0_2_Schedule>;
};

export type Budokan_V_1_0_2_TournamentConfig = {
  __typename?: 'budokan_v_1_0_2_TournamentConfig';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  safe_mode?: Maybe<Scalars['bool']['output']>;
  test_mode?: Maybe<Scalars['bool']['output']>;
};

export type Budokan_V_1_0_2_TournamentConfigConnection = {
  __typename?: 'budokan_v_1_0_2_TournamentConfigConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_TournamentConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_TournamentConfigEdge = {
  __typename?: 'budokan_v_1_0_2_TournamentConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_TournamentConfig>;
};

export type Budokan_V_1_0_2_TournamentConfigOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_TournamentConfigOrderField;
};

export enum Budokan_V_1_0_2_TournamentConfigOrderField {
  Key = 'KEY',
  SafeMode = 'SAFE_MODE',
  TestMode = 'TEST_MODE'
}

export type Budokan_V_1_0_2_TournamentConfigWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  safe_mode?: InputMaybe<Scalars['bool']['input']>;
  test_mode?: InputMaybe<Scalars['bool']['input']>;
};

export type Budokan_V_1_0_2_TournamentConnection = {
  __typename?: 'budokan_v_1_0_2_TournamentConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_TournamentEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_TournamentEdge = {
  __typename?: 'budokan_v_1_0_2_TournamentEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_Tournament>;
};

export type Budokan_V_1_0_2_TournamentOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_TournamentOrderField;
};

export enum Budokan_V_1_0_2_TournamentOrderField {
  CreatedAt = 'CREATED_AT',
  CreatedBy = 'CREATED_BY',
  CreatorTokenId = 'CREATOR_TOKEN_ID',
  EntryFee = 'ENTRY_FEE',
  EntryRequirement = 'ENTRY_REQUIREMENT',
  GameConfig = 'GAME_CONFIG',
  Id = 'ID',
  Metadata = 'METADATA',
  Schedule = 'SCHEDULE'
}

export type Budokan_V_1_0_2_TournamentTokenMetrics = {
  __typename?: 'budokan_v_1_0_2_TournamentTokenMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_supply?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_2_TournamentTokenMetricsConnection = {
  __typename?: 'budokan_v_1_0_2_TournamentTokenMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_2_TournamentTokenMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_2_TournamentTokenMetricsEdge = {
  __typename?: 'budokan_v_1_0_2_TournamentTokenMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_2_TournamentTokenMetrics>;
};

export type Budokan_V_1_0_2_TournamentTokenMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_2_TournamentTokenMetricsOrderField;
};

export enum Budokan_V_1_0_2_TournamentTokenMetricsOrderField {
  Key = 'KEY',
  TotalSupply = 'TOTAL_SUPPLY'
}

export type Budokan_V_1_0_2_TournamentTokenMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_supply?: InputMaybe<Scalars['u64']['input']>;
  total_supplyEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_2_TournamentType = {
  __typename?: 'budokan_v_1_0_2_TournamentType';
  option?: Maybe<Scalars['Enum']['output']>;
  participants?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  winners?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
};

export type Budokan_V_1_0_2_TournamentWhereInput = {
  created_at?: InputMaybe<Scalars['u64']['input']>;
  created_atEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atGT?: InputMaybe<Scalars['u64']['input']>;
  created_atGTE?: InputMaybe<Scalars['u64']['input']>;
  created_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_atLT?: InputMaybe<Scalars['u64']['input']>;
  created_atLTE?: InputMaybe<Scalars['u64']['input']>;
  created_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_token_id?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_4_Erc20Data = {
  __typename?: 'budokan_v_1_0_4_ERC20Data';
  amount?: Maybe<Scalars['u128']['output']>;
};

export type Budokan_V_1_0_4_Erc721Data = {
  __typename?: 'budokan_v_1_0_4_ERC721Data';
  id?: Maybe<Scalars['u128']['output']>;
};

export type Budokan_V_1_0_4_EntryCount = {
  __typename?: 'budokan_v_1_0_4_EntryCount';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_4_EntryCountConnection = {
  __typename?: 'budokan_v_1_0_4_EntryCountConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_EntryCountEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_EntryCountEdge = {
  __typename?: 'budokan_v_1_0_4_EntryCountEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_EntryCount>;
};

export type Budokan_V_1_0_4_EntryCountOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_EntryCountOrderField;
};

export enum Budokan_V_1_0_4_EntryCountOrderField {
  Count = 'COUNT',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_4_EntryCountWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_4_EntryFee = {
  __typename?: 'budokan_v_1_0_4_EntryFee';
  amount?: Maybe<Scalars['u128']['output']>;
  distribution?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  game_creator_share?: Maybe<Budokan_V_1_0_4_Optionu8>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  tournament_creator_share?: Maybe<Budokan_V_1_0_4_Optionu8>;
};

export type Budokan_V_1_0_4_EntryRequirement = {
  __typename?: 'budokan_v_1_0_4_EntryRequirement';
  entry_limit?: Maybe<Budokan_V_1_0_4_Optionu32>;
  entry_requirement_type?: Maybe<Budokan_V_1_0_4_EntryRequirementType>;
};

export type Budokan_V_1_0_4_EntryRequirementType = {
  __typename?: 'budokan_v_1_0_4_EntryRequirementType';
  allowlist?: Maybe<Array<Maybe<Scalars['ContractAddress']['output']>>>;
  option?: Maybe<Scalars['Enum']['output']>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
  tournament?: Maybe<Budokan_V_1_0_4_TournamentType>;
};

export type Budokan_V_1_0_4_GameConfig = {
  __typename?: 'budokan_v_1_0_4_GameConfig';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  prize_spots?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
};

export type Budokan_V_1_0_4_GameCounter = {
  __typename?: 'budokan_v_1_0_4_GameCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_4_GameCounterConnection = {
  __typename?: 'budokan_v_1_0_4_GameCounterConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_GameCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_GameCounterEdge = {
  __typename?: 'budokan_v_1_0_4_GameCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_GameCounter>;
};

export type Budokan_V_1_0_4_GameCounterOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_GameCounterOrderField;
};

export enum Budokan_V_1_0_4_GameCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Budokan_V_1_0_4_GameCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_4_GameMetadata = {
  __typename?: 'budokan_v_1_0_4_GameMetadata';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  creator_address?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  developer?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  genre?: Maybe<Scalars['felt252']['output']>;
  image?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  publisher?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_4_GameMetadataConnection = {
  __typename?: 'budokan_v_1_0_4_GameMetadataConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_GameMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_GameMetadataEdge = {
  __typename?: 'budokan_v_1_0_4_GameMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_GameMetadata>;
};

export type Budokan_V_1_0_4_GameMetadataOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_GameMetadataOrderField;
};

export enum Budokan_V_1_0_4_GameMetadataOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  CreatorAddress = 'CREATOR_ADDRESS',
  Description = 'DESCRIPTION',
  Developer = 'DEVELOPER',
  Genre = 'GENRE',
  Image = 'IMAGE',
  Name = 'NAME',
  Publisher = 'PUBLISHER'
}

export type Budokan_V_1_0_4_GameMetadataWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  developer?: InputMaybe<Scalars['felt252']['input']>;
  developerEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerGT?: InputMaybe<Scalars['felt252']['input']>;
  developerGTE?: InputMaybe<Scalars['felt252']['input']>;
  developerIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerLIKE?: InputMaybe<Scalars['felt252']['input']>;
  developerLT?: InputMaybe<Scalars['felt252']['input']>;
  developerLTE?: InputMaybe<Scalars['felt252']['input']>;
  developerNEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genre?: InputMaybe<Scalars['felt252']['input']>;
  genreEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreGT?: InputMaybe<Scalars['felt252']['input']>;
  genreGTE?: InputMaybe<Scalars['felt252']['input']>;
  genreIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genreLT?: InputMaybe<Scalars['felt252']['input']>;
  genreLTE?: InputMaybe<Scalars['felt252']['input']>;
  genreNEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  image?: InputMaybe<Scalars['ByteArray']['input']>;
  imageEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisher?: InputMaybe<Scalars['felt252']['input']>;
  publisherEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherGT?: InputMaybe<Scalars['felt252']['input']>;
  publisherGTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisherLT?: InputMaybe<Scalars['felt252']['input']>;
  publisherLTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherNEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_4_Leaderboard = {
  __typename?: 'budokan_v_1_0_4_Leaderboard';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  token_ids?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_4_LeaderboardConnection = {
  __typename?: 'budokan_v_1_0_4_LeaderboardConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_LeaderboardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_LeaderboardEdge = {
  __typename?: 'budokan_v_1_0_4_LeaderboardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_Leaderboard>;
};

export type Budokan_V_1_0_4_LeaderboardOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_LeaderboardOrderField;
};

export enum Budokan_V_1_0_4_LeaderboardOrderField {
  TokenIds = 'TOKEN_IDS',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_4_LeaderboardWhereInput = {
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_4_Lifecycle = {
  __typename?: 'budokan_v_1_0_4_Lifecycle';
  end?: Maybe<Budokan_V_1_0_4_Optionu64>;
  mint?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Budokan_V_1_0_4_Optionu64>;
};

export type Budokan_V_1_0_4_Metadata = {
  __typename?: 'budokan_v_1_0_4_Metadata';
  description?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_4_NftQualification = {
  __typename?: 'budokan_v_1_0_4_NFTQualification';
  token_id?: Maybe<Scalars['u256']['output']>;
};

export type Budokan_V_1_0_4_OptionEntryFee = {
  __typename?: 'budokan_v_1_0_4_OptionEntryFee';
  Some?: Maybe<Budokan_V_1_0_4_EntryFee>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_4_OptionEntryRequirement = {
  __typename?: 'budokan_v_1_0_4_OptionEntryRequirement';
  Some?: Maybe<Budokan_V_1_0_4_EntryRequirement>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_4_OptionPeriod = {
  __typename?: 'budokan_v_1_0_4_OptionPeriod';
  Some?: Maybe<Budokan_V_1_0_4_Period>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_4_Optionu8 = {
  __typename?: 'budokan_v_1_0_4_Optionu8';
  Some?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_4_Optionu32 = {
  __typename?: 'budokan_v_1_0_4_Optionu32';
  Some?: Maybe<Scalars['u32']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_4_Optionu64 = {
  __typename?: 'budokan_v_1_0_4_Optionu64';
  Some?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_4_Period = {
  __typename?: 'budokan_v_1_0_4_Period';
  end?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_4_PlatformMetrics = {
  __typename?: 'budokan_v_1_0_4_PlatformMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_tournaments?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_4_PlatformMetricsConnection = {
  __typename?: 'budokan_v_1_0_4_PlatformMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_PlatformMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_PlatformMetricsEdge = {
  __typename?: 'budokan_v_1_0_4_PlatformMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_PlatformMetrics>;
};

export type Budokan_V_1_0_4_PlatformMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_PlatformMetricsOrderField;
};

export enum Budokan_V_1_0_4_PlatformMetricsOrderField {
  Key = 'KEY',
  TotalTournaments = 'TOTAL_TOURNAMENTS'
}

export type Budokan_V_1_0_4_PlatformMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_tournaments?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_4_Prize = {
  __typename?: 'budokan_v_1_0_4_Prize';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u64']['output']>;
  payout_position?: Maybe<Scalars['u8']['output']>;
  sponsor_address?: Maybe<Scalars['ContractAddress']['output']>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  token_type?: Maybe<Budokan_V_1_0_4_TokenType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_4_PrizeClaim = {
  __typename?: 'budokan_v_1_0_4_PrizeClaim';
  claimed?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  prize_type?: Maybe<Budokan_V_1_0_4_PrizeType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_4_PrizeClaimConnection = {
  __typename?: 'budokan_v_1_0_4_PrizeClaimConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_PrizeClaimEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_PrizeClaimEdge = {
  __typename?: 'budokan_v_1_0_4_PrizeClaimEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_PrizeClaim>;
};

export type Budokan_V_1_0_4_PrizeClaimOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_PrizeClaimOrderField;
};

export enum Budokan_V_1_0_4_PrizeClaimOrderField {
  Claimed = 'CLAIMED',
  PrizeType = 'PRIZE_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_4_PrizeClaimWhereInput = {
  claimed?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_4_PrizeConnection = {
  __typename?: 'budokan_v_1_0_4_PrizeConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_PrizeEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_PrizeEdge = {
  __typename?: 'budokan_v_1_0_4_PrizeEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_Prize>;
};

export type Budokan_V_1_0_4_PrizeMetrics = {
  __typename?: 'budokan_v_1_0_4_PrizeMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_prizes?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_4_PrizeMetricsConnection = {
  __typename?: 'budokan_v_1_0_4_PrizeMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_PrizeMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_PrizeMetricsEdge = {
  __typename?: 'budokan_v_1_0_4_PrizeMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_PrizeMetrics>;
};

export type Budokan_V_1_0_4_PrizeMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_PrizeMetricsOrderField;
};

export enum Budokan_V_1_0_4_PrizeMetricsOrderField {
  Key = 'KEY',
  TotalPrizes = 'TOTAL_PRIZES'
}

export type Budokan_V_1_0_4_PrizeMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_prizes?: InputMaybe<Scalars['u64']['input']>;
  total_prizesEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_4_PrizeOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_PrizeOrderField;
};

export enum Budokan_V_1_0_4_PrizeOrderField {
  Id = 'ID',
  PayoutPosition = 'PAYOUT_POSITION',
  SponsorAddress = 'SPONSOR_ADDRESS',
  TokenAddress = 'TOKEN_ADDRESS',
  TokenType = 'TOKEN_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_4_PrizeType = {
  __typename?: 'budokan_v_1_0_4_PrizeType';
  EntryFees?: Maybe<Budokan_V_1_0_4_Role>;
  Sponsored?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_4_PrizeWhereInput = {
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  payout_position?: InputMaybe<Scalars['u8']['input']>;
  payout_positionEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionLIKE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  sponsor_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  sponsor_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  sponsor_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_4_Qualification = {
  __typename?: 'budokan_v_1_0_4_Qualification';
  allowlist?: Maybe<Scalars['ContractAddress']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
  token?: Maybe<Budokan_V_1_0_4_NftQualification>;
  tournament?: Maybe<Budokan_V_1_0_4_TournamentQualification>;
};

export type Budokan_V_1_0_4_QualificationEntries = {
  __typename?: 'budokan_v_1_0_4_QualificationEntries';
  entity?: Maybe<World__Entity>;
  entry_count?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  qualification?: Maybe<Budokan_V_1_0_4_Qualification>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_4_QualificationEntriesConnection = {
  __typename?: 'budokan_v_1_0_4_QualificationEntriesConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_QualificationEntriesEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_QualificationEntriesEdge = {
  __typename?: 'budokan_v_1_0_4_QualificationEntriesEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_QualificationEntries>;
};

export type Budokan_V_1_0_4_QualificationEntriesOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_QualificationEntriesOrderField;
};

export enum Budokan_V_1_0_4_QualificationEntriesOrderField {
  EntryCount = 'ENTRY_COUNT',
  Qualification = 'QUALIFICATION',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_4_QualificationEntriesWhereInput = {
  entry_count?: InputMaybe<Scalars['u32']['input']>;
  entry_countEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_countGT?: InputMaybe<Scalars['u32']['input']>;
  entry_countGTE?: InputMaybe<Scalars['u32']['input']>;
  entry_countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_countLIKE?: InputMaybe<Scalars['u32']['input']>;
  entry_countLT?: InputMaybe<Scalars['u32']['input']>;
  entry_countLTE?: InputMaybe<Scalars['u32']['input']>;
  entry_countNEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_4_Registration = {
  __typename?: 'budokan_v_1_0_4_Registration';
  entity?: Maybe<World__Entity>;
  entry_number?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  game_token_id?: Maybe<Scalars['u64']['output']>;
  has_submitted?: Maybe<Scalars['bool']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_4_RegistrationConnection = {
  __typename?: 'budokan_v_1_0_4_RegistrationConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_RegistrationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_RegistrationEdge = {
  __typename?: 'budokan_v_1_0_4_RegistrationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_Registration>;
};

export type Budokan_V_1_0_4_RegistrationOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_RegistrationOrderField;
};

export enum Budokan_V_1_0_4_RegistrationOrderField {
  EntryNumber = 'ENTRY_NUMBER',
  GameTokenId = 'GAME_TOKEN_ID',
  HasSubmitted = 'HAS_SUBMITTED',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_4_RegistrationWhereInput = {
  entry_number?: InputMaybe<Scalars['u32']['input']>;
  entry_numberEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberLIKE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  game_token_id?: InputMaybe<Scalars['u64']['input']>;
  game_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  has_submitted?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_4_Role = {
  __typename?: 'budokan_v_1_0_4_Role';
  Position?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_4_Schedule = {
  __typename?: 'budokan_v_1_0_4_Schedule';
  game?: Maybe<Budokan_V_1_0_4_Period>;
  registration?: Maybe<Budokan_V_1_0_4_OptionPeriod>;
  submission_duration?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_4_Score = {
  __typename?: 'budokan_v_1_0_4_Score';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  score?: Maybe<Scalars['u32']['output']>;
};

export type Budokan_V_1_0_4_ScoreConnection = {
  __typename?: 'budokan_v_1_0_4_ScoreConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_ScoreEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_ScoreEdge = {
  __typename?: 'budokan_v_1_0_4_ScoreEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_Score>;
};

export type Budokan_V_1_0_4_ScoreOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_ScoreOrderField;
};

export enum Budokan_V_1_0_4_ScoreOrderField {
  GameId = 'GAME_ID',
  Score = 'SCORE'
}

export type Budokan_V_1_0_4_ScoreWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  score?: InputMaybe<Scalars['u32']['input']>;
  scoreEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreGT?: InputMaybe<Scalars['u32']['input']>;
  scoreGTE?: InputMaybe<Scalars['u32']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u32']['input']>;
  scoreLT?: InputMaybe<Scalars['u32']['input']>;
  scoreLTE?: InputMaybe<Scalars['u32']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Budokan_V_1_0_4_Settings = {
  __typename?: 'budokan_v_1_0_4_Settings';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  value?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_4_SettingsConnection = {
  __typename?: 'budokan_v_1_0_4_SettingsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_SettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_SettingsCounter = {
  __typename?: 'budokan_v_1_0_4_SettingsCounter';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_4_SettingsCounterConnection = {
  __typename?: 'budokan_v_1_0_4_SettingsCounterConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_SettingsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_SettingsCounterEdge = {
  __typename?: 'budokan_v_1_0_4_SettingsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_SettingsCounter>;
};

export type Budokan_V_1_0_4_SettingsCounterOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_SettingsCounterOrderField;
};

export enum Budokan_V_1_0_4_SettingsCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Budokan_V_1_0_4_SettingsCounterWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_4_SettingsDetails = {
  __typename?: 'budokan_v_1_0_4_SettingsDetails';
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_4_SettingsDetailsConnection = {
  __typename?: 'budokan_v_1_0_4_SettingsDetailsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_SettingsDetailsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_SettingsDetailsEdge = {
  __typename?: 'budokan_v_1_0_4_SettingsDetailsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_SettingsDetails>;
};

export type Budokan_V_1_0_4_SettingsDetailsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_SettingsDetailsOrderField;
};

export enum Budokan_V_1_0_4_SettingsDetailsOrderField {
  Description = 'DESCRIPTION',
  Exists = 'EXISTS',
  Id = 'ID',
  Name = 'NAME'
}

export type Budokan_V_1_0_4_SettingsDetailsWhereInput = {
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_4_SettingsEdge = {
  __typename?: 'budokan_v_1_0_4_SettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_Settings>;
};

export type Budokan_V_1_0_4_SettingsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_SettingsOrderField;
};

export enum Budokan_V_1_0_4_SettingsOrderField {
  Id = 'ID',
  Name = 'NAME',
  Value = 'VALUE'
}

export type Budokan_V_1_0_4_SettingsWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  value?: InputMaybe<Scalars['felt252']['input']>;
  valueEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueGT?: InputMaybe<Scalars['felt252']['input']>;
  valueGTE?: InputMaybe<Scalars['felt252']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['felt252']['input']>;
  valueLT?: InputMaybe<Scalars['felt252']['input']>;
  valueLTE?: InputMaybe<Scalars['felt252']['input']>;
  valueNEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_4_Token = {
  __typename?: 'budokan_v_1_0_4_Token';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  is_registered?: Maybe<Scalars['bool']['output']>;
  name?: Maybe<Scalars['ByteArray']['output']>;
  symbol?: Maybe<Scalars['ByteArray']['output']>;
  token_type?: Maybe<Budokan_V_1_0_4_TokenType>;
};

export type Budokan_V_1_0_4_TokenConnection = {
  __typename?: 'budokan_v_1_0_4_TokenConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_TokenEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_TokenEdge = {
  __typename?: 'budokan_v_1_0_4_TokenEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_Token>;
};

export type Budokan_V_1_0_4_TokenMetadata = {
  __typename?: 'budokan_v_1_0_4_TokenMetadata';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lifecycle?: Maybe<Budokan_V_1_0_4_Lifecycle>;
  minted_by?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_4_TokenMetadataConnection = {
  __typename?: 'budokan_v_1_0_4_TokenMetadataConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_TokenMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_TokenMetadataEdge = {
  __typename?: 'budokan_v_1_0_4_TokenMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_TokenMetadata>;
};

export type Budokan_V_1_0_4_TokenMetadataOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_TokenMetadataOrderField;
};

export enum Budokan_V_1_0_4_TokenMetadataOrderField {
  Lifecycle = 'LIFECYCLE',
  MintedBy = 'MINTED_BY',
  PlayerName = 'PLAYER_NAME',
  SettingsId = 'SETTINGS_ID',
  TokenId = 'TOKEN_ID'
}

export type Budokan_V_1_0_4_TokenMetadataWhereInput = {
  minted_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  token_id?: InputMaybe<Scalars['u64']['input']>;
  token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idGT?: InputMaybe<Scalars['u64']['input']>;
  token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  token_idLT?: InputMaybe<Scalars['u64']['input']>;
  token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_4_TokenOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_TokenOrderField;
};

export enum Budokan_V_1_0_4_TokenOrderField {
  Address = 'ADDRESS',
  IsRegistered = 'IS_REGISTERED',
  Name = 'NAME',
  Symbol = 'SYMBOL',
  TokenType = 'TOKEN_TYPE'
}

export type Budokan_V_1_0_4_TokenType = {
  __typename?: 'budokan_v_1_0_4_TokenType';
  erc20?: Maybe<Budokan_V_1_0_4_Erc20Data>;
  erc721?: Maybe<Budokan_V_1_0_4_Erc721Data>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_4_TokenWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  is_registered?: InputMaybe<Scalars['bool']['input']>;
  name?: InputMaybe<Scalars['ByteArray']['input']>;
  nameEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbol?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
};

export type Budokan_V_1_0_4_Tournament = {
  __typename?: 'budokan_v_1_0_4_Tournament';
  created_at?: Maybe<Scalars['u64']['output']>;
  created_by?: Maybe<Scalars['ContractAddress']['output']>;
  creator_token_id?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entry_fee?: Maybe<Budokan_V_1_0_4_OptionEntryFee>;
  entry_requirement?: Maybe<Budokan_V_1_0_4_OptionEntryRequirement>;
  eventMessage?: Maybe<World__EventMessage>;
  game_config?: Maybe<Budokan_V_1_0_4_GameConfig>;
  id?: Maybe<Scalars['u64']['output']>;
  metadata?: Maybe<Budokan_V_1_0_4_Metadata>;
  schedule?: Maybe<Budokan_V_1_0_4_Schedule>;
};

export type Budokan_V_1_0_4_TournamentConfig = {
  __typename?: 'budokan_v_1_0_4_TournamentConfig';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  safe_mode?: Maybe<Scalars['bool']['output']>;
  test_mode?: Maybe<Scalars['bool']['output']>;
};

export type Budokan_V_1_0_4_TournamentConfigConnection = {
  __typename?: 'budokan_v_1_0_4_TournamentConfigConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_TournamentConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_TournamentConfigEdge = {
  __typename?: 'budokan_v_1_0_4_TournamentConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_TournamentConfig>;
};

export type Budokan_V_1_0_4_TournamentConfigOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_TournamentConfigOrderField;
};

export enum Budokan_V_1_0_4_TournamentConfigOrderField {
  Key = 'KEY',
  SafeMode = 'SAFE_MODE',
  TestMode = 'TEST_MODE'
}

export type Budokan_V_1_0_4_TournamentConfigWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  safe_mode?: InputMaybe<Scalars['bool']['input']>;
  test_mode?: InputMaybe<Scalars['bool']['input']>;
};

export type Budokan_V_1_0_4_TournamentConnection = {
  __typename?: 'budokan_v_1_0_4_TournamentConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_TournamentEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_TournamentEdge = {
  __typename?: 'budokan_v_1_0_4_TournamentEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_Tournament>;
};

export type Budokan_V_1_0_4_TournamentOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_TournamentOrderField;
};

export enum Budokan_V_1_0_4_TournamentOrderField {
  CreatedAt = 'CREATED_AT',
  CreatedBy = 'CREATED_BY',
  CreatorTokenId = 'CREATOR_TOKEN_ID',
  EntryFee = 'ENTRY_FEE',
  EntryRequirement = 'ENTRY_REQUIREMENT',
  GameConfig = 'GAME_CONFIG',
  Id = 'ID',
  Metadata = 'METADATA',
  Schedule = 'SCHEDULE'
}

export type Budokan_V_1_0_4_TournamentQualification = {
  __typename?: 'budokan_v_1_0_4_TournamentQualification';
  position?: Maybe<Scalars['u8']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_4_TournamentTokenMetrics = {
  __typename?: 'budokan_v_1_0_4_TournamentTokenMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_supply?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_4_TournamentTokenMetricsConnection = {
  __typename?: 'budokan_v_1_0_4_TournamentTokenMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_4_TournamentTokenMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_4_TournamentTokenMetricsEdge = {
  __typename?: 'budokan_v_1_0_4_TournamentTokenMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_4_TournamentTokenMetrics>;
};

export type Budokan_V_1_0_4_TournamentTokenMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_4_TournamentTokenMetricsOrderField;
};

export enum Budokan_V_1_0_4_TournamentTokenMetricsOrderField {
  Key = 'KEY',
  TotalSupply = 'TOTAL_SUPPLY'
}

export type Budokan_V_1_0_4_TournamentTokenMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_supply?: InputMaybe<Scalars['u64']['input']>;
  total_supplyEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_4_TournamentType = {
  __typename?: 'budokan_v_1_0_4_TournamentType';
  option?: Maybe<Scalars['Enum']['output']>;
  participants?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  winners?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
};

export type Budokan_V_1_0_4_TournamentWhereInput = {
  created_at?: InputMaybe<Scalars['u64']['input']>;
  created_atEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atGT?: InputMaybe<Scalars['u64']['input']>;
  created_atGTE?: InputMaybe<Scalars['u64']['input']>;
  created_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_atLT?: InputMaybe<Scalars['u64']['input']>;
  created_atLTE?: InputMaybe<Scalars['u64']['input']>;
  created_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_token_id?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_5_Erc20Data = {
  __typename?: 'budokan_v_1_0_5_ERC20Data';
  amount?: Maybe<Scalars['u128']['output']>;
};

export type Budokan_V_1_0_5_Erc721Data = {
  __typename?: 'budokan_v_1_0_5_ERC721Data';
  id?: Maybe<Scalars['u128']['output']>;
};

export type Budokan_V_1_0_5_EntryCount = {
  __typename?: 'budokan_v_1_0_5_EntryCount';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_5_EntryCountConnection = {
  __typename?: 'budokan_v_1_0_5_EntryCountConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_EntryCountEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_EntryCountEdge = {
  __typename?: 'budokan_v_1_0_5_EntryCountEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_EntryCount>;
};

export type Budokan_V_1_0_5_EntryCountOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_EntryCountOrderField;
};

export enum Budokan_V_1_0_5_EntryCountOrderField {
  Count = 'COUNT',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_5_EntryCountWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_5_EntryFee = {
  __typename?: 'budokan_v_1_0_5_EntryFee';
  amount?: Maybe<Scalars['u128']['output']>;
  distribution?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  game_creator_share?: Maybe<Budokan_V_1_0_5_Optionu8>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  tournament_creator_share?: Maybe<Budokan_V_1_0_5_Optionu8>;
};

export type Budokan_V_1_0_5_EntryRequirement = {
  __typename?: 'budokan_v_1_0_5_EntryRequirement';
  entry_limit?: Maybe<Scalars['u8']['output']>;
  entry_requirement_type?: Maybe<Budokan_V_1_0_5_EntryRequirementType>;
};

export type Budokan_V_1_0_5_EntryRequirementType = {
  __typename?: 'budokan_v_1_0_5_EntryRequirementType';
  allowlist?: Maybe<Array<Maybe<Scalars['ContractAddress']['output']>>>;
  option?: Maybe<Scalars['Enum']['output']>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
  tournament?: Maybe<Budokan_V_1_0_5_TournamentType>;
};

export type Budokan_V_1_0_5_GameConfig = {
  __typename?: 'budokan_v_1_0_5_GameConfig';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  prize_spots?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
};

export type Budokan_V_1_0_5_GameCounter = {
  __typename?: 'budokan_v_1_0_5_GameCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_5_GameCounterConnection = {
  __typename?: 'budokan_v_1_0_5_GameCounterConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_GameCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_GameCounterEdge = {
  __typename?: 'budokan_v_1_0_5_GameCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_GameCounter>;
};

export type Budokan_V_1_0_5_GameCounterOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_GameCounterOrderField;
};

export enum Budokan_V_1_0_5_GameCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Budokan_V_1_0_5_GameCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_5_GameMetadata = {
  __typename?: 'budokan_v_1_0_5_GameMetadata';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  creator_address?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  developer?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  genre?: Maybe<Scalars['felt252']['output']>;
  image?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  publisher?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_5_GameMetadataConnection = {
  __typename?: 'budokan_v_1_0_5_GameMetadataConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_GameMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_GameMetadataEdge = {
  __typename?: 'budokan_v_1_0_5_GameMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_GameMetadata>;
};

export type Budokan_V_1_0_5_GameMetadataOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_GameMetadataOrderField;
};

export enum Budokan_V_1_0_5_GameMetadataOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  CreatorAddress = 'CREATOR_ADDRESS',
  Description = 'DESCRIPTION',
  Developer = 'DEVELOPER',
  Genre = 'GENRE',
  Image = 'IMAGE',
  Name = 'NAME',
  Publisher = 'PUBLISHER'
}

export type Budokan_V_1_0_5_GameMetadataWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  developer?: InputMaybe<Scalars['felt252']['input']>;
  developerEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerGT?: InputMaybe<Scalars['felt252']['input']>;
  developerGTE?: InputMaybe<Scalars['felt252']['input']>;
  developerIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerLIKE?: InputMaybe<Scalars['felt252']['input']>;
  developerLT?: InputMaybe<Scalars['felt252']['input']>;
  developerLTE?: InputMaybe<Scalars['felt252']['input']>;
  developerNEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genre?: InputMaybe<Scalars['felt252']['input']>;
  genreEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreGT?: InputMaybe<Scalars['felt252']['input']>;
  genreGTE?: InputMaybe<Scalars['felt252']['input']>;
  genreIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genreLT?: InputMaybe<Scalars['felt252']['input']>;
  genreLTE?: InputMaybe<Scalars['felt252']['input']>;
  genreNEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  image?: InputMaybe<Scalars['ByteArray']['input']>;
  imageEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisher?: InputMaybe<Scalars['felt252']['input']>;
  publisherEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherGT?: InputMaybe<Scalars['felt252']['input']>;
  publisherGTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisherLT?: InputMaybe<Scalars['felt252']['input']>;
  publisherLTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherNEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_5_Leaderboard = {
  __typename?: 'budokan_v_1_0_5_Leaderboard';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  token_ids?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_5_LeaderboardConnection = {
  __typename?: 'budokan_v_1_0_5_LeaderboardConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_LeaderboardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_LeaderboardEdge = {
  __typename?: 'budokan_v_1_0_5_LeaderboardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_Leaderboard>;
};

export type Budokan_V_1_0_5_LeaderboardOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_LeaderboardOrderField;
};

export enum Budokan_V_1_0_5_LeaderboardOrderField {
  TokenIds = 'TOKEN_IDS',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_5_LeaderboardWhereInput = {
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_5_Lifecycle = {
  __typename?: 'budokan_v_1_0_5_Lifecycle';
  end?: Maybe<Budokan_V_1_0_5_Optionu64>;
  mint?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Budokan_V_1_0_5_Optionu64>;
};

export type Budokan_V_1_0_5_Metadata = {
  __typename?: 'budokan_v_1_0_5_Metadata';
  description?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_5_NftQualification = {
  __typename?: 'budokan_v_1_0_5_NFTQualification';
  token_id?: Maybe<Scalars['u256']['output']>;
};

export type Budokan_V_1_0_5_OptionEntryFee = {
  __typename?: 'budokan_v_1_0_5_OptionEntryFee';
  Some?: Maybe<Budokan_V_1_0_5_EntryFee>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_5_OptionEntryRequirement = {
  __typename?: 'budokan_v_1_0_5_OptionEntryRequirement';
  Some?: Maybe<Budokan_V_1_0_5_EntryRequirement>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_5_OptionPeriod = {
  __typename?: 'budokan_v_1_0_5_OptionPeriod';
  Some?: Maybe<Budokan_V_1_0_5_Period>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_5_Optionu8 = {
  __typename?: 'budokan_v_1_0_5_Optionu8';
  Some?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_5_Optionu64 = {
  __typename?: 'budokan_v_1_0_5_Optionu64';
  Some?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_5_Period = {
  __typename?: 'budokan_v_1_0_5_Period';
  end?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_5_PlatformMetrics = {
  __typename?: 'budokan_v_1_0_5_PlatformMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_tournaments?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_5_PlatformMetricsConnection = {
  __typename?: 'budokan_v_1_0_5_PlatformMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_PlatformMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_PlatformMetricsEdge = {
  __typename?: 'budokan_v_1_0_5_PlatformMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_PlatformMetrics>;
};

export type Budokan_V_1_0_5_PlatformMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_PlatformMetricsOrderField;
};

export enum Budokan_V_1_0_5_PlatformMetricsOrderField {
  Key = 'KEY',
  TotalTournaments = 'TOTAL_TOURNAMENTS'
}

export type Budokan_V_1_0_5_PlatformMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_tournaments?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_5_Prize = {
  __typename?: 'budokan_v_1_0_5_Prize';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u64']['output']>;
  payout_position?: Maybe<Scalars['u8']['output']>;
  sponsor_address?: Maybe<Scalars['ContractAddress']['output']>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  token_type?: Maybe<Budokan_V_1_0_5_TokenType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_5_PrizeClaim = {
  __typename?: 'budokan_v_1_0_5_PrizeClaim';
  claimed?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  prize_type?: Maybe<Budokan_V_1_0_5_PrizeType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_5_PrizeClaimConnection = {
  __typename?: 'budokan_v_1_0_5_PrizeClaimConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_PrizeClaimEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_PrizeClaimEdge = {
  __typename?: 'budokan_v_1_0_5_PrizeClaimEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_PrizeClaim>;
};

export type Budokan_V_1_0_5_PrizeClaimOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_PrizeClaimOrderField;
};

export enum Budokan_V_1_0_5_PrizeClaimOrderField {
  Claimed = 'CLAIMED',
  PrizeType = 'PRIZE_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_5_PrizeClaimWhereInput = {
  claimed?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_5_PrizeConnection = {
  __typename?: 'budokan_v_1_0_5_PrizeConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_PrizeEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_PrizeEdge = {
  __typename?: 'budokan_v_1_0_5_PrizeEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_Prize>;
};

export type Budokan_V_1_0_5_PrizeMetrics = {
  __typename?: 'budokan_v_1_0_5_PrizeMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_prizes?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_5_PrizeMetricsConnection = {
  __typename?: 'budokan_v_1_0_5_PrizeMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_PrizeMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_PrizeMetricsEdge = {
  __typename?: 'budokan_v_1_0_5_PrizeMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_PrizeMetrics>;
};

export type Budokan_V_1_0_5_PrizeMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_PrizeMetricsOrderField;
};

export enum Budokan_V_1_0_5_PrizeMetricsOrderField {
  Key = 'KEY',
  TotalPrizes = 'TOTAL_PRIZES'
}

export type Budokan_V_1_0_5_PrizeMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_prizes?: InputMaybe<Scalars['u64']['input']>;
  total_prizesEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_5_PrizeOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_PrizeOrderField;
};

export enum Budokan_V_1_0_5_PrizeOrderField {
  Id = 'ID',
  PayoutPosition = 'PAYOUT_POSITION',
  SponsorAddress = 'SPONSOR_ADDRESS',
  TokenAddress = 'TOKEN_ADDRESS',
  TokenType = 'TOKEN_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_5_PrizeType = {
  __typename?: 'budokan_v_1_0_5_PrizeType';
  EntryFees?: Maybe<Budokan_V_1_0_5_Role>;
  Sponsored?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_5_PrizeWhereInput = {
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  payout_position?: InputMaybe<Scalars['u8']['input']>;
  payout_positionEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionLIKE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  sponsor_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  sponsor_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  sponsor_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_5_QualificationEntries = {
  __typename?: 'budokan_v_1_0_5_QualificationEntries';
  entity?: Maybe<World__Entity>;
  entry_count?: Maybe<Scalars['u8']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  qualification_proof?: Maybe<Budokan_V_1_0_5_QualificationProof>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_5_QualificationEntriesConnection = {
  __typename?: 'budokan_v_1_0_5_QualificationEntriesConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_QualificationEntriesEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_QualificationEntriesEdge = {
  __typename?: 'budokan_v_1_0_5_QualificationEntriesEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_QualificationEntries>;
};

export type Budokan_V_1_0_5_QualificationEntriesOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_QualificationEntriesOrderField;
};

export enum Budokan_V_1_0_5_QualificationEntriesOrderField {
  EntryCount = 'ENTRY_COUNT',
  QualificationProof = 'QUALIFICATION_PROOF',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_5_QualificationEntriesWhereInput = {
  entry_count?: InputMaybe<Scalars['u8']['input']>;
  entry_countEQ?: InputMaybe<Scalars['u8']['input']>;
  entry_countGT?: InputMaybe<Scalars['u8']['input']>;
  entry_countGTE?: InputMaybe<Scalars['u8']['input']>;
  entry_countIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  entry_countLIKE?: InputMaybe<Scalars['u8']['input']>;
  entry_countLT?: InputMaybe<Scalars['u8']['input']>;
  entry_countLTE?: InputMaybe<Scalars['u8']['input']>;
  entry_countNEQ?: InputMaybe<Scalars['u8']['input']>;
  entry_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  entry_countNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_5_QualificationProof = {
  __typename?: 'budokan_v_1_0_5_QualificationProof';
  Address?: Maybe<Scalars['ContractAddress']['output']>;
  NFT?: Maybe<Budokan_V_1_0_5_NftQualification>;
  Tournament?: Maybe<Budokan_V_1_0_5_TournamentQualification>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_5_Registration = {
  __typename?: 'budokan_v_1_0_5_Registration';
  entity?: Maybe<World__Entity>;
  entry_number?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  game_token_id?: Maybe<Scalars['u64']['output']>;
  has_submitted?: Maybe<Scalars['bool']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_5_RegistrationConnection = {
  __typename?: 'budokan_v_1_0_5_RegistrationConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_RegistrationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_RegistrationEdge = {
  __typename?: 'budokan_v_1_0_5_RegistrationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_Registration>;
};

export type Budokan_V_1_0_5_RegistrationOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_RegistrationOrderField;
};

export enum Budokan_V_1_0_5_RegistrationOrderField {
  EntryNumber = 'ENTRY_NUMBER',
  GameTokenId = 'GAME_TOKEN_ID',
  HasSubmitted = 'HAS_SUBMITTED',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_5_RegistrationWhereInput = {
  entry_number?: InputMaybe<Scalars['u32']['input']>;
  entry_numberEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberLIKE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  game_token_id?: InputMaybe<Scalars['u64']['input']>;
  game_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  has_submitted?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_5_Role = {
  __typename?: 'budokan_v_1_0_5_Role';
  Position?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_5_Schedule = {
  __typename?: 'budokan_v_1_0_5_Schedule';
  game?: Maybe<Budokan_V_1_0_5_Period>;
  registration?: Maybe<Budokan_V_1_0_5_OptionPeriod>;
  submission_duration?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_5_Score = {
  __typename?: 'budokan_v_1_0_5_Score';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  score?: Maybe<Scalars['u32']['output']>;
};

export type Budokan_V_1_0_5_ScoreConnection = {
  __typename?: 'budokan_v_1_0_5_ScoreConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_ScoreEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_ScoreEdge = {
  __typename?: 'budokan_v_1_0_5_ScoreEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_Score>;
};

export type Budokan_V_1_0_5_ScoreOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_ScoreOrderField;
};

export enum Budokan_V_1_0_5_ScoreOrderField {
  GameId = 'GAME_ID',
  Score = 'SCORE'
}

export type Budokan_V_1_0_5_ScoreWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  score?: InputMaybe<Scalars['u32']['input']>;
  scoreEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreGT?: InputMaybe<Scalars['u32']['input']>;
  scoreGTE?: InputMaybe<Scalars['u32']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u32']['input']>;
  scoreLT?: InputMaybe<Scalars['u32']['input']>;
  scoreLTE?: InputMaybe<Scalars['u32']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Budokan_V_1_0_5_Settings = {
  __typename?: 'budokan_v_1_0_5_Settings';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  value?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_5_SettingsConnection = {
  __typename?: 'budokan_v_1_0_5_SettingsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_SettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_SettingsCounter = {
  __typename?: 'budokan_v_1_0_5_SettingsCounter';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_5_SettingsCounterConnection = {
  __typename?: 'budokan_v_1_0_5_SettingsCounterConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_SettingsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_SettingsCounterEdge = {
  __typename?: 'budokan_v_1_0_5_SettingsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_SettingsCounter>;
};

export type Budokan_V_1_0_5_SettingsCounterOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_SettingsCounterOrderField;
};

export enum Budokan_V_1_0_5_SettingsCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Budokan_V_1_0_5_SettingsCounterWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_5_SettingsDetails = {
  __typename?: 'budokan_v_1_0_5_SettingsDetails';
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_5_SettingsDetailsConnection = {
  __typename?: 'budokan_v_1_0_5_SettingsDetailsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_SettingsDetailsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_SettingsDetailsEdge = {
  __typename?: 'budokan_v_1_0_5_SettingsDetailsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_SettingsDetails>;
};

export type Budokan_V_1_0_5_SettingsDetailsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_SettingsDetailsOrderField;
};

export enum Budokan_V_1_0_5_SettingsDetailsOrderField {
  Description = 'DESCRIPTION',
  Exists = 'EXISTS',
  Id = 'ID',
  Name = 'NAME'
}

export type Budokan_V_1_0_5_SettingsDetailsWhereInput = {
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_5_SettingsEdge = {
  __typename?: 'budokan_v_1_0_5_SettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_Settings>;
};

export type Budokan_V_1_0_5_SettingsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_SettingsOrderField;
};

export enum Budokan_V_1_0_5_SettingsOrderField {
  Id = 'ID',
  Name = 'NAME',
  Value = 'VALUE'
}

export type Budokan_V_1_0_5_SettingsWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  value?: InputMaybe<Scalars['felt252']['input']>;
  valueEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueGT?: InputMaybe<Scalars['felt252']['input']>;
  valueGTE?: InputMaybe<Scalars['felt252']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['felt252']['input']>;
  valueLT?: InputMaybe<Scalars['felt252']['input']>;
  valueLTE?: InputMaybe<Scalars['felt252']['input']>;
  valueNEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_5_Token = {
  __typename?: 'budokan_v_1_0_5_Token';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  is_registered?: Maybe<Scalars['bool']['output']>;
  name?: Maybe<Scalars['ByteArray']['output']>;
  symbol?: Maybe<Scalars['ByteArray']['output']>;
  token_type?: Maybe<Budokan_V_1_0_5_TokenType>;
};

export type Budokan_V_1_0_5_TokenConnection = {
  __typename?: 'budokan_v_1_0_5_TokenConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_TokenEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_TokenEdge = {
  __typename?: 'budokan_v_1_0_5_TokenEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_Token>;
};

export type Budokan_V_1_0_5_TokenMetadata = {
  __typename?: 'budokan_v_1_0_5_TokenMetadata';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lifecycle?: Maybe<Budokan_V_1_0_5_Lifecycle>;
  minted_by?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_5_TokenMetadataConnection = {
  __typename?: 'budokan_v_1_0_5_TokenMetadataConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_TokenMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_TokenMetadataEdge = {
  __typename?: 'budokan_v_1_0_5_TokenMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_TokenMetadata>;
};

export type Budokan_V_1_0_5_TokenMetadataOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_TokenMetadataOrderField;
};

export enum Budokan_V_1_0_5_TokenMetadataOrderField {
  Lifecycle = 'LIFECYCLE',
  MintedBy = 'MINTED_BY',
  PlayerName = 'PLAYER_NAME',
  SettingsId = 'SETTINGS_ID',
  TokenId = 'TOKEN_ID'
}

export type Budokan_V_1_0_5_TokenMetadataWhereInput = {
  minted_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  token_id?: InputMaybe<Scalars['u64']['input']>;
  token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idGT?: InputMaybe<Scalars['u64']['input']>;
  token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  token_idLT?: InputMaybe<Scalars['u64']['input']>;
  token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_5_TokenOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_TokenOrderField;
};

export enum Budokan_V_1_0_5_TokenOrderField {
  Address = 'ADDRESS',
  IsRegistered = 'IS_REGISTERED',
  Name = 'NAME',
  Symbol = 'SYMBOL',
  TokenType = 'TOKEN_TYPE'
}

export type Budokan_V_1_0_5_TokenType = {
  __typename?: 'budokan_v_1_0_5_TokenType';
  erc20?: Maybe<Budokan_V_1_0_5_Erc20Data>;
  erc721?: Maybe<Budokan_V_1_0_5_Erc721Data>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_5_TokenWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  is_registered?: InputMaybe<Scalars['bool']['input']>;
  name?: InputMaybe<Scalars['ByteArray']['input']>;
  nameEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbol?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
};

export type Budokan_V_1_0_5_Tournament = {
  __typename?: 'budokan_v_1_0_5_Tournament';
  created_at?: Maybe<Scalars['u64']['output']>;
  created_by?: Maybe<Scalars['ContractAddress']['output']>;
  creator_token_id?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entry_fee?: Maybe<Budokan_V_1_0_5_OptionEntryFee>;
  entry_requirement?: Maybe<Budokan_V_1_0_5_OptionEntryRequirement>;
  eventMessage?: Maybe<World__EventMessage>;
  game_config?: Maybe<Budokan_V_1_0_5_GameConfig>;
  id?: Maybe<Scalars['u64']['output']>;
  metadata?: Maybe<Budokan_V_1_0_5_Metadata>;
  schedule?: Maybe<Budokan_V_1_0_5_Schedule>;
};

export type Budokan_V_1_0_5_TournamentConfig = {
  __typename?: 'budokan_v_1_0_5_TournamentConfig';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  safe_mode?: Maybe<Scalars['bool']['output']>;
  test_mode?: Maybe<Scalars['bool']['output']>;
};

export type Budokan_V_1_0_5_TournamentConfigConnection = {
  __typename?: 'budokan_v_1_0_5_TournamentConfigConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_TournamentConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_TournamentConfigEdge = {
  __typename?: 'budokan_v_1_0_5_TournamentConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_TournamentConfig>;
};

export type Budokan_V_1_0_5_TournamentConfigOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_TournamentConfigOrderField;
};

export enum Budokan_V_1_0_5_TournamentConfigOrderField {
  Key = 'KEY',
  SafeMode = 'SAFE_MODE',
  TestMode = 'TEST_MODE'
}

export type Budokan_V_1_0_5_TournamentConfigWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  safe_mode?: InputMaybe<Scalars['bool']['input']>;
  test_mode?: InputMaybe<Scalars['bool']['input']>;
};

export type Budokan_V_1_0_5_TournamentConnection = {
  __typename?: 'budokan_v_1_0_5_TournamentConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_TournamentEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_TournamentEdge = {
  __typename?: 'budokan_v_1_0_5_TournamentEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_Tournament>;
};

export type Budokan_V_1_0_5_TournamentOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_TournamentOrderField;
};

export enum Budokan_V_1_0_5_TournamentOrderField {
  CreatedAt = 'CREATED_AT',
  CreatedBy = 'CREATED_BY',
  CreatorTokenId = 'CREATOR_TOKEN_ID',
  EntryFee = 'ENTRY_FEE',
  EntryRequirement = 'ENTRY_REQUIREMENT',
  GameConfig = 'GAME_CONFIG',
  Id = 'ID',
  Metadata = 'METADATA',
  Schedule = 'SCHEDULE'
}

export type Budokan_V_1_0_5_TournamentQualification = {
  __typename?: 'budokan_v_1_0_5_TournamentQualification';
  position?: Maybe<Scalars['u8']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_5_TournamentTokenMetrics = {
  __typename?: 'budokan_v_1_0_5_TournamentTokenMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_supply?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_5_TournamentTokenMetricsConnection = {
  __typename?: 'budokan_v_1_0_5_TournamentTokenMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_5_TournamentTokenMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_5_TournamentTokenMetricsEdge = {
  __typename?: 'budokan_v_1_0_5_TournamentTokenMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_5_TournamentTokenMetrics>;
};

export type Budokan_V_1_0_5_TournamentTokenMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_5_TournamentTokenMetricsOrderField;
};

export enum Budokan_V_1_0_5_TournamentTokenMetricsOrderField {
  Key = 'KEY',
  TotalSupply = 'TOTAL_SUPPLY'
}

export type Budokan_V_1_0_5_TournamentTokenMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_supply?: InputMaybe<Scalars['u64']['input']>;
  total_supplyEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_5_TournamentType = {
  __typename?: 'budokan_v_1_0_5_TournamentType';
  option?: Maybe<Scalars['Enum']['output']>;
  participants?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  winners?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
};

export type Budokan_V_1_0_5_TournamentWhereInput = {
  created_at?: InputMaybe<Scalars['u64']['input']>;
  created_atEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atGT?: InputMaybe<Scalars['u64']['input']>;
  created_atGTE?: InputMaybe<Scalars['u64']['input']>;
  created_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_atLT?: InputMaybe<Scalars['u64']['input']>;
  created_atLTE?: InputMaybe<Scalars['u64']['input']>;
  created_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_token_id?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_6_Erc20Data = {
  __typename?: 'budokan_v_1_0_6_ERC20Data';
  amount?: Maybe<Scalars['u128']['output']>;
};

export type Budokan_V_1_0_6_Erc721Data = {
  __typename?: 'budokan_v_1_0_6_ERC721Data';
  id?: Maybe<Scalars['u128']['output']>;
};

export type Budokan_V_1_0_6_EntryCount = {
  __typename?: 'budokan_v_1_0_6_EntryCount';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_6_EntryCountConnection = {
  __typename?: 'budokan_v_1_0_6_EntryCountConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_EntryCountEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_EntryCountEdge = {
  __typename?: 'budokan_v_1_0_6_EntryCountEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_EntryCount>;
};

export type Budokan_V_1_0_6_EntryCountOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_EntryCountOrderField;
};

export enum Budokan_V_1_0_6_EntryCountOrderField {
  Count = 'COUNT',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_6_EntryCountWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_6_EntryFee = {
  __typename?: 'budokan_v_1_0_6_EntryFee';
  amount?: Maybe<Scalars['u128']['output']>;
  distribution?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  game_creator_share?: Maybe<Budokan_V_1_0_6_Optionu8>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  tournament_creator_share?: Maybe<Budokan_V_1_0_6_Optionu8>;
};

export type Budokan_V_1_0_6_EntryRequirement = {
  __typename?: 'budokan_v_1_0_6_EntryRequirement';
  entry_limit?: Maybe<Scalars['u8']['output']>;
  entry_requirement_type?: Maybe<Budokan_V_1_0_6_EntryRequirementType>;
};

export type Budokan_V_1_0_6_EntryRequirementType = {
  __typename?: 'budokan_v_1_0_6_EntryRequirementType';
  allowlist?: Maybe<Array<Maybe<Scalars['ContractAddress']['output']>>>;
  option?: Maybe<Scalars['Enum']['output']>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
  tournament?: Maybe<Budokan_V_1_0_6_TournamentType>;
};

export type Budokan_V_1_0_6_GameConfig = {
  __typename?: 'budokan_v_1_0_6_GameConfig';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  prize_spots?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
};

export type Budokan_V_1_0_6_GameCounter = {
  __typename?: 'budokan_v_1_0_6_GameCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_6_GameCounterConnection = {
  __typename?: 'budokan_v_1_0_6_GameCounterConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_GameCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_GameCounterEdge = {
  __typename?: 'budokan_v_1_0_6_GameCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_GameCounter>;
};

export type Budokan_V_1_0_6_GameCounterOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_GameCounterOrderField;
};

export enum Budokan_V_1_0_6_GameCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Budokan_V_1_0_6_GameCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_6_GameMetadata = {
  __typename?: 'budokan_v_1_0_6_GameMetadata';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  creator_address?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  developer?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  genre?: Maybe<Scalars['felt252']['output']>;
  image?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  publisher?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_6_GameMetadataConnection = {
  __typename?: 'budokan_v_1_0_6_GameMetadataConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_GameMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_GameMetadataEdge = {
  __typename?: 'budokan_v_1_0_6_GameMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_GameMetadata>;
};

export type Budokan_V_1_0_6_GameMetadataOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_GameMetadataOrderField;
};

export enum Budokan_V_1_0_6_GameMetadataOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  CreatorAddress = 'CREATOR_ADDRESS',
  Description = 'DESCRIPTION',
  Developer = 'DEVELOPER',
  Genre = 'GENRE',
  Image = 'IMAGE',
  Name = 'NAME',
  Publisher = 'PUBLISHER'
}

export type Budokan_V_1_0_6_GameMetadataWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  developer?: InputMaybe<Scalars['felt252']['input']>;
  developerEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerGT?: InputMaybe<Scalars['felt252']['input']>;
  developerGTE?: InputMaybe<Scalars['felt252']['input']>;
  developerIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerLIKE?: InputMaybe<Scalars['felt252']['input']>;
  developerLT?: InputMaybe<Scalars['felt252']['input']>;
  developerLTE?: InputMaybe<Scalars['felt252']['input']>;
  developerNEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genre?: InputMaybe<Scalars['felt252']['input']>;
  genreEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreGT?: InputMaybe<Scalars['felt252']['input']>;
  genreGTE?: InputMaybe<Scalars['felt252']['input']>;
  genreIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genreLT?: InputMaybe<Scalars['felt252']['input']>;
  genreLTE?: InputMaybe<Scalars['felt252']['input']>;
  genreNEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  image?: InputMaybe<Scalars['ByteArray']['input']>;
  imageEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisher?: InputMaybe<Scalars['felt252']['input']>;
  publisherEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherGT?: InputMaybe<Scalars['felt252']['input']>;
  publisherGTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisherLT?: InputMaybe<Scalars['felt252']['input']>;
  publisherLTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherNEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_6_Leaderboard = {
  __typename?: 'budokan_v_1_0_6_Leaderboard';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  token_ids?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_6_LeaderboardConnection = {
  __typename?: 'budokan_v_1_0_6_LeaderboardConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_LeaderboardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_LeaderboardEdge = {
  __typename?: 'budokan_v_1_0_6_LeaderboardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_Leaderboard>;
};

export type Budokan_V_1_0_6_LeaderboardOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_LeaderboardOrderField;
};

export enum Budokan_V_1_0_6_LeaderboardOrderField {
  TokenIds = 'TOKEN_IDS',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_6_LeaderboardWhereInput = {
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_6_Lifecycle = {
  __typename?: 'budokan_v_1_0_6_Lifecycle';
  end?: Maybe<Budokan_V_1_0_6_Optionu64>;
  mint?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Budokan_V_1_0_6_Optionu64>;
};

export type Budokan_V_1_0_6_Metadata = {
  __typename?: 'budokan_v_1_0_6_Metadata';
  description?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_6_NftQualification = {
  __typename?: 'budokan_v_1_0_6_NFTQualification';
  token_id?: Maybe<Scalars['u256']['output']>;
};

export type Budokan_V_1_0_6_OptionEntryFee = {
  __typename?: 'budokan_v_1_0_6_OptionEntryFee';
  Some?: Maybe<Budokan_V_1_0_6_EntryFee>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_6_OptionEntryRequirement = {
  __typename?: 'budokan_v_1_0_6_OptionEntryRequirement';
  Some?: Maybe<Budokan_V_1_0_6_EntryRequirement>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_6_OptionPeriod = {
  __typename?: 'budokan_v_1_0_6_OptionPeriod';
  Some?: Maybe<Budokan_V_1_0_6_Period>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_6_Optionu8 = {
  __typename?: 'budokan_v_1_0_6_Optionu8';
  Some?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_6_Optionu64 = {
  __typename?: 'budokan_v_1_0_6_Optionu64';
  Some?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_6_Period = {
  __typename?: 'budokan_v_1_0_6_Period';
  end?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_6_PlatformMetrics = {
  __typename?: 'budokan_v_1_0_6_PlatformMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_tournaments?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_6_PlatformMetricsConnection = {
  __typename?: 'budokan_v_1_0_6_PlatformMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_PlatformMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_PlatformMetricsEdge = {
  __typename?: 'budokan_v_1_0_6_PlatformMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_PlatformMetrics>;
};

export type Budokan_V_1_0_6_PlatformMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_PlatformMetricsOrderField;
};

export enum Budokan_V_1_0_6_PlatformMetricsOrderField {
  Key = 'KEY',
  TotalTournaments = 'TOTAL_TOURNAMENTS'
}

export type Budokan_V_1_0_6_PlatformMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_tournaments?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_6_Prize = {
  __typename?: 'budokan_v_1_0_6_Prize';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u64']['output']>;
  payout_position?: Maybe<Scalars['u8']['output']>;
  sponsor_address?: Maybe<Scalars['ContractAddress']['output']>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  token_type?: Maybe<Budokan_V_1_0_6_TokenType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_6_PrizeClaim = {
  __typename?: 'budokan_v_1_0_6_PrizeClaim';
  claimed?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  prize_type?: Maybe<Budokan_V_1_0_6_PrizeType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_6_PrizeClaimConnection = {
  __typename?: 'budokan_v_1_0_6_PrizeClaimConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_PrizeClaimEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_PrizeClaimEdge = {
  __typename?: 'budokan_v_1_0_6_PrizeClaimEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_PrizeClaim>;
};

export type Budokan_V_1_0_6_PrizeClaimOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_PrizeClaimOrderField;
};

export enum Budokan_V_1_0_6_PrizeClaimOrderField {
  Claimed = 'CLAIMED',
  PrizeType = 'PRIZE_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_6_PrizeClaimWhereInput = {
  claimed?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_6_PrizeConnection = {
  __typename?: 'budokan_v_1_0_6_PrizeConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_PrizeEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_PrizeEdge = {
  __typename?: 'budokan_v_1_0_6_PrizeEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_Prize>;
};

export type Budokan_V_1_0_6_PrizeMetrics = {
  __typename?: 'budokan_v_1_0_6_PrizeMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_prizes?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_6_PrizeMetricsConnection = {
  __typename?: 'budokan_v_1_0_6_PrizeMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_PrizeMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_PrizeMetricsEdge = {
  __typename?: 'budokan_v_1_0_6_PrizeMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_PrizeMetrics>;
};

export type Budokan_V_1_0_6_PrizeMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_PrizeMetricsOrderField;
};

export enum Budokan_V_1_0_6_PrizeMetricsOrderField {
  Key = 'KEY',
  TotalPrizes = 'TOTAL_PRIZES'
}

export type Budokan_V_1_0_6_PrizeMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_prizes?: InputMaybe<Scalars['u64']['input']>;
  total_prizesEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_6_PrizeOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_PrizeOrderField;
};

export enum Budokan_V_1_0_6_PrizeOrderField {
  Id = 'ID',
  PayoutPosition = 'PAYOUT_POSITION',
  SponsorAddress = 'SPONSOR_ADDRESS',
  TokenAddress = 'TOKEN_ADDRESS',
  TokenType = 'TOKEN_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_6_PrizeType = {
  __typename?: 'budokan_v_1_0_6_PrizeType';
  EntryFees?: Maybe<Budokan_V_1_0_6_Role>;
  Sponsored?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_6_PrizeWhereInput = {
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  payout_position?: InputMaybe<Scalars['u8']['input']>;
  payout_positionEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionLIKE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  sponsor_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  sponsor_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  sponsor_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  sponsor_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_6_QualificationEntries = {
  __typename?: 'budokan_v_1_0_6_QualificationEntries';
  entity?: Maybe<World__Entity>;
  entry_count?: Maybe<Scalars['u8']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  qualification_proof?: Maybe<Budokan_V_1_0_6_QualificationProof>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_6_QualificationEntriesConnection = {
  __typename?: 'budokan_v_1_0_6_QualificationEntriesConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_QualificationEntriesEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_QualificationEntriesEdge = {
  __typename?: 'budokan_v_1_0_6_QualificationEntriesEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_QualificationEntries>;
};

export type Budokan_V_1_0_6_QualificationEntriesOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_QualificationEntriesOrderField;
};

export enum Budokan_V_1_0_6_QualificationEntriesOrderField {
  EntryCount = 'ENTRY_COUNT',
  QualificationProof = 'QUALIFICATION_PROOF',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_6_QualificationEntriesWhereInput = {
  entry_count?: InputMaybe<Scalars['u8']['input']>;
  entry_countEQ?: InputMaybe<Scalars['u8']['input']>;
  entry_countGT?: InputMaybe<Scalars['u8']['input']>;
  entry_countGTE?: InputMaybe<Scalars['u8']['input']>;
  entry_countIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  entry_countLIKE?: InputMaybe<Scalars['u8']['input']>;
  entry_countLT?: InputMaybe<Scalars['u8']['input']>;
  entry_countLTE?: InputMaybe<Scalars['u8']['input']>;
  entry_countNEQ?: InputMaybe<Scalars['u8']['input']>;
  entry_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  entry_countNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_6_QualificationProof = {
  __typename?: 'budokan_v_1_0_6_QualificationProof';
  Address?: Maybe<Scalars['ContractAddress']['output']>;
  NFT?: Maybe<Budokan_V_1_0_6_NftQualification>;
  Tournament?: Maybe<Budokan_V_1_0_6_TournamentQualification>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_6_Registration = {
  __typename?: 'budokan_v_1_0_6_Registration';
  entity?: Maybe<World__Entity>;
  entry_number?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  game_token_id?: Maybe<Scalars['u64']['output']>;
  has_submitted?: Maybe<Scalars['bool']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_6_RegistrationConnection = {
  __typename?: 'budokan_v_1_0_6_RegistrationConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_RegistrationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_RegistrationEdge = {
  __typename?: 'budokan_v_1_0_6_RegistrationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_Registration>;
};

export type Budokan_V_1_0_6_RegistrationOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_RegistrationOrderField;
};

export enum Budokan_V_1_0_6_RegistrationOrderField {
  EntryNumber = 'ENTRY_NUMBER',
  GameTokenId = 'GAME_TOKEN_ID',
  HasSubmitted = 'HAS_SUBMITTED',
  TournamentId = 'TOURNAMENT_ID'
}

export type Budokan_V_1_0_6_RegistrationWhereInput = {
  entry_number?: InputMaybe<Scalars['u32']['input']>;
  entry_numberEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberLIKE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  game_token_id?: InputMaybe<Scalars['u64']['input']>;
  game_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  has_submitted?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_6_Role = {
  __typename?: 'budokan_v_1_0_6_Role';
  Position?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_6_Schedule = {
  __typename?: 'budokan_v_1_0_6_Schedule';
  game?: Maybe<Budokan_V_1_0_6_Period>;
  registration?: Maybe<Budokan_V_1_0_6_OptionPeriod>;
  submission_duration?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_6_Score = {
  __typename?: 'budokan_v_1_0_6_Score';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  score?: Maybe<Scalars['u32']['output']>;
};

export type Budokan_V_1_0_6_ScoreConnection = {
  __typename?: 'budokan_v_1_0_6_ScoreConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_ScoreEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_ScoreEdge = {
  __typename?: 'budokan_v_1_0_6_ScoreEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_Score>;
};

export type Budokan_V_1_0_6_ScoreOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_ScoreOrderField;
};

export enum Budokan_V_1_0_6_ScoreOrderField {
  GameId = 'GAME_ID',
  Score = 'SCORE'
}

export type Budokan_V_1_0_6_ScoreWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  score?: InputMaybe<Scalars['u32']['input']>;
  scoreEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreGT?: InputMaybe<Scalars['u32']['input']>;
  scoreGTE?: InputMaybe<Scalars['u32']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u32']['input']>;
  scoreLT?: InputMaybe<Scalars['u32']['input']>;
  scoreLTE?: InputMaybe<Scalars['u32']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Budokan_V_1_0_6_Settings = {
  __typename?: 'budokan_v_1_0_6_Settings';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  value?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_6_SettingsConnection = {
  __typename?: 'budokan_v_1_0_6_SettingsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_SettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_SettingsCounter = {
  __typename?: 'budokan_v_1_0_6_SettingsCounter';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_6_SettingsCounterConnection = {
  __typename?: 'budokan_v_1_0_6_SettingsCounterConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_SettingsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_SettingsCounterEdge = {
  __typename?: 'budokan_v_1_0_6_SettingsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_SettingsCounter>;
};

export type Budokan_V_1_0_6_SettingsCounterOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_SettingsCounterOrderField;
};

export enum Budokan_V_1_0_6_SettingsCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Budokan_V_1_0_6_SettingsCounterWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_6_SettingsDetails = {
  __typename?: 'budokan_v_1_0_6_SettingsDetails';
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Budokan_V_1_0_6_SettingsDetailsConnection = {
  __typename?: 'budokan_v_1_0_6_SettingsDetailsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_SettingsDetailsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_SettingsDetailsEdge = {
  __typename?: 'budokan_v_1_0_6_SettingsDetailsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_SettingsDetails>;
};

export type Budokan_V_1_0_6_SettingsDetailsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_SettingsDetailsOrderField;
};

export enum Budokan_V_1_0_6_SettingsDetailsOrderField {
  Description = 'DESCRIPTION',
  Exists = 'EXISTS',
  Id = 'ID',
  Name = 'NAME'
}

export type Budokan_V_1_0_6_SettingsDetailsWhereInput = {
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_6_SettingsEdge = {
  __typename?: 'budokan_v_1_0_6_SettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_Settings>;
};

export type Budokan_V_1_0_6_SettingsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_SettingsOrderField;
};

export enum Budokan_V_1_0_6_SettingsOrderField {
  Id = 'ID',
  Name = 'NAME',
  Value = 'VALUE'
}

export type Budokan_V_1_0_6_SettingsWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  value?: InputMaybe<Scalars['felt252']['input']>;
  valueEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueGT?: InputMaybe<Scalars['felt252']['input']>;
  valueGTE?: InputMaybe<Scalars['felt252']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['felt252']['input']>;
  valueLT?: InputMaybe<Scalars['felt252']['input']>;
  valueLTE?: InputMaybe<Scalars['felt252']['input']>;
  valueNEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Budokan_V_1_0_6_Token = {
  __typename?: 'budokan_v_1_0_6_Token';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  is_registered?: Maybe<Scalars['bool']['output']>;
  name?: Maybe<Scalars['ByteArray']['output']>;
  symbol?: Maybe<Scalars['ByteArray']['output']>;
  token_type?: Maybe<Budokan_V_1_0_6_TokenType>;
};

export type Budokan_V_1_0_6_TokenConnection = {
  __typename?: 'budokan_v_1_0_6_TokenConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_TokenEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_TokenEdge = {
  __typename?: 'budokan_v_1_0_6_TokenEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_Token>;
};

export type Budokan_V_1_0_6_TokenMetadata = {
  __typename?: 'budokan_v_1_0_6_TokenMetadata';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lifecycle?: Maybe<Budokan_V_1_0_6_Lifecycle>;
  minted_by?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_6_TokenMetadataConnection = {
  __typename?: 'budokan_v_1_0_6_TokenMetadataConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_TokenMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_TokenMetadataEdge = {
  __typename?: 'budokan_v_1_0_6_TokenMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_TokenMetadata>;
};

export type Budokan_V_1_0_6_TokenMetadataOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_TokenMetadataOrderField;
};

export enum Budokan_V_1_0_6_TokenMetadataOrderField {
  Lifecycle = 'LIFECYCLE',
  MintedBy = 'MINTED_BY',
  PlayerName = 'PLAYER_NAME',
  SettingsId = 'SETTINGS_ID',
  TokenId = 'TOKEN_ID'
}

export type Budokan_V_1_0_6_TokenMetadataWhereInput = {
  minted_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  token_id?: InputMaybe<Scalars['u64']['input']>;
  token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idGT?: InputMaybe<Scalars['u64']['input']>;
  token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  token_idLT?: InputMaybe<Scalars['u64']['input']>;
  token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_6_TokenOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_TokenOrderField;
};

export enum Budokan_V_1_0_6_TokenOrderField {
  Address = 'ADDRESS',
  IsRegistered = 'IS_REGISTERED',
  Name = 'NAME',
  Symbol = 'SYMBOL',
  TokenType = 'TOKEN_TYPE'
}

export type Budokan_V_1_0_6_TokenType = {
  __typename?: 'budokan_v_1_0_6_TokenType';
  erc20?: Maybe<Budokan_V_1_0_6_Erc20Data>;
  erc721?: Maybe<Budokan_V_1_0_6_Erc721Data>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Budokan_V_1_0_6_TokenWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  is_registered?: InputMaybe<Scalars['bool']['input']>;
  name?: InputMaybe<Scalars['ByteArray']['input']>;
  nameEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbol?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
};

export type Budokan_V_1_0_6_Tournament = {
  __typename?: 'budokan_v_1_0_6_Tournament';
  created_at?: Maybe<Scalars['u64']['output']>;
  created_by?: Maybe<Scalars['ContractAddress']['output']>;
  creator_token_id?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entry_fee?: Maybe<Budokan_V_1_0_6_OptionEntryFee>;
  entry_requirement?: Maybe<Budokan_V_1_0_6_OptionEntryRequirement>;
  eventMessage?: Maybe<World__EventMessage>;
  game_config?: Maybe<Budokan_V_1_0_6_GameConfig>;
  id?: Maybe<Scalars['u64']['output']>;
  metadata?: Maybe<Budokan_V_1_0_6_Metadata>;
  schedule?: Maybe<Budokan_V_1_0_6_Schedule>;
};

export type Budokan_V_1_0_6_TournamentConfig = {
  __typename?: 'budokan_v_1_0_6_TournamentConfig';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  safe_mode?: Maybe<Scalars['bool']['output']>;
  test_mode?: Maybe<Scalars['bool']['output']>;
};

export type Budokan_V_1_0_6_TournamentConfigConnection = {
  __typename?: 'budokan_v_1_0_6_TournamentConfigConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_TournamentConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_TournamentConfigEdge = {
  __typename?: 'budokan_v_1_0_6_TournamentConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_TournamentConfig>;
};

export type Budokan_V_1_0_6_TournamentConfigOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_TournamentConfigOrderField;
};

export enum Budokan_V_1_0_6_TournamentConfigOrderField {
  Key = 'KEY',
  SafeMode = 'SAFE_MODE',
  TestMode = 'TEST_MODE'
}

export type Budokan_V_1_0_6_TournamentConfigWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  safe_mode?: InputMaybe<Scalars['bool']['input']>;
  test_mode?: InputMaybe<Scalars['bool']['input']>;
};

export type Budokan_V_1_0_6_TournamentConnection = {
  __typename?: 'budokan_v_1_0_6_TournamentConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_TournamentEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_TournamentEdge = {
  __typename?: 'budokan_v_1_0_6_TournamentEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_Tournament>;
};

export type Budokan_V_1_0_6_TournamentOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_TournamentOrderField;
};

export enum Budokan_V_1_0_6_TournamentOrderField {
  CreatedAt = 'CREATED_AT',
  CreatedBy = 'CREATED_BY',
  CreatorTokenId = 'CREATOR_TOKEN_ID',
  EntryFee = 'ENTRY_FEE',
  EntryRequirement = 'ENTRY_REQUIREMENT',
  GameConfig = 'GAME_CONFIG',
  Id = 'ID',
  Metadata = 'METADATA',
  Schedule = 'SCHEDULE'
}

export type Budokan_V_1_0_6_TournamentQualification = {
  __typename?: 'budokan_v_1_0_6_TournamentQualification';
  position?: Maybe<Scalars['u8']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_6_TournamentTokenMetrics = {
  __typename?: 'budokan_v_1_0_6_TournamentTokenMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_supply?: Maybe<Scalars['u64']['output']>;
};

export type Budokan_V_1_0_6_TournamentTokenMetricsConnection = {
  __typename?: 'budokan_v_1_0_6_TournamentTokenMetricsConnection';
  edges?: Maybe<Array<Maybe<Budokan_V_1_0_6_TournamentTokenMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Budokan_V_1_0_6_TournamentTokenMetricsEdge = {
  __typename?: 'budokan_v_1_0_6_TournamentTokenMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Budokan_V_1_0_6_TournamentTokenMetrics>;
};

export type Budokan_V_1_0_6_TournamentTokenMetricsOrder = {
  direction: OrderDirection;
  field: Budokan_V_1_0_6_TournamentTokenMetricsOrderField;
};

export enum Budokan_V_1_0_6_TournamentTokenMetricsOrderField {
  Key = 'KEY',
  TotalSupply = 'TOTAL_SUPPLY'
}

export type Budokan_V_1_0_6_TournamentTokenMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_supply?: InputMaybe<Scalars['u64']['input']>;
  total_supplyEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Budokan_V_1_0_6_TournamentType = {
  __typename?: 'budokan_v_1_0_6_TournamentType';
  option?: Maybe<Scalars['Enum']['output']>;
  participants?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  winners?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
};

export type Budokan_V_1_0_6_TournamentWhereInput = {
  created_at?: InputMaybe<Scalars['u64']['input']>;
  created_atEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atGT?: InputMaybe<Scalars['u64']['input']>;
  created_atGTE?: InputMaybe<Scalars['u64']['input']>;
  created_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_atLT?: InputMaybe<Scalars['u64']['input']>;
  created_atLTE?: InputMaybe<Scalars['u64']['input']>;
  created_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_token_id?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Darkshuffle_Battle = {
  __typename?: 'darkshuffle_Battle';
  battle_id?: Maybe<Scalars['u32']['output']>;
  deck?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  deck_index?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u32']['output']>;
  hand?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  hero_energy?: Maybe<Scalars['u8']['output']>;
  hero_health?: Maybe<Scalars['u8']['output']>;
  monster_attack?: Maybe<Scalars['u8']['output']>;
  monster_health?: Maybe<Scalars['u8']['output']>;
  monster_id?: Maybe<Scalars['u8']['output']>;
  monster_type?: Maybe<Scalars['Enum']['output']>;
  round?: Maybe<Scalars['u8']['output']>;
};

export type Darkshuffle_BattleConnection = {
  __typename?: 'darkshuffle_BattleConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_BattleEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_BattleEdge = {
  __typename?: 'darkshuffle_BattleEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_Battle>;
};

export type Darkshuffle_BattleEffects = {
  __typename?: 'darkshuffle_BattleEffects';
  battle_id?: Maybe<Scalars['u32']['output']>;
  enemy_marks?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  next_brute_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_brute_health_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_health_bonus?: Maybe<Scalars['u8']['output']>;
};

export type Darkshuffle_BattleEffectsConnection = {
  __typename?: 'darkshuffle_BattleEffectsConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_BattleEffectsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_BattleEffectsEdge = {
  __typename?: 'darkshuffle_BattleEffectsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_BattleEffects>;
};

export type Darkshuffle_BattleEffectsOrder = {
  direction: OrderDirection;
  field: Darkshuffle_BattleEffectsOrderField;
};

export enum Darkshuffle_BattleEffectsOrderField {
  BattleId = 'BATTLE_ID',
  EnemyMarks = 'ENEMY_MARKS',
  HeroDmgReduction = 'HERO_DMG_REDUCTION',
  NextBruteAttackBonus = 'NEXT_BRUTE_ATTACK_BONUS',
  NextBruteHealthBonus = 'NEXT_BRUTE_HEALTH_BONUS',
  NextHunterAttackBonus = 'NEXT_HUNTER_ATTACK_BONUS',
  NextHunterHealthBonus = 'NEXT_HUNTER_HEALTH_BONUS'
}

export type Darkshuffle_BattleEffectsWhereInput = {
  battle_id?: InputMaybe<Scalars['u32']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u32']['input']>;
  battle_idGT?: InputMaybe<Scalars['u32']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u32']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  battle_idLT?: InputMaybe<Scalars['u32']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u32']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  enemy_marks?: InputMaybe<Scalars['u8']['input']>;
  enemy_marksEQ?: InputMaybe<Scalars['u8']['input']>;
  enemy_marksGT?: InputMaybe<Scalars['u8']['input']>;
  enemy_marksGTE?: InputMaybe<Scalars['u8']['input']>;
  enemy_marksIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  enemy_marksLIKE?: InputMaybe<Scalars['u8']['input']>;
  enemy_marksLT?: InputMaybe<Scalars['u8']['input']>;
  enemy_marksLTE?: InputMaybe<Scalars['u8']['input']>;
  enemy_marksNEQ?: InputMaybe<Scalars['u8']['input']>;
  enemy_marksNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  enemy_marksNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reduction?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  next_brute_attack_bonus?: InputMaybe<Scalars['u8']['input']>;
  next_brute_attack_bonusEQ?: InputMaybe<Scalars['u8']['input']>;
  next_brute_attack_bonusGT?: InputMaybe<Scalars['u8']['input']>;
  next_brute_attack_bonusGTE?: InputMaybe<Scalars['u8']['input']>;
  next_brute_attack_bonusIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  next_brute_attack_bonusLIKE?: InputMaybe<Scalars['u8']['input']>;
  next_brute_attack_bonusLT?: InputMaybe<Scalars['u8']['input']>;
  next_brute_attack_bonusLTE?: InputMaybe<Scalars['u8']['input']>;
  next_brute_attack_bonusNEQ?: InputMaybe<Scalars['u8']['input']>;
  next_brute_attack_bonusNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  next_brute_attack_bonusNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  next_brute_health_bonus?: InputMaybe<Scalars['u8']['input']>;
  next_brute_health_bonusEQ?: InputMaybe<Scalars['u8']['input']>;
  next_brute_health_bonusGT?: InputMaybe<Scalars['u8']['input']>;
  next_brute_health_bonusGTE?: InputMaybe<Scalars['u8']['input']>;
  next_brute_health_bonusIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  next_brute_health_bonusLIKE?: InputMaybe<Scalars['u8']['input']>;
  next_brute_health_bonusLT?: InputMaybe<Scalars['u8']['input']>;
  next_brute_health_bonusLTE?: InputMaybe<Scalars['u8']['input']>;
  next_brute_health_bonusNEQ?: InputMaybe<Scalars['u8']['input']>;
  next_brute_health_bonusNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  next_brute_health_bonusNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_attack_bonus?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_attack_bonusEQ?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_attack_bonusGT?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_attack_bonusGTE?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_attack_bonusIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  next_hunter_attack_bonusLIKE?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_attack_bonusLT?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_attack_bonusLTE?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_attack_bonusNEQ?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_attack_bonusNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  next_hunter_attack_bonusNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_health_bonus?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_health_bonusEQ?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_health_bonusGT?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_health_bonusGTE?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_health_bonusIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  next_hunter_health_bonusLIKE?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_health_bonusLT?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_health_bonusLTE?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_health_bonusNEQ?: InputMaybe<Scalars['u8']['input']>;
  next_hunter_health_bonusNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  next_hunter_health_bonusNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Darkshuffle_BattleOrder = {
  direction: OrderDirection;
  field: Darkshuffle_BattleOrderField;
};

export enum Darkshuffle_BattleOrderField {
  BattleId = 'BATTLE_ID',
  Deck = 'DECK',
  DeckIndex = 'DECK_INDEX',
  GameId = 'GAME_ID',
  Hand = 'HAND',
  HeroEnergy = 'HERO_ENERGY',
  HeroHealth = 'HERO_HEALTH',
  MonsterAttack = 'MONSTER_ATTACK',
  MonsterHealth = 'MONSTER_HEALTH',
  MonsterId = 'MONSTER_ID',
  MonsterType = 'MONSTER_TYPE',
  Round = 'ROUND'
}

export type Darkshuffle_BattleWhereInput = {
  battle_id?: InputMaybe<Scalars['u32']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u32']['input']>;
  battle_idGT?: InputMaybe<Scalars['u32']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u32']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  battle_idLT?: InputMaybe<Scalars['u32']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u32']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  deck_index?: InputMaybe<Scalars['u8']['input']>;
  deck_indexEQ?: InputMaybe<Scalars['u8']['input']>;
  deck_indexGT?: InputMaybe<Scalars['u8']['input']>;
  deck_indexGTE?: InputMaybe<Scalars['u8']['input']>;
  deck_indexIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  deck_indexLIKE?: InputMaybe<Scalars['u8']['input']>;
  deck_indexLT?: InputMaybe<Scalars['u8']['input']>;
  deck_indexLTE?: InputMaybe<Scalars['u8']['input']>;
  deck_indexNEQ?: InputMaybe<Scalars['u8']['input']>;
  deck_indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  deck_indexNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_id?: InputMaybe<Scalars['u32']['input']>;
  game_idEQ?: InputMaybe<Scalars['u32']['input']>;
  game_idGT?: InputMaybe<Scalars['u32']['input']>;
  game_idGTE?: InputMaybe<Scalars['u32']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  game_idLT?: InputMaybe<Scalars['u32']['input']>;
  game_idLTE?: InputMaybe<Scalars['u32']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  hero_energy?: InputMaybe<Scalars['u8']['input']>;
  hero_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_energyGT?: InputMaybe<Scalars['u8']['input']>;
  hero_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_energyLT?: InputMaybe<Scalars['u8']['input']>;
  hero_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_health?: InputMaybe<Scalars['u8']['input']>;
  hero_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  monster_attack?: InputMaybe<Scalars['u8']['input']>;
  monster_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  monster_attackGT?: InputMaybe<Scalars['u8']['input']>;
  monster_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  monster_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  monster_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  monster_attackLT?: InputMaybe<Scalars['u8']['input']>;
  monster_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  monster_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  monster_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  monster_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  monster_health?: InputMaybe<Scalars['u8']['input']>;
  monster_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  monster_healthGT?: InputMaybe<Scalars['u8']['input']>;
  monster_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  monster_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  monster_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  monster_healthLT?: InputMaybe<Scalars['u8']['input']>;
  monster_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  monster_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  monster_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  monster_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  monster_id?: InputMaybe<Scalars['u8']['input']>;
  monster_idEQ?: InputMaybe<Scalars['u8']['input']>;
  monster_idGT?: InputMaybe<Scalars['u8']['input']>;
  monster_idGTE?: InputMaybe<Scalars['u8']['input']>;
  monster_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  monster_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  monster_idLT?: InputMaybe<Scalars['u8']['input']>;
  monster_idLTE?: InputMaybe<Scalars['u8']['input']>;
  monster_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  monster_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  monster_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  monster_type?: InputMaybe<Scalars['Enum']['input']>;
  round?: InputMaybe<Scalars['u8']['input']>;
  roundEQ?: InputMaybe<Scalars['u8']['input']>;
  roundGT?: InputMaybe<Scalars['u8']['input']>;
  roundGTE?: InputMaybe<Scalars['u8']['input']>;
  roundIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundLIKE?: InputMaybe<Scalars['u8']['input']>;
  roundLT?: InputMaybe<Scalars['u8']['input']>;
  roundLTE?: InputMaybe<Scalars['u8']['input']>;
  roundNEQ?: InputMaybe<Scalars['u8']['input']>;
  roundNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Darkshuffle_Board = {
  __typename?: 'darkshuffle_Board';
  battle_id?: Maybe<Scalars['u32']['output']>;
  creature1?: Maybe<Darkshuffle_Creature>;
  creature2?: Maybe<Darkshuffle_Creature>;
  creature3?: Maybe<Darkshuffle_Creature>;
  creature4?: Maybe<Darkshuffle_Creature>;
  creature5?: Maybe<Darkshuffle_Creature>;
  creature6?: Maybe<Darkshuffle_Creature>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
};

export type Darkshuffle_BoardConnection = {
  __typename?: 'darkshuffle_BoardConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_BoardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_BoardEdge = {
  __typename?: 'darkshuffle_BoardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_Board>;
};

export type Darkshuffle_BoardOrder = {
  direction: OrderDirection;
  field: Darkshuffle_BoardOrderField;
};

export enum Darkshuffle_BoardOrderField {
  BattleId = 'BATTLE_ID',
  Creature1 = 'CREATURE1',
  Creature2 = 'CREATURE2',
  Creature3 = 'CREATURE3',
  Creature4 = 'CREATURE4',
  Creature5 = 'CREATURE5',
  Creature6 = 'CREATURE6'
}

export type Darkshuffle_BoardWhereInput = {
  battle_id?: InputMaybe<Scalars['u32']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u32']['input']>;
  battle_idGT?: InputMaybe<Scalars['u32']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u32']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  battle_idLT?: InputMaybe<Scalars['u32']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u32']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Darkshuffle_Creature = {
  __typename?: 'darkshuffle_Creature';
  attack?: Maybe<Scalars['u8']['output']>;
  card_id?: Maybe<Scalars['u8']['output']>;
  cost?: Maybe<Scalars['u8']['output']>;
  creature_type?: Maybe<Scalars['Enum']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
};

export type Darkshuffle_Donation = {
  __typename?: 'darkshuffle_Donation';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  amount?: Maybe<Scalars['u256']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  name?: Maybe<Scalars['felt252']['output']>;
  season_id?: Maybe<Scalars['u32']['output']>;
  social?: Maybe<Scalars['felt252']['output']>;
};

export type Darkshuffle_DonationConnection = {
  __typename?: 'darkshuffle_DonationConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_DonationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_DonationEdge = {
  __typename?: 'darkshuffle_DonationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_Donation>;
};

export type Darkshuffle_DonationOrder = {
  direction: OrderDirection;
  field: Darkshuffle_DonationOrderField;
};

export enum Darkshuffle_DonationOrderField {
  Address = 'ADDRESS',
  Amount = 'AMOUNT',
  Name = 'NAME',
  SeasonId = 'SEASON_ID',
  Social = 'SOCIAL'
}

export type Darkshuffle_DonationWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  amount?: InputMaybe<Scalars['u256']['input']>;
  amountEQ?: InputMaybe<Scalars['u256']['input']>;
  amountGT?: InputMaybe<Scalars['u256']['input']>;
  amountGTE?: InputMaybe<Scalars['u256']['input']>;
  amountIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  amountLIKE?: InputMaybe<Scalars['u256']['input']>;
  amountLT?: InputMaybe<Scalars['u256']['input']>;
  amountLTE?: InputMaybe<Scalars['u256']['input']>;
  amountNEQ?: InputMaybe<Scalars['u256']['input']>;
  amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  amountNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  season_id?: InputMaybe<Scalars['u32']['input']>;
  season_idEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idGT?: InputMaybe<Scalars['u32']['input']>;
  season_idGTE?: InputMaybe<Scalars['u32']['input']>;
  season_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  season_idLT?: InputMaybe<Scalars['u32']['input']>;
  season_idLTE?: InputMaybe<Scalars['u32']['input']>;
  season_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  social?: InputMaybe<Scalars['felt252']['input']>;
  socialEQ?: InputMaybe<Scalars['felt252']['input']>;
  socialGT?: InputMaybe<Scalars['felt252']['input']>;
  socialGTE?: InputMaybe<Scalars['felt252']['input']>;
  socialIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  socialLIKE?: InputMaybe<Scalars['felt252']['input']>;
  socialLT?: InputMaybe<Scalars['felt252']['input']>;
  socialLTE?: InputMaybe<Scalars['felt252']['input']>;
  socialNEQ?: InputMaybe<Scalars['felt252']['input']>;
  socialNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  socialNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Darkshuffle_Draft = {
  __typename?: 'darkshuffle_Draft';
  cards?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u32']['output']>;
  options?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
};

export type Darkshuffle_DraftConnection = {
  __typename?: 'darkshuffle_DraftConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_DraftEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_DraftEdge = {
  __typename?: 'darkshuffle_DraftEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_Draft>;
};

export type Darkshuffle_DraftOrder = {
  direction: OrderDirection;
  field: Darkshuffle_DraftOrderField;
};

export enum Darkshuffle_DraftOrderField {
  Cards = 'CARDS',
  GameId = 'GAME_ID',
  Options = 'OPTIONS'
}

export type Darkshuffle_DraftWhereInput = {
  game_id?: InputMaybe<Scalars['u32']['input']>;
  game_idEQ?: InputMaybe<Scalars['u32']['input']>;
  game_idGT?: InputMaybe<Scalars['u32']['input']>;
  game_idGTE?: InputMaybe<Scalars['u32']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  game_idLT?: InputMaybe<Scalars['u32']['input']>;
  game_idLTE?: InputMaybe<Scalars['u32']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Darkshuffle_Game = {
  __typename?: 'darkshuffle_Game';
  active?: Maybe<Scalars['bool']['output']>;
  active_battle_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u32']['output']>;
  hero_health?: Maybe<Scalars['u8']['output']>;
  hero_xp?: Maybe<Scalars['u16']['output']>;
  in_battle?: Maybe<Scalars['bool']['output']>;
  in_draft?: Maybe<Scalars['bool']['output']>;
  last_node_id?: Maybe<Scalars['u8']['output']>;
  map_depth?: Maybe<Scalars['u8']['output']>;
  map_level?: Maybe<Scalars['u8']['output']>;
  monsters_slain?: Maybe<Scalars['u16']['output']>;
  player?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  season_id?: Maybe<Scalars['u32']['output']>;
};

export type Darkshuffle_GameConnection = {
  __typename?: 'darkshuffle_GameConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_GameEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_GameEdge = {
  __typename?: 'darkshuffle_GameEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_Game>;
};

export type Darkshuffle_GameEffects = {
  __typename?: 'darkshuffle_GameEffects';
  all_attack?: Maybe<Scalars['u8']['output']>;
  brute_attack?: Maybe<Scalars['u8']['output']>;
  brute_health?: Maybe<Scalars['u8']['output']>;
  card_draw?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  first_attack?: Maybe<Scalars['u8']['output']>;
  first_cost?: Maybe<Scalars['u8']['output']>;
  first_health?: Maybe<Scalars['u8']['output']>;
  game_id?: Maybe<Scalars['u32']['output']>;
  hero_card_heal?: Maybe<Scalars['bool']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  hunter_attack?: Maybe<Scalars['u8']['output']>;
  hunter_health?: Maybe<Scalars['u8']['output']>;
  magical_attack?: Maybe<Scalars['u8']['output']>;
  magical_health?: Maybe<Scalars['u8']['output']>;
  play_creature_heal?: Maybe<Scalars['u8']['output']>;
  start_bonus_energy?: Maybe<Scalars['u8']['output']>;
};

export type Darkshuffle_GameEffectsConnection = {
  __typename?: 'darkshuffle_GameEffectsConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_GameEffectsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_GameEffectsEdge = {
  __typename?: 'darkshuffle_GameEffectsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_GameEffects>;
};

export type Darkshuffle_GameEffectsOrder = {
  direction: OrderDirection;
  field: Darkshuffle_GameEffectsOrderField;
};

export enum Darkshuffle_GameEffectsOrderField {
  AllAttack = 'ALL_ATTACK',
  BruteAttack = 'BRUTE_ATTACK',
  BruteHealth = 'BRUTE_HEALTH',
  CardDraw = 'CARD_DRAW',
  FirstAttack = 'FIRST_ATTACK',
  FirstCost = 'FIRST_COST',
  FirstHealth = 'FIRST_HEALTH',
  GameId = 'GAME_ID',
  HeroCardHeal = 'HERO_CARD_HEAL',
  HeroDmgReduction = 'HERO_DMG_REDUCTION',
  HunterAttack = 'HUNTER_ATTACK',
  HunterHealth = 'HUNTER_HEALTH',
  MagicalAttack = 'MAGICAL_ATTACK',
  MagicalHealth = 'MAGICAL_HEALTH',
  PlayCreatureHeal = 'PLAY_CREATURE_HEAL',
  StartBonusEnergy = 'START_BONUS_ENERGY'
}

export type Darkshuffle_GameEffectsWhereInput = {
  all_attack?: InputMaybe<Scalars['u8']['input']>;
  all_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackGT?: InputMaybe<Scalars['u8']['input']>;
  all_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  all_attackLT?: InputMaybe<Scalars['u8']['input']>;
  all_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attack?: InputMaybe<Scalars['u8']['input']>;
  brute_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_health?: InputMaybe<Scalars['u8']['input']>;
  brute_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_draw?: InputMaybe<Scalars['u8']['input']>;
  card_drawEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawGT?: InputMaybe<Scalars['u8']['input']>;
  card_drawGTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_drawLT?: InputMaybe<Scalars['u8']['input']>;
  card_drawLTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawNEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attack?: InputMaybe<Scalars['u8']['input']>;
  first_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackGT?: InputMaybe<Scalars['u8']['input']>;
  first_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attackLT?: InputMaybe<Scalars['u8']['input']>;
  first_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_cost?: InputMaybe<Scalars['u8']['input']>;
  first_costEQ?: InputMaybe<Scalars['u8']['input']>;
  first_costGT?: InputMaybe<Scalars['u8']['input']>;
  first_costGTE?: InputMaybe<Scalars['u8']['input']>;
  first_costIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_costLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_costLT?: InputMaybe<Scalars['u8']['input']>;
  first_costLTE?: InputMaybe<Scalars['u8']['input']>;
  first_costNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_costNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_costNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_health?: InputMaybe<Scalars['u8']['input']>;
  first_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthGT?: InputMaybe<Scalars['u8']['input']>;
  first_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_healthLT?: InputMaybe<Scalars['u8']['input']>;
  first_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_id?: InputMaybe<Scalars['u32']['input']>;
  game_idEQ?: InputMaybe<Scalars['u32']['input']>;
  game_idGT?: InputMaybe<Scalars['u32']['input']>;
  game_idGTE?: InputMaybe<Scalars['u32']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  game_idLT?: InputMaybe<Scalars['u32']['input']>;
  game_idLTE?: InputMaybe<Scalars['u32']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  hero_card_heal?: InputMaybe<Scalars['bool']['input']>;
  hero_dmg_reduction?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attack?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_health?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attack?: InputMaybe<Scalars['u8']['input']>;
  magical_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_health?: InputMaybe<Scalars['u8']['input']>;
  magical_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_heal?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energy?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Darkshuffle_GameOrder = {
  direction: OrderDirection;
  field: Darkshuffle_GameOrderField;
};

export enum Darkshuffle_GameOrderField {
  Active = 'ACTIVE',
  ActiveBattleId = 'ACTIVE_BATTLE_ID',
  GameId = 'GAME_ID',
  HeroHealth = 'HERO_HEALTH',
  HeroXp = 'HERO_XP',
  InBattle = 'IN_BATTLE',
  InDraft = 'IN_DRAFT',
  LastNodeId = 'LAST_NODE_ID',
  MapDepth = 'MAP_DEPTH',
  MapLevel = 'MAP_LEVEL',
  MonstersSlain = 'MONSTERS_SLAIN',
  Player = 'PLAYER',
  PlayerName = 'PLAYER_NAME',
  SeasonId = 'SEASON_ID'
}

export type Darkshuffle_GameWhereInput = {
  active?: InputMaybe<Scalars['bool']['input']>;
  active_battle_id?: InputMaybe<Scalars['u32']['input']>;
  active_battle_idEQ?: InputMaybe<Scalars['u32']['input']>;
  active_battle_idGT?: InputMaybe<Scalars['u32']['input']>;
  active_battle_idGTE?: InputMaybe<Scalars['u32']['input']>;
  active_battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  active_battle_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  active_battle_idLT?: InputMaybe<Scalars['u32']['input']>;
  active_battle_idLTE?: InputMaybe<Scalars['u32']['input']>;
  active_battle_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  active_battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  active_battle_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  game_id?: InputMaybe<Scalars['u32']['input']>;
  game_idEQ?: InputMaybe<Scalars['u32']['input']>;
  game_idGT?: InputMaybe<Scalars['u32']['input']>;
  game_idGTE?: InputMaybe<Scalars['u32']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  game_idLT?: InputMaybe<Scalars['u32']['input']>;
  game_idLTE?: InputMaybe<Scalars['u32']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  hero_health?: InputMaybe<Scalars['u8']['input']>;
  hero_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_xp?: InputMaybe<Scalars['u16']['input']>;
  hero_xpEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpLIKE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  in_battle?: InputMaybe<Scalars['bool']['input']>;
  in_draft?: InputMaybe<Scalars['bool']['input']>;
  last_node_id?: InputMaybe<Scalars['u8']['input']>;
  last_node_idEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depth?: InputMaybe<Scalars['u8']['input']>;
  map_depthEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthGT?: InputMaybe<Scalars['u8']['input']>;
  map_depthGTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depthLT?: InputMaybe<Scalars['u8']['input']>;
  map_depthLTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_level?: InputMaybe<Scalars['u8']['input']>;
  map_levelEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelGT?: InputMaybe<Scalars['u8']['input']>;
  map_levelGTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_levelLT?: InputMaybe<Scalars['u8']['input']>;
  map_levelLTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  monsters_slain?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainLIKE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  player?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  playerLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  playerNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  season_id?: InputMaybe<Scalars['u32']['input']>;
  season_idEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idGT?: InputMaybe<Scalars['u32']['input']>;
  season_idGTE?: InputMaybe<Scalars['u32']['input']>;
  season_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  season_idLT?: InputMaybe<Scalars['u32']['input']>;
  season_idLTE?: InputMaybe<Scalars['u32']['input']>;
  season_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Darkshuffle_Leaderboard = {
  __typename?: 'darkshuffle_Leaderboard';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  player?: Maybe<Scalars['ContractAddress']['output']>;
  rank?: Maybe<Scalars['u8']['output']>;
  score?: Maybe<Scalars['u16']['output']>;
  season_id?: Maybe<Scalars['u32']['output']>;
};

export type Darkshuffle_LeaderboardConnection = {
  __typename?: 'darkshuffle_LeaderboardConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_LeaderboardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_LeaderboardEdge = {
  __typename?: 'darkshuffle_LeaderboardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_Leaderboard>;
};

export type Darkshuffle_LeaderboardOrder = {
  direction: OrderDirection;
  field: Darkshuffle_LeaderboardOrderField;
};

export enum Darkshuffle_LeaderboardOrderField {
  Player = 'PLAYER',
  Rank = 'RANK',
  Score = 'SCORE',
  SeasonId = 'SEASON_ID'
}

export type Darkshuffle_LeaderboardWhereInput = {
  player?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  playerLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  playerNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  rank?: InputMaybe<Scalars['u8']['input']>;
  rankEQ?: InputMaybe<Scalars['u8']['input']>;
  rankGT?: InputMaybe<Scalars['u8']['input']>;
  rankGTE?: InputMaybe<Scalars['u8']['input']>;
  rankIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  rankLIKE?: InputMaybe<Scalars['u8']['input']>;
  rankLT?: InputMaybe<Scalars['u8']['input']>;
  rankLTE?: InputMaybe<Scalars['u8']['input']>;
  rankNEQ?: InputMaybe<Scalars['u8']['input']>;
  rankNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  rankNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  score?: InputMaybe<Scalars['u16']['input']>;
  scoreEQ?: InputMaybe<Scalars['u16']['input']>;
  scoreGT?: InputMaybe<Scalars['u16']['input']>;
  scoreGTE?: InputMaybe<Scalars['u16']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u16']['input']>;
  scoreLT?: InputMaybe<Scalars['u16']['input']>;
  scoreLTE?: InputMaybe<Scalars['u16']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u16']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  season_id?: InputMaybe<Scalars['u32']['input']>;
  season_idEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idGT?: InputMaybe<Scalars['u32']['input']>;
  season_idGTE?: InputMaybe<Scalars['u32']['input']>;
  season_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  season_idLT?: InputMaybe<Scalars['u32']['input']>;
  season_idLTE?: InputMaybe<Scalars['u32']['input']>;
  season_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Darkshuffle_Map = {
  __typename?: 'darkshuffle_Map';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u32']['output']>;
  level?: Maybe<Scalars['u8']['output']>;
  seed?: Maybe<Scalars['u128']['output']>;
};

export type Darkshuffle_MapConnection = {
  __typename?: 'darkshuffle_MapConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_MapEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_MapEdge = {
  __typename?: 'darkshuffle_MapEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_Map>;
};

export type Darkshuffle_MapOrder = {
  direction: OrderDirection;
  field: Darkshuffle_MapOrderField;
};

export enum Darkshuffle_MapOrderField {
  GameId = 'GAME_ID',
  Level = 'LEVEL',
  Seed = 'SEED'
}

export type Darkshuffle_MapWhereInput = {
  game_id?: InputMaybe<Scalars['u32']['input']>;
  game_idEQ?: InputMaybe<Scalars['u32']['input']>;
  game_idGT?: InputMaybe<Scalars['u32']['input']>;
  game_idGTE?: InputMaybe<Scalars['u32']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  game_idLT?: InputMaybe<Scalars['u32']['input']>;
  game_idLTE?: InputMaybe<Scalars['u32']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  level?: InputMaybe<Scalars['u8']['input']>;
  levelEQ?: InputMaybe<Scalars['u8']['input']>;
  levelGT?: InputMaybe<Scalars['u8']['input']>;
  levelGTE?: InputMaybe<Scalars['u8']['input']>;
  levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  levelLT?: InputMaybe<Scalars['u8']['input']>;
  levelLTE?: InputMaybe<Scalars['u8']['input']>;
  levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  seed?: InputMaybe<Scalars['u128']['input']>;
  seedEQ?: InputMaybe<Scalars['u128']['input']>;
  seedGT?: InputMaybe<Scalars['u128']['input']>;
  seedGTE?: InputMaybe<Scalars['u128']['input']>;
  seedIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedLIKE?: InputMaybe<Scalars['u128']['input']>;
  seedLT?: InputMaybe<Scalars['u128']['input']>;
  seedLTE?: InputMaybe<Scalars['u128']['input']>;
  seedNEQ?: InputMaybe<Scalars['u128']['input']>;
  seedNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type Darkshuffle_PlayerReward = {
  __typename?: 'darkshuffle_PlayerReward';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  player?: Maybe<Scalars['ContractAddress']['output']>;
  reward?: Maybe<Scalars['u256']['output']>;
  season_id?: Maybe<Scalars['u32']['output']>;
};

export type Darkshuffle_PlayerRewardConnection = {
  __typename?: 'darkshuffle_PlayerRewardConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_PlayerRewardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_PlayerRewardEdge = {
  __typename?: 'darkshuffle_PlayerRewardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_PlayerReward>;
};

export type Darkshuffle_PlayerRewardOrder = {
  direction: OrderDirection;
  field: Darkshuffle_PlayerRewardOrderField;
};

export enum Darkshuffle_PlayerRewardOrderField {
  Player = 'PLAYER',
  Reward = 'REWARD',
  SeasonId = 'SEASON_ID'
}

export type Darkshuffle_PlayerRewardWhereInput = {
  player?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  playerLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  playerNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  reward?: InputMaybe<Scalars['u256']['input']>;
  rewardEQ?: InputMaybe<Scalars['u256']['input']>;
  rewardGT?: InputMaybe<Scalars['u256']['input']>;
  rewardGTE?: InputMaybe<Scalars['u256']['input']>;
  rewardIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  rewardLIKE?: InputMaybe<Scalars['u256']['input']>;
  rewardLT?: InputMaybe<Scalars['u256']['input']>;
  rewardLTE?: InputMaybe<Scalars['u256']['input']>;
  rewardNEQ?: InputMaybe<Scalars['u256']['input']>;
  rewardNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  rewardNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  season_id?: InputMaybe<Scalars['u32']['input']>;
  season_idEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idGT?: InputMaybe<Scalars['u32']['input']>;
  season_idGTE?: InputMaybe<Scalars['u32']['input']>;
  season_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  season_idLT?: InputMaybe<Scalars['u32']['input']>;
  season_idLTE?: InputMaybe<Scalars['u32']['input']>;
  season_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Darkshuffle_Season = {
  __typename?: 'darkshuffle_Season';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  end?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entry_amount?: Maybe<Scalars['u256']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  finalized?: Maybe<Scalars['bool']['output']>;
  reward_pool?: Maybe<Scalars['u256']['output']>;
  season_id?: Maybe<Scalars['u32']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
};

export type Darkshuffle_SeasonConnection = {
  __typename?: 'darkshuffle_SeasonConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_SeasonEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_SeasonEdge = {
  __typename?: 'darkshuffle_SeasonEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_Season>;
};

export type Darkshuffle_SeasonOrder = {
  direction: OrderDirection;
  field: Darkshuffle_SeasonOrderField;
};

export enum Darkshuffle_SeasonOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  End = 'END',
  EntryAmount = 'ENTRY_AMOUNT',
  Finalized = 'FINALIZED',
  RewardPool = 'REWARD_POOL',
  SeasonId = 'SEASON_ID',
  Start = 'START'
}

export type Darkshuffle_SeasonWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  end?: InputMaybe<Scalars['u64']['input']>;
  endEQ?: InputMaybe<Scalars['u64']['input']>;
  endGT?: InputMaybe<Scalars['u64']['input']>;
  endGTE?: InputMaybe<Scalars['u64']['input']>;
  endIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endLIKE?: InputMaybe<Scalars['u64']['input']>;
  endLT?: InputMaybe<Scalars['u64']['input']>;
  endLTE?: InputMaybe<Scalars['u64']['input']>;
  endNEQ?: InputMaybe<Scalars['u64']['input']>;
  endNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  entry_amount?: InputMaybe<Scalars['u256']['input']>;
  entry_amountEQ?: InputMaybe<Scalars['u256']['input']>;
  entry_amountGT?: InputMaybe<Scalars['u256']['input']>;
  entry_amountGTE?: InputMaybe<Scalars['u256']['input']>;
  entry_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  entry_amountLIKE?: InputMaybe<Scalars['u256']['input']>;
  entry_amountLT?: InputMaybe<Scalars['u256']['input']>;
  entry_amountLTE?: InputMaybe<Scalars['u256']['input']>;
  entry_amountNEQ?: InputMaybe<Scalars['u256']['input']>;
  entry_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  entry_amountNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  finalized?: InputMaybe<Scalars['bool']['input']>;
  reward_pool?: InputMaybe<Scalars['u256']['input']>;
  reward_poolEQ?: InputMaybe<Scalars['u256']['input']>;
  reward_poolGT?: InputMaybe<Scalars['u256']['input']>;
  reward_poolGTE?: InputMaybe<Scalars['u256']['input']>;
  reward_poolIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  reward_poolLIKE?: InputMaybe<Scalars['u256']['input']>;
  reward_poolLT?: InputMaybe<Scalars['u256']['input']>;
  reward_poolLTE?: InputMaybe<Scalars['u256']['input']>;
  reward_poolNEQ?: InputMaybe<Scalars['u256']['input']>;
  reward_poolNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  reward_poolNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  season_id?: InputMaybe<Scalars['u32']['input']>;
  season_idEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idGT?: InputMaybe<Scalars['u32']['input']>;
  season_idGTE?: InputMaybe<Scalars['u32']['input']>;
  season_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  season_idLT?: InputMaybe<Scalars['u32']['input']>;
  season_idLTE?: InputMaybe<Scalars['u32']['input']>;
  season_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  start?: InputMaybe<Scalars['u64']['input']>;
  startEQ?: InputMaybe<Scalars['u64']['input']>;
  startGT?: InputMaybe<Scalars['u64']['input']>;
  startGTE?: InputMaybe<Scalars['u64']['input']>;
  startIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startLIKE?: InputMaybe<Scalars['u64']['input']>;
  startLT?: InputMaybe<Scalars['u64']['input']>;
  startLTE?: InputMaybe<Scalars['u64']['input']>;
  startNEQ?: InputMaybe<Scalars['u64']['input']>;
  startNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Darkshuffle_S0_Battle = {
  __typename?: 'darkshuffle_s0_Battle';
  battle_effects?: Maybe<Darkshuffle_S0_BattleEffects>;
  battle_id?: Maybe<Scalars['u16']['output']>;
  deck?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  deck_index?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u128']['output']>;
  hand?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  hero?: Maybe<Darkshuffle_S0_Hero>;
  monster?: Maybe<Darkshuffle_S0_Monster>;
  round?: Maybe<Scalars['u8']['output']>;
};

export type Darkshuffle_S0_BattleConnection = {
  __typename?: 'darkshuffle_s0_BattleConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_S0_BattleEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_S0_BattleEdge = {
  __typename?: 'darkshuffle_s0_BattleEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_S0_Battle>;
};

export type Darkshuffle_S0_BattleEffects = {
  __typename?: 'darkshuffle_s0_BattleEffects';
  enemy_marks?: Maybe<Scalars['u8']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  next_brute_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_brute_health_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_health_bonus?: Maybe<Scalars['u8']['output']>;
};

export type Darkshuffle_S0_BattleOrder = {
  direction: OrderDirection;
  field: Darkshuffle_S0_BattleOrderField;
};

export enum Darkshuffle_S0_BattleOrderField {
  BattleEffects = 'BATTLE_EFFECTS',
  BattleId = 'BATTLE_ID',
  Deck = 'DECK',
  DeckIndex = 'DECK_INDEX',
  GameId = 'GAME_ID',
  Hand = 'HAND',
  Hero = 'HERO',
  Monster = 'MONSTER',
  Round = 'ROUND'
}

export type Darkshuffle_S0_BattleWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  deck_index?: InputMaybe<Scalars['u8']['input']>;
  deck_indexEQ?: InputMaybe<Scalars['u8']['input']>;
  deck_indexGT?: InputMaybe<Scalars['u8']['input']>;
  deck_indexGTE?: InputMaybe<Scalars['u8']['input']>;
  deck_indexIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  deck_indexLIKE?: InputMaybe<Scalars['u8']['input']>;
  deck_indexLT?: InputMaybe<Scalars['u8']['input']>;
  deck_indexLTE?: InputMaybe<Scalars['u8']['input']>;
  deck_indexNEQ?: InputMaybe<Scalars['u8']['input']>;
  deck_indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  deck_indexNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_id?: InputMaybe<Scalars['u128']['input']>;
  game_idEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idGT?: InputMaybe<Scalars['u128']['input']>;
  game_idGTE?: InputMaybe<Scalars['u128']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u128']['input']>;
  game_idLT?: InputMaybe<Scalars['u128']['input']>;
  game_idLTE?: InputMaybe<Scalars['u128']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  round?: InputMaybe<Scalars['u8']['input']>;
  roundEQ?: InputMaybe<Scalars['u8']['input']>;
  roundGT?: InputMaybe<Scalars['u8']['input']>;
  roundGTE?: InputMaybe<Scalars['u8']['input']>;
  roundIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundLIKE?: InputMaybe<Scalars['u8']['input']>;
  roundLT?: InputMaybe<Scalars['u8']['input']>;
  roundLTE?: InputMaybe<Scalars['u8']['input']>;
  roundNEQ?: InputMaybe<Scalars['u8']['input']>;
  roundNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Darkshuffle_S0_Board = {
  __typename?: 'darkshuffle_s0_Board';
  battle_id?: Maybe<Scalars['u16']['output']>;
  creature1?: Maybe<Darkshuffle_S0_Creature>;
  creature2?: Maybe<Darkshuffle_S0_Creature>;
  creature3?: Maybe<Darkshuffle_S0_Creature>;
  creature4?: Maybe<Darkshuffle_S0_Creature>;
  creature5?: Maybe<Darkshuffle_S0_Creature>;
  creature6?: Maybe<Darkshuffle_S0_Creature>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u128']['output']>;
};

export type Darkshuffle_S0_BoardConnection = {
  __typename?: 'darkshuffle_s0_BoardConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_S0_BoardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_S0_BoardEdge = {
  __typename?: 'darkshuffle_s0_BoardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_S0_Board>;
};

export type Darkshuffle_S0_BoardOrder = {
  direction: OrderDirection;
  field: Darkshuffle_S0_BoardOrderField;
};

export enum Darkshuffle_S0_BoardOrderField {
  BattleId = 'BATTLE_ID',
  Creature1 = 'CREATURE1',
  Creature2 = 'CREATURE2',
  Creature3 = 'CREATURE3',
  Creature4 = 'CREATURE4',
  Creature5 = 'CREATURE5',
  Creature6 = 'CREATURE6',
  GameId = 'GAME_ID'
}

export type Darkshuffle_S0_BoardWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u128']['input']>;
  game_idEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idGT?: InputMaybe<Scalars['u128']['input']>;
  game_idGTE?: InputMaybe<Scalars['u128']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u128']['input']>;
  game_idLT?: InputMaybe<Scalars['u128']['input']>;
  game_idLTE?: InputMaybe<Scalars['u128']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type Darkshuffle_S0_Creature = {
  __typename?: 'darkshuffle_s0_Creature';
  attack?: Maybe<Scalars['u8']['output']>;
  card_id?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
};

export type Darkshuffle_S0_Donation = {
  __typename?: 'darkshuffle_s0_Donation';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  amount?: Maybe<Scalars['u256']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  name?: Maybe<Scalars['felt252']['output']>;
  season_id?: Maybe<Scalars['u32']['output']>;
  social?: Maybe<Scalars['felt252']['output']>;
};

export type Darkshuffle_S0_DonationConnection = {
  __typename?: 'darkshuffle_s0_DonationConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_S0_DonationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_S0_DonationEdge = {
  __typename?: 'darkshuffle_s0_DonationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_S0_Donation>;
};

export type Darkshuffle_S0_DonationOrder = {
  direction: OrderDirection;
  field: Darkshuffle_S0_DonationOrderField;
};

export enum Darkshuffle_S0_DonationOrderField {
  Address = 'ADDRESS',
  Amount = 'AMOUNT',
  Name = 'NAME',
  SeasonId = 'SEASON_ID',
  Social = 'SOCIAL'
}

export type Darkshuffle_S0_DonationWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  amount?: InputMaybe<Scalars['u256']['input']>;
  amountEQ?: InputMaybe<Scalars['u256']['input']>;
  amountGT?: InputMaybe<Scalars['u256']['input']>;
  amountGTE?: InputMaybe<Scalars['u256']['input']>;
  amountIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  amountLIKE?: InputMaybe<Scalars['u256']['input']>;
  amountLT?: InputMaybe<Scalars['u256']['input']>;
  amountLTE?: InputMaybe<Scalars['u256']['input']>;
  amountNEQ?: InputMaybe<Scalars['u256']['input']>;
  amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  amountNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  season_id?: InputMaybe<Scalars['u32']['input']>;
  season_idEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idGT?: InputMaybe<Scalars['u32']['input']>;
  season_idGTE?: InputMaybe<Scalars['u32']['input']>;
  season_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  season_idLT?: InputMaybe<Scalars['u32']['input']>;
  season_idLTE?: InputMaybe<Scalars['u32']['input']>;
  season_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  social?: InputMaybe<Scalars['felt252']['input']>;
  socialEQ?: InputMaybe<Scalars['felt252']['input']>;
  socialGT?: InputMaybe<Scalars['felt252']['input']>;
  socialGTE?: InputMaybe<Scalars['felt252']['input']>;
  socialIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  socialLIKE?: InputMaybe<Scalars['felt252']['input']>;
  socialLT?: InputMaybe<Scalars['felt252']['input']>;
  socialLTE?: InputMaybe<Scalars['felt252']['input']>;
  socialNEQ?: InputMaybe<Scalars['felt252']['input']>;
  socialNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  socialNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Darkshuffle_S0_Draft = {
  __typename?: 'darkshuffle_s0_Draft';
  cards?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u128']['output']>;
  options?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
};

export type Darkshuffle_S0_DraftConnection = {
  __typename?: 'darkshuffle_s0_DraftConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_S0_DraftEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_S0_DraftEdge = {
  __typename?: 'darkshuffle_s0_DraftEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_S0_Draft>;
};

export type Darkshuffle_S0_DraftOrder = {
  direction: OrderDirection;
  field: Darkshuffle_S0_DraftOrderField;
};

export enum Darkshuffle_S0_DraftOrderField {
  Cards = 'CARDS',
  GameId = 'GAME_ID',
  Options = 'OPTIONS'
}

export type Darkshuffle_S0_DraftWhereInput = {
  game_id?: InputMaybe<Scalars['u128']['input']>;
  game_idEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idGT?: InputMaybe<Scalars['u128']['input']>;
  game_idGTE?: InputMaybe<Scalars['u128']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u128']['input']>;
  game_idLT?: InputMaybe<Scalars['u128']['input']>;
  game_idLTE?: InputMaybe<Scalars['u128']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type Darkshuffle_S0_Game = {
  __typename?: 'darkshuffle_s0_Game';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u128']['output']>;
  hero_health?: Maybe<Scalars['u8']['output']>;
  hero_xp?: Maybe<Scalars['u16']['output']>;
  last_node_id?: Maybe<Scalars['u8']['output']>;
  map_depth?: Maybe<Scalars['u8']['output']>;
  map_level?: Maybe<Scalars['u8']['output']>;
  monsters_slain?: Maybe<Scalars['u16']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  season_id?: Maybe<Scalars['u32']['output']>;
  state?: Maybe<Scalars['Enum']['output']>;
};

export type Darkshuffle_S0_GameConnection = {
  __typename?: 'darkshuffle_s0_GameConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_S0_GameEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_S0_GameEdge = {
  __typename?: 'darkshuffle_s0_GameEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_S0_Game>;
};

export type Darkshuffle_S0_GameEffects = {
  __typename?: 'darkshuffle_s0_GameEffects';
  all_attack?: Maybe<Scalars['u8']['output']>;
  brute_attack?: Maybe<Scalars['u8']['output']>;
  brute_health?: Maybe<Scalars['u8']['output']>;
  card_draw?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  first_attack?: Maybe<Scalars['u8']['output']>;
  first_cost?: Maybe<Scalars['u8']['output']>;
  first_health?: Maybe<Scalars['u8']['output']>;
  game_id?: Maybe<Scalars['u128']['output']>;
  hero_card_heal?: Maybe<Scalars['bool']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  hunter_attack?: Maybe<Scalars['u8']['output']>;
  hunter_health?: Maybe<Scalars['u8']['output']>;
  magical_attack?: Maybe<Scalars['u8']['output']>;
  magical_health?: Maybe<Scalars['u8']['output']>;
  play_creature_heal?: Maybe<Scalars['u8']['output']>;
  start_bonus_energy?: Maybe<Scalars['u8']['output']>;
};

export type Darkshuffle_S0_GameEffectsConnection = {
  __typename?: 'darkshuffle_s0_GameEffectsConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_S0_GameEffectsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_S0_GameEffectsEdge = {
  __typename?: 'darkshuffle_s0_GameEffectsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_S0_GameEffects>;
};

export type Darkshuffle_S0_GameEffectsOrder = {
  direction: OrderDirection;
  field: Darkshuffle_S0_GameEffectsOrderField;
};

export enum Darkshuffle_S0_GameEffectsOrderField {
  AllAttack = 'ALL_ATTACK',
  BruteAttack = 'BRUTE_ATTACK',
  BruteHealth = 'BRUTE_HEALTH',
  CardDraw = 'CARD_DRAW',
  FirstAttack = 'FIRST_ATTACK',
  FirstCost = 'FIRST_COST',
  FirstHealth = 'FIRST_HEALTH',
  GameId = 'GAME_ID',
  HeroCardHeal = 'HERO_CARD_HEAL',
  HeroDmgReduction = 'HERO_DMG_REDUCTION',
  HunterAttack = 'HUNTER_ATTACK',
  HunterHealth = 'HUNTER_HEALTH',
  MagicalAttack = 'MAGICAL_ATTACK',
  MagicalHealth = 'MAGICAL_HEALTH',
  PlayCreatureHeal = 'PLAY_CREATURE_HEAL',
  StartBonusEnergy = 'START_BONUS_ENERGY'
}

export type Darkshuffle_S0_GameEffectsWhereInput = {
  all_attack?: InputMaybe<Scalars['u8']['input']>;
  all_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackGT?: InputMaybe<Scalars['u8']['input']>;
  all_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  all_attackLT?: InputMaybe<Scalars['u8']['input']>;
  all_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attack?: InputMaybe<Scalars['u8']['input']>;
  brute_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_health?: InputMaybe<Scalars['u8']['input']>;
  brute_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_draw?: InputMaybe<Scalars['u8']['input']>;
  card_drawEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawGT?: InputMaybe<Scalars['u8']['input']>;
  card_drawGTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_drawLT?: InputMaybe<Scalars['u8']['input']>;
  card_drawLTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawNEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attack?: InputMaybe<Scalars['u8']['input']>;
  first_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackGT?: InputMaybe<Scalars['u8']['input']>;
  first_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attackLT?: InputMaybe<Scalars['u8']['input']>;
  first_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_cost?: InputMaybe<Scalars['u8']['input']>;
  first_costEQ?: InputMaybe<Scalars['u8']['input']>;
  first_costGT?: InputMaybe<Scalars['u8']['input']>;
  first_costGTE?: InputMaybe<Scalars['u8']['input']>;
  first_costIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_costLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_costLT?: InputMaybe<Scalars['u8']['input']>;
  first_costLTE?: InputMaybe<Scalars['u8']['input']>;
  first_costNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_costNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_costNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_health?: InputMaybe<Scalars['u8']['input']>;
  first_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthGT?: InputMaybe<Scalars['u8']['input']>;
  first_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_healthLT?: InputMaybe<Scalars['u8']['input']>;
  first_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_id?: InputMaybe<Scalars['u128']['input']>;
  game_idEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idGT?: InputMaybe<Scalars['u128']['input']>;
  game_idGTE?: InputMaybe<Scalars['u128']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u128']['input']>;
  game_idLT?: InputMaybe<Scalars['u128']['input']>;
  game_idLTE?: InputMaybe<Scalars['u128']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  hero_card_heal?: InputMaybe<Scalars['bool']['input']>;
  hero_dmg_reduction?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attack?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_health?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attack?: InputMaybe<Scalars['u8']['input']>;
  magical_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_health?: InputMaybe<Scalars['u8']['input']>;
  magical_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_heal?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energy?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Darkshuffle_S0_GameOrder = {
  direction: OrderDirection;
  field: Darkshuffle_S0_GameOrderField;
};

export enum Darkshuffle_S0_GameOrderField {
  GameId = 'GAME_ID',
  HeroHealth = 'HERO_HEALTH',
  HeroXp = 'HERO_XP',
  LastNodeId = 'LAST_NODE_ID',
  MapDepth = 'MAP_DEPTH',
  MapLevel = 'MAP_LEVEL',
  MonstersSlain = 'MONSTERS_SLAIN',
  PlayerName = 'PLAYER_NAME',
  SeasonId = 'SEASON_ID',
  State = 'STATE'
}

export type Darkshuffle_S0_GameSettings = {
  __typename?: 'darkshuffle_s0_GameSettings';
  draft_size?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  max_energy?: Maybe<Scalars['u8']['output']>;
  max_hand_size?: Maybe<Scalars['u8']['output']>;
  max_health?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  start_energy?: Maybe<Scalars['u8']['output']>;
  start_hand_size?: Maybe<Scalars['u8']['output']>;
  start_health?: Maybe<Scalars['u8']['output']>;
};

export type Darkshuffle_S0_GameSettingsConnection = {
  __typename?: 'darkshuffle_s0_GameSettingsConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_S0_GameSettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_S0_GameSettingsEdge = {
  __typename?: 'darkshuffle_s0_GameSettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_S0_GameSettings>;
};

export type Darkshuffle_S0_GameSettingsOrder = {
  direction: OrderDirection;
  field: Darkshuffle_S0_GameSettingsOrderField;
};

export enum Darkshuffle_S0_GameSettingsOrderField {
  DraftSize = 'DRAFT_SIZE',
  MaxEnergy = 'MAX_ENERGY',
  MaxHandSize = 'MAX_HAND_SIZE',
  MaxHealth = 'MAX_HEALTH',
  SettingsId = 'SETTINGS_ID',
  StartEnergy = 'START_ENERGY',
  StartHandSize = 'START_HAND_SIZE',
  StartHealth = 'START_HEALTH'
}

export type Darkshuffle_S0_GameSettingsWhereInput = {
  draft_size?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  draft_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  draft_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_energy?: InputMaybe<Scalars['u8']['input']>;
  max_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  max_energyGT?: InputMaybe<Scalars['u8']['input']>;
  max_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  max_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_energyLT?: InputMaybe<Scalars['u8']['input']>;
  max_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  max_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_size?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_hand_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_hand_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_health?: InputMaybe<Scalars['u8']['input']>;
  max_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  max_healthGT?: InputMaybe<Scalars['u8']['input']>;
  max_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  max_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_healthLT?: InputMaybe<Scalars['u8']['input']>;
  max_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  max_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  start_energy?: InputMaybe<Scalars['u8']['input']>;
  start_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_size?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_hand_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_hand_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_health?: InputMaybe<Scalars['u8']['input']>;
  start_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  start_healthGT?: InputMaybe<Scalars['u8']['input']>;
  start_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  start_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_healthLT?: InputMaybe<Scalars['u8']['input']>;
  start_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  start_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Darkshuffle_S0_GameStartEvent = {
  __typename?: 'darkshuffle_s0_GameStartEvent';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u128']['output']>;
  player_address?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  season_id?: Maybe<Scalars['u32']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
};

export type Darkshuffle_S0_GameStartEventConnection = {
  __typename?: 'darkshuffle_s0_GameStartEventConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_S0_GameStartEventEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_S0_GameStartEventEdge = {
  __typename?: 'darkshuffle_s0_GameStartEventEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_S0_GameStartEvent>;
};

export type Darkshuffle_S0_GameStartEventOrder = {
  direction: OrderDirection;
  field: Darkshuffle_S0_GameStartEventOrderField;
};

export enum Darkshuffle_S0_GameStartEventOrderField {
  GameId = 'GAME_ID',
  PlayerAddress = 'PLAYER_ADDRESS',
  PlayerName = 'PLAYER_NAME',
  SeasonId = 'SEASON_ID',
  Timestamp = 'TIMESTAMP'
}

export type Darkshuffle_S0_GameStartEventWhereInput = {
  game_id?: InputMaybe<Scalars['u128']['input']>;
  game_idEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idGT?: InputMaybe<Scalars['u128']['input']>;
  game_idGTE?: InputMaybe<Scalars['u128']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u128']['input']>;
  game_idLT?: InputMaybe<Scalars['u128']['input']>;
  game_idLTE?: InputMaybe<Scalars['u128']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  player_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  player_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  player_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  season_id?: InputMaybe<Scalars['u32']['input']>;
  season_idEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idGT?: InputMaybe<Scalars['u32']['input']>;
  season_idGTE?: InputMaybe<Scalars['u32']['input']>;
  season_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  season_idLT?: InputMaybe<Scalars['u32']['input']>;
  season_idLTE?: InputMaybe<Scalars['u32']['input']>;
  season_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Darkshuffle_S0_GameWhereInput = {
  game_id?: InputMaybe<Scalars['u128']['input']>;
  game_idEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idGT?: InputMaybe<Scalars['u128']['input']>;
  game_idGTE?: InputMaybe<Scalars['u128']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u128']['input']>;
  game_idLT?: InputMaybe<Scalars['u128']['input']>;
  game_idLTE?: InputMaybe<Scalars['u128']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  hero_health?: InputMaybe<Scalars['u8']['input']>;
  hero_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_xp?: InputMaybe<Scalars['u16']['input']>;
  hero_xpEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpLIKE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  last_node_id?: InputMaybe<Scalars['u8']['input']>;
  last_node_idEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depth?: InputMaybe<Scalars['u8']['input']>;
  map_depthEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthGT?: InputMaybe<Scalars['u8']['input']>;
  map_depthGTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depthLT?: InputMaybe<Scalars['u8']['input']>;
  map_depthLTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_level?: InputMaybe<Scalars['u8']['input']>;
  map_levelEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelGT?: InputMaybe<Scalars['u8']['input']>;
  map_levelGTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_levelLT?: InputMaybe<Scalars['u8']['input']>;
  map_levelLTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  monsters_slain?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainLIKE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  season_id?: InputMaybe<Scalars['u32']['input']>;
  season_idEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idGT?: InputMaybe<Scalars['u32']['input']>;
  season_idGTE?: InputMaybe<Scalars['u32']['input']>;
  season_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  season_idLT?: InputMaybe<Scalars['u32']['input']>;
  season_idLTE?: InputMaybe<Scalars['u32']['input']>;
  season_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  state?: InputMaybe<Scalars['Enum']['input']>;
};

export type Darkshuffle_S0_Hero = {
  __typename?: 'darkshuffle_s0_Hero';
  energy?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
  max_health?: Maybe<Scalars['u8']['output']>;
};

export type Darkshuffle_S0_Leaderboard = {
  __typename?: 'darkshuffle_s0_Leaderboard';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u128']['output']>;
  rank?: Maybe<Scalars['u8']['output']>;
  score?: Maybe<Scalars['u16']['output']>;
  season_id?: Maybe<Scalars['u32']['output']>;
};

export type Darkshuffle_S0_LeaderboardConnection = {
  __typename?: 'darkshuffle_s0_LeaderboardConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_S0_LeaderboardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_S0_LeaderboardEdge = {
  __typename?: 'darkshuffle_s0_LeaderboardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_S0_Leaderboard>;
};

export type Darkshuffle_S0_LeaderboardOrder = {
  direction: OrderDirection;
  field: Darkshuffle_S0_LeaderboardOrderField;
};

export enum Darkshuffle_S0_LeaderboardOrderField {
  GameId = 'GAME_ID',
  Rank = 'RANK',
  Score = 'SCORE',
  SeasonId = 'SEASON_ID'
}

export type Darkshuffle_S0_LeaderboardWhereInput = {
  game_id?: InputMaybe<Scalars['u128']['input']>;
  game_idEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idGT?: InputMaybe<Scalars['u128']['input']>;
  game_idGTE?: InputMaybe<Scalars['u128']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u128']['input']>;
  game_idLT?: InputMaybe<Scalars['u128']['input']>;
  game_idLTE?: InputMaybe<Scalars['u128']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  rank?: InputMaybe<Scalars['u8']['input']>;
  rankEQ?: InputMaybe<Scalars['u8']['input']>;
  rankGT?: InputMaybe<Scalars['u8']['input']>;
  rankGTE?: InputMaybe<Scalars['u8']['input']>;
  rankIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  rankLIKE?: InputMaybe<Scalars['u8']['input']>;
  rankLT?: InputMaybe<Scalars['u8']['input']>;
  rankLTE?: InputMaybe<Scalars['u8']['input']>;
  rankNEQ?: InputMaybe<Scalars['u8']['input']>;
  rankNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  rankNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  score?: InputMaybe<Scalars['u16']['input']>;
  scoreEQ?: InputMaybe<Scalars['u16']['input']>;
  scoreGT?: InputMaybe<Scalars['u16']['input']>;
  scoreGTE?: InputMaybe<Scalars['u16']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u16']['input']>;
  scoreLT?: InputMaybe<Scalars['u16']['input']>;
  scoreLTE?: InputMaybe<Scalars['u16']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u16']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  season_id?: InputMaybe<Scalars['u32']['input']>;
  season_idEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idGT?: InputMaybe<Scalars['u32']['input']>;
  season_idGTE?: InputMaybe<Scalars['u32']['input']>;
  season_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  season_idLT?: InputMaybe<Scalars['u32']['input']>;
  season_idLTE?: InputMaybe<Scalars['u32']['input']>;
  season_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Darkshuffle_S0_Map = {
  __typename?: 'darkshuffle_s0_Map';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u128']['output']>;
  level?: Maybe<Scalars['u8']['output']>;
  seed?: Maybe<Scalars['u128']['output']>;
};

export type Darkshuffle_S0_MapConnection = {
  __typename?: 'darkshuffle_s0_MapConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_S0_MapEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_S0_MapEdge = {
  __typename?: 'darkshuffle_s0_MapEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_S0_Map>;
};

export type Darkshuffle_S0_MapOrder = {
  direction: OrderDirection;
  field: Darkshuffle_S0_MapOrderField;
};

export enum Darkshuffle_S0_MapOrderField {
  GameId = 'GAME_ID',
  Level = 'LEVEL',
  Seed = 'SEED'
}

export type Darkshuffle_S0_MapWhereInput = {
  game_id?: InputMaybe<Scalars['u128']['input']>;
  game_idEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idGT?: InputMaybe<Scalars['u128']['input']>;
  game_idGTE?: InputMaybe<Scalars['u128']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u128']['input']>;
  game_idLT?: InputMaybe<Scalars['u128']['input']>;
  game_idLTE?: InputMaybe<Scalars['u128']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  level?: InputMaybe<Scalars['u8']['input']>;
  levelEQ?: InputMaybe<Scalars['u8']['input']>;
  levelGT?: InputMaybe<Scalars['u8']['input']>;
  levelGTE?: InputMaybe<Scalars['u8']['input']>;
  levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  levelLT?: InputMaybe<Scalars['u8']['input']>;
  levelLTE?: InputMaybe<Scalars['u8']['input']>;
  levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  seed?: InputMaybe<Scalars['u128']['input']>;
  seedEQ?: InputMaybe<Scalars['u128']['input']>;
  seedGT?: InputMaybe<Scalars['u128']['input']>;
  seedGTE?: InputMaybe<Scalars['u128']['input']>;
  seedIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedLIKE?: InputMaybe<Scalars['u128']['input']>;
  seedLT?: InputMaybe<Scalars['u128']['input']>;
  seedLTE?: InputMaybe<Scalars['u128']['input']>;
  seedNEQ?: InputMaybe<Scalars['u128']['input']>;
  seedNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type Darkshuffle_S0_Monster = {
  __typename?: 'darkshuffle_s0_Monster';
  attack?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
  monster_id?: Maybe<Scalars['u8']['output']>;
};

export type Darkshuffle_S0_Season = {
  __typename?: 'darkshuffle_s0_Season';
  end?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entry_amount?: Maybe<Scalars['u256']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  finalized?: Maybe<Scalars['bool']['output']>;
  reward_pool?: Maybe<Scalars['u256']['output']>;
  season_address?: Maybe<Scalars['ContractAddress']['output']>;
  season_id?: Maybe<Scalars['u32']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
};

export type Darkshuffle_S0_SeasonConnection = {
  __typename?: 'darkshuffle_s0_SeasonConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_S0_SeasonEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_S0_SeasonEdge = {
  __typename?: 'darkshuffle_s0_SeasonEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_S0_Season>;
};

export type Darkshuffle_S0_SeasonOrder = {
  direction: OrderDirection;
  field: Darkshuffle_S0_SeasonOrderField;
};

export enum Darkshuffle_S0_SeasonOrderField {
  End = 'END',
  EntryAmount = 'ENTRY_AMOUNT',
  Finalized = 'FINALIZED',
  RewardPool = 'REWARD_POOL',
  SeasonAddress = 'SEASON_ADDRESS',
  SeasonId = 'SEASON_ID',
  SettingsId = 'SETTINGS_ID',
  Start = 'START'
}

export type Darkshuffle_S0_SeasonWhereInput = {
  end?: InputMaybe<Scalars['u64']['input']>;
  endEQ?: InputMaybe<Scalars['u64']['input']>;
  endGT?: InputMaybe<Scalars['u64']['input']>;
  endGTE?: InputMaybe<Scalars['u64']['input']>;
  endIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endLIKE?: InputMaybe<Scalars['u64']['input']>;
  endLT?: InputMaybe<Scalars['u64']['input']>;
  endLTE?: InputMaybe<Scalars['u64']['input']>;
  endNEQ?: InputMaybe<Scalars['u64']['input']>;
  endNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  entry_amount?: InputMaybe<Scalars['u256']['input']>;
  entry_amountEQ?: InputMaybe<Scalars['u256']['input']>;
  entry_amountGT?: InputMaybe<Scalars['u256']['input']>;
  entry_amountGTE?: InputMaybe<Scalars['u256']['input']>;
  entry_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  entry_amountLIKE?: InputMaybe<Scalars['u256']['input']>;
  entry_amountLT?: InputMaybe<Scalars['u256']['input']>;
  entry_amountLTE?: InputMaybe<Scalars['u256']['input']>;
  entry_amountNEQ?: InputMaybe<Scalars['u256']['input']>;
  entry_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  entry_amountNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  finalized?: InputMaybe<Scalars['bool']['input']>;
  reward_pool?: InputMaybe<Scalars['u256']['input']>;
  reward_poolEQ?: InputMaybe<Scalars['u256']['input']>;
  reward_poolGT?: InputMaybe<Scalars['u256']['input']>;
  reward_poolGTE?: InputMaybe<Scalars['u256']['input']>;
  reward_poolIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  reward_poolLIKE?: InputMaybe<Scalars['u256']['input']>;
  reward_poolLT?: InputMaybe<Scalars['u256']['input']>;
  reward_poolLTE?: InputMaybe<Scalars['u256']['input']>;
  reward_poolNEQ?: InputMaybe<Scalars['u256']['input']>;
  reward_poolNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  reward_poolNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  season_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  season_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  season_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_id?: InputMaybe<Scalars['u32']['input']>;
  season_idEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idGT?: InputMaybe<Scalars['u32']['input']>;
  season_idGTE?: InputMaybe<Scalars['u32']['input']>;
  season_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  season_idLT?: InputMaybe<Scalars['u32']['input']>;
  season_idLTE?: InputMaybe<Scalars['u32']['input']>;
  season_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  start?: InputMaybe<Scalars['u64']['input']>;
  startEQ?: InputMaybe<Scalars['u64']['input']>;
  startGT?: InputMaybe<Scalars['u64']['input']>;
  startGTE?: InputMaybe<Scalars['u64']['input']>;
  startIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startLIKE?: InputMaybe<Scalars['u64']['input']>;
  startLT?: InputMaybe<Scalars['u64']['input']>;
  startLTE?: InputMaybe<Scalars['u64']['input']>;
  startNEQ?: InputMaybe<Scalars['u64']['input']>;
  startNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Darkshuffle_S0_Task = {
  __typename?: 'darkshuffle_s0_Task';
  description?: Maybe<Scalars['ByteArray']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  total?: Maybe<Scalars['u32']['output']>;
};

export type Darkshuffle_S0_TrophyCreation = {
  __typename?: 'darkshuffle_s0_TrophyCreation';
  data?: Maybe<Scalars['ByteArray']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  end?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  group?: Maybe<Scalars['felt252']['output']>;
  hidden?: Maybe<Scalars['bool']['output']>;
  icon?: Maybe<Scalars['felt252']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  index?: Maybe<Scalars['u8']['output']>;
  points?: Maybe<Scalars['u16']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
  tasks?: Maybe<Array<Maybe<Darkshuffle_S0_Task>>>;
  title?: Maybe<Scalars['felt252']['output']>;
};

export type Darkshuffle_S0_TrophyCreationConnection = {
  __typename?: 'darkshuffle_s0_TrophyCreationConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_S0_TrophyCreationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_S0_TrophyCreationEdge = {
  __typename?: 'darkshuffle_s0_TrophyCreationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_S0_TrophyCreation>;
};

export type Darkshuffle_S0_TrophyCreationOrder = {
  direction: OrderDirection;
  field: Darkshuffle_S0_TrophyCreationOrderField;
};

export enum Darkshuffle_S0_TrophyCreationOrderField {
  Data = 'DATA',
  Description = 'DESCRIPTION',
  End = 'END',
  Group = 'GROUP',
  Hidden = 'HIDDEN',
  Icon = 'ICON',
  Id = 'ID',
  Index = 'INDEX',
  Points = 'POINTS',
  Start = 'START',
  Tasks = 'TASKS',
  Title = 'TITLE'
}

export type Darkshuffle_S0_TrophyCreationWhereInput = {
  data?: InputMaybe<Scalars['ByteArray']['input']>;
  dataEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  end?: InputMaybe<Scalars['u64']['input']>;
  endEQ?: InputMaybe<Scalars['u64']['input']>;
  endGT?: InputMaybe<Scalars['u64']['input']>;
  endGTE?: InputMaybe<Scalars['u64']['input']>;
  endIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endLIKE?: InputMaybe<Scalars['u64']['input']>;
  endLT?: InputMaybe<Scalars['u64']['input']>;
  endLTE?: InputMaybe<Scalars['u64']['input']>;
  endNEQ?: InputMaybe<Scalars['u64']['input']>;
  endNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  group?: InputMaybe<Scalars['felt252']['input']>;
  groupEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupGT?: InputMaybe<Scalars['felt252']['input']>;
  groupGTE?: InputMaybe<Scalars['felt252']['input']>;
  groupIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupLIKE?: InputMaybe<Scalars['felt252']['input']>;
  groupLT?: InputMaybe<Scalars['felt252']['input']>;
  groupLTE?: InputMaybe<Scalars['felt252']['input']>;
  groupNEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  hidden?: InputMaybe<Scalars['bool']['input']>;
  icon?: InputMaybe<Scalars['felt252']['input']>;
  iconEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconGT?: InputMaybe<Scalars['felt252']['input']>;
  iconGTE?: InputMaybe<Scalars['felt252']['input']>;
  iconIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconLIKE?: InputMaybe<Scalars['felt252']['input']>;
  iconLT?: InputMaybe<Scalars['felt252']['input']>;
  iconLTE?: InputMaybe<Scalars['felt252']['input']>;
  iconNEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  id?: InputMaybe<Scalars['felt252']['input']>;
  idEQ?: InputMaybe<Scalars['felt252']['input']>;
  idGT?: InputMaybe<Scalars['felt252']['input']>;
  idGTE?: InputMaybe<Scalars['felt252']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  idLT?: InputMaybe<Scalars['felt252']['input']>;
  idLTE?: InputMaybe<Scalars['felt252']['input']>;
  idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  index?: InputMaybe<Scalars['u8']['input']>;
  indexEQ?: InputMaybe<Scalars['u8']['input']>;
  indexGT?: InputMaybe<Scalars['u8']['input']>;
  indexGTE?: InputMaybe<Scalars['u8']['input']>;
  indexIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexLIKE?: InputMaybe<Scalars['u8']['input']>;
  indexLT?: InputMaybe<Scalars['u8']['input']>;
  indexLTE?: InputMaybe<Scalars['u8']['input']>;
  indexNEQ?: InputMaybe<Scalars['u8']['input']>;
  indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  points?: InputMaybe<Scalars['u16']['input']>;
  pointsEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsGT?: InputMaybe<Scalars['u16']['input']>;
  pointsGTE?: InputMaybe<Scalars['u16']['input']>;
  pointsIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsLIKE?: InputMaybe<Scalars['u16']['input']>;
  pointsLT?: InputMaybe<Scalars['u16']['input']>;
  pointsLTE?: InputMaybe<Scalars['u16']['input']>;
  pointsNEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  start?: InputMaybe<Scalars['u64']['input']>;
  startEQ?: InputMaybe<Scalars['u64']['input']>;
  startGT?: InputMaybe<Scalars['u64']['input']>;
  startGTE?: InputMaybe<Scalars['u64']['input']>;
  startIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startLIKE?: InputMaybe<Scalars['u64']['input']>;
  startLT?: InputMaybe<Scalars['u64']['input']>;
  startLTE?: InputMaybe<Scalars['u64']['input']>;
  startNEQ?: InputMaybe<Scalars['u64']['input']>;
  startNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  title?: InputMaybe<Scalars['felt252']['input']>;
  titleEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleGT?: InputMaybe<Scalars['felt252']['input']>;
  titleGTE?: InputMaybe<Scalars['felt252']['input']>;
  titleIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleLIKE?: InputMaybe<Scalars['felt252']['input']>;
  titleLT?: InputMaybe<Scalars['felt252']['input']>;
  titleLTE?: InputMaybe<Scalars['felt252']['input']>;
  titleNEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Darkshuffle_S0_TrophyProgression = {
  __typename?: 'darkshuffle_s0_TrophyProgression';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  player_id?: Maybe<Scalars['felt252']['output']>;
  task_id?: Maybe<Scalars['felt252']['output']>;
  time?: Maybe<Scalars['u64']['output']>;
};

export type Darkshuffle_S0_TrophyProgressionConnection = {
  __typename?: 'darkshuffle_s0_TrophyProgressionConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_S0_TrophyProgressionEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_S0_TrophyProgressionEdge = {
  __typename?: 'darkshuffle_s0_TrophyProgressionEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_S0_TrophyProgression>;
};

export type Darkshuffle_S0_TrophyProgressionOrder = {
  direction: OrderDirection;
  field: Darkshuffle_S0_TrophyProgressionOrderField;
};

export enum Darkshuffle_S0_TrophyProgressionOrderField {
  Count = 'COUNT',
  PlayerId = 'PLAYER_ID',
  TaskId = 'TASK_ID',
  Time = 'TIME'
}

export type Darkshuffle_S0_TrophyProgressionWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  player_id?: InputMaybe<Scalars['felt252']['input']>;
  player_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idGT?: InputMaybe<Scalars['felt252']['input']>;
  player_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_idLT?: InputMaybe<Scalars['felt252']['input']>;
  player_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_id?: InputMaybe<Scalars['felt252']['input']>;
  task_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idGT?: InputMaybe<Scalars['felt252']['input']>;
  task_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_idLT?: InputMaybe<Scalars['felt252']['input']>;
  task_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  time?: InputMaybe<Scalars['u64']['input']>;
  timeEQ?: InputMaybe<Scalars['u64']['input']>;
  timeGT?: InputMaybe<Scalars['u64']['input']>;
  timeGTE?: InputMaybe<Scalars['u64']['input']>;
  timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  timeLT?: InputMaybe<Scalars['u64']['input']>;
  timeLTE?: InputMaybe<Scalars['u64']['input']>;
  timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Darkshuffle_S0_WorldConfig = {
  __typename?: 'darkshuffle_s0_WorldConfig';
  config_id?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_count?: Maybe<Scalars['u256']['output']>;
  game_token_address?: Maybe<Scalars['ContractAddress']['output']>;
};

export type Darkshuffle_S0_WorldConfigConnection = {
  __typename?: 'darkshuffle_s0_WorldConfigConnection';
  edges?: Maybe<Array<Maybe<Darkshuffle_S0_WorldConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Darkshuffle_S0_WorldConfigEdge = {
  __typename?: 'darkshuffle_s0_WorldConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Darkshuffle_S0_WorldConfig>;
};

export type Darkshuffle_S0_WorldConfigOrder = {
  direction: OrderDirection;
  field: Darkshuffle_S0_WorldConfigOrderField;
};

export enum Darkshuffle_S0_WorldConfigOrderField {
  ConfigId = 'CONFIG_ID',
  GameCount = 'GAME_COUNT',
  GameTokenAddress = 'GAME_TOKEN_ADDRESS'
}

export type Darkshuffle_S0_WorldConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u8']['input']>;
  config_idEQ?: InputMaybe<Scalars['u8']['input']>;
  config_idGT?: InputMaybe<Scalars['u8']['input']>;
  config_idGTE?: InputMaybe<Scalars['u8']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  config_idLT?: InputMaybe<Scalars['u8']['input']>;
  config_idLTE?: InputMaybe<Scalars['u8']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_count?: InputMaybe<Scalars['u256']['input']>;
  game_countEQ?: InputMaybe<Scalars['u256']['input']>;
  game_countGT?: InputMaybe<Scalars['u256']['input']>;
  game_countGTE?: InputMaybe<Scalars['u256']['input']>;
  game_countIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  game_countLIKE?: InputMaybe<Scalars['u256']['input']>;
  game_countLT?: InputMaybe<Scalars['u256']['input']>;
  game_countLTE?: InputMaybe<Scalars['u256']['input']>;
  game_countNEQ?: InputMaybe<Scalars['u256']['input']>;
  game_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  game_countNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  game_token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  game_token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  game_token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
};

export type Ds_Battle = {
  __typename?: 'ds_Battle';
  battle_effects?: Maybe<Ds_BattleEffects>;
  battle_id?: Maybe<Scalars['u16']['output']>;
  deck?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hand?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  hero?: Maybe<Ds_Hero>;
  monster?: Maybe<Ds_Monster>;
  round?: Maybe<Scalars['u8']['output']>;
};

export type Ds_BattleConnection = {
  __typename?: 'ds_BattleConnection';
  edges?: Maybe<Array<Maybe<Ds_BattleEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_BattleEdge = {
  __typename?: 'ds_BattleEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_Battle>;
};

export type Ds_BattleEffects = {
  __typename?: 'ds_BattleEffects';
  enemy_marks?: Maybe<Scalars['u8']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  next_brute_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_brute_health_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_health_bonus?: Maybe<Scalars['u8']['output']>;
};

export type Ds_BattleOrder = {
  direction: OrderDirection;
  field: Ds_BattleOrderField;
};

export enum Ds_BattleOrderField {
  BattleEffects = 'BATTLE_EFFECTS',
  BattleId = 'BATTLE_ID',
  Deck = 'DECK',
  GameId = 'GAME_ID',
  Hand = 'HAND',
  Hero = 'HERO',
  Monster = 'MONSTER',
  Round = 'ROUND'
}

export type Ds_BattleWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  round?: InputMaybe<Scalars['u8']['input']>;
  roundEQ?: InputMaybe<Scalars['u8']['input']>;
  roundGT?: InputMaybe<Scalars['u8']['input']>;
  roundGTE?: InputMaybe<Scalars['u8']['input']>;
  roundIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundLIKE?: InputMaybe<Scalars['u8']['input']>;
  roundLT?: InputMaybe<Scalars['u8']['input']>;
  roundLTE?: InputMaybe<Scalars['u8']['input']>;
  roundNEQ?: InputMaybe<Scalars['u8']['input']>;
  roundNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_Board = {
  __typename?: 'ds_Board';
  battle_id?: Maybe<Scalars['u16']['output']>;
  creature1?: Maybe<Ds_Creature>;
  creature2?: Maybe<Ds_Creature>;
  creature3?: Maybe<Ds_Creature>;
  creature4?: Maybe<Ds_Creature>;
  creature5?: Maybe<Ds_Creature>;
  creature6?: Maybe<Ds_Creature>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
};

export type Ds_BoardConnection = {
  __typename?: 'ds_BoardConnection';
  edges?: Maybe<Array<Maybe<Ds_BoardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_BoardEdge = {
  __typename?: 'ds_BoardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_Board>;
};

export type Ds_BoardOrder = {
  direction: OrderDirection;
  field: Ds_BoardOrderField;
};

export enum Ds_BoardOrderField {
  BattleId = 'BATTLE_ID',
  Creature1 = 'CREATURE1',
  Creature2 = 'CREATURE2',
  Creature3 = 'CREATURE3',
  Creature4 = 'CREATURE4',
  Creature5 = 'CREATURE5',
  Creature6 = 'CREATURE6',
  GameId = 'GAME_ID'
}

export type Ds_BoardWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_Creature = {
  __typename?: 'ds_Creature';
  attack?: Maybe<Scalars['u8']['output']>;
  card_id?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_Draft = {
  __typename?: 'ds_Draft';
  cards?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  options?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
};

export type Ds_DraftConnection = {
  __typename?: 'ds_DraftConnection';
  edges?: Maybe<Array<Maybe<Ds_DraftEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_DraftEdge = {
  __typename?: 'ds_DraftEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_Draft>;
};

export type Ds_DraftOrder = {
  direction: OrderDirection;
  field: Ds_DraftOrderField;
};

export enum Ds_DraftOrderField {
  Cards = 'CARDS',
  GameId = 'GAME_ID',
  Options = 'OPTIONS'
}

export type Ds_DraftWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_Game = {
  __typename?: 'ds_Game';
  action_count?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hero_health?: Maybe<Scalars['u8']['output']>;
  hero_xp?: Maybe<Scalars['u16']['output']>;
  last_node_id?: Maybe<Scalars['u8']['output']>;
  map_depth?: Maybe<Scalars['u8']['output']>;
  map_level?: Maybe<Scalars['u8']['output']>;
  monsters_slain?: Maybe<Scalars['u16']['output']>;
  state?: Maybe<Scalars['Enum']['output']>;
};

export type Ds_GameActionEvent = {
  __typename?: 'ds_GameActionEvent';
  count?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  tx_hash?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_GameActionEventConnection = {
  __typename?: 'ds_GameActionEventConnection';
  edges?: Maybe<Array<Maybe<Ds_GameActionEventEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_GameActionEventEdge = {
  __typename?: 'ds_GameActionEventEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_GameActionEvent>;
};

export type Ds_GameActionEventOrder = {
  direction: OrderDirection;
  field: Ds_GameActionEventOrderField;
};

export enum Ds_GameActionEventOrderField {
  Count = 'COUNT',
  GameId = 'GAME_ID',
  TxHash = 'TX_HASH'
}

export type Ds_GameActionEventWhereInput = {
  count?: InputMaybe<Scalars['u16']['input']>;
  countEQ?: InputMaybe<Scalars['u16']['input']>;
  countGT?: InputMaybe<Scalars['u16']['input']>;
  countGTE?: InputMaybe<Scalars['u16']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u16']['input']>;
  countLT?: InputMaybe<Scalars['u16']['input']>;
  countLTE?: InputMaybe<Scalars['u16']['input']>;
  countNEQ?: InputMaybe<Scalars['u16']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  tx_hash?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashEQ?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashGT?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashGTE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  tx_hashLIKE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashLT?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashLTE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashNEQ?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  tx_hashNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_GameConnection = {
  __typename?: 'ds_GameConnection';
  edges?: Maybe<Array<Maybe<Ds_GameEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_GameCounter = {
  __typename?: 'ds_GameCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_GameCounterConnection = {
  __typename?: 'ds_GameCounterConnection';
  edges?: Maybe<Array<Maybe<Ds_GameCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_GameCounterEdge = {
  __typename?: 'ds_GameCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_GameCounter>;
};

export type Ds_GameCounterOrder = {
  direction: OrderDirection;
  field: Ds_GameCounterOrderField;
};

export enum Ds_GameCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Ds_GameCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_GameEdge = {
  __typename?: 'ds_GameEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_Game>;
};

export type Ds_GameEffects = {
  __typename?: 'ds_GameEffects';
  all_attack?: Maybe<Scalars['u8']['output']>;
  brute_attack?: Maybe<Scalars['u8']['output']>;
  brute_health?: Maybe<Scalars['u8']['output']>;
  card_draw?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  first_attack?: Maybe<Scalars['u8']['output']>;
  first_creature_cost?: Maybe<Scalars['u8']['output']>;
  first_health?: Maybe<Scalars['u8']['output']>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hero_card_heal?: Maybe<Scalars['bool']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  hunter_attack?: Maybe<Scalars['u8']['output']>;
  hunter_health?: Maybe<Scalars['u8']['output']>;
  magical_attack?: Maybe<Scalars['u8']['output']>;
  magical_health?: Maybe<Scalars['u8']['output']>;
  play_creature_heal?: Maybe<Scalars['u8']['output']>;
  start_bonus_energy?: Maybe<Scalars['u8']['output']>;
};

export type Ds_GameEffectsConnection = {
  __typename?: 'ds_GameEffectsConnection';
  edges?: Maybe<Array<Maybe<Ds_GameEffectsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_GameEffectsEdge = {
  __typename?: 'ds_GameEffectsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_GameEffects>;
};

export type Ds_GameEffectsOrder = {
  direction: OrderDirection;
  field: Ds_GameEffectsOrderField;
};

export enum Ds_GameEffectsOrderField {
  AllAttack = 'ALL_ATTACK',
  BruteAttack = 'BRUTE_ATTACK',
  BruteHealth = 'BRUTE_HEALTH',
  CardDraw = 'CARD_DRAW',
  FirstAttack = 'FIRST_ATTACK',
  FirstCreatureCost = 'FIRST_CREATURE_COST',
  FirstHealth = 'FIRST_HEALTH',
  GameId = 'GAME_ID',
  HeroCardHeal = 'HERO_CARD_HEAL',
  HeroDmgReduction = 'HERO_DMG_REDUCTION',
  HunterAttack = 'HUNTER_ATTACK',
  HunterHealth = 'HUNTER_HEALTH',
  MagicalAttack = 'MAGICAL_ATTACK',
  MagicalHealth = 'MAGICAL_HEALTH',
  PlayCreatureHeal = 'PLAY_CREATURE_HEAL',
  StartBonusEnergy = 'START_BONUS_ENERGY'
}

export type Ds_GameEffectsWhereInput = {
  all_attack?: InputMaybe<Scalars['u8']['input']>;
  all_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackGT?: InputMaybe<Scalars['u8']['input']>;
  all_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  all_attackLT?: InputMaybe<Scalars['u8']['input']>;
  all_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attack?: InputMaybe<Scalars['u8']['input']>;
  brute_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_health?: InputMaybe<Scalars['u8']['input']>;
  brute_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_draw?: InputMaybe<Scalars['u8']['input']>;
  card_drawEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawGT?: InputMaybe<Scalars['u8']['input']>;
  card_drawGTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_drawLT?: InputMaybe<Scalars['u8']['input']>;
  card_drawLTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawNEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attack?: InputMaybe<Scalars['u8']['input']>;
  first_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackGT?: InputMaybe<Scalars['u8']['input']>;
  first_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attackLT?: InputMaybe<Scalars['u8']['input']>;
  first_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_cost?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costEQ?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costGT?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costGTE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_creature_costLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costLT?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costLTE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_creature_costNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_health?: InputMaybe<Scalars['u8']['input']>;
  first_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthGT?: InputMaybe<Scalars['u8']['input']>;
  first_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_healthLT?: InputMaybe<Scalars['u8']['input']>;
  first_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  hero_card_heal?: InputMaybe<Scalars['bool']['input']>;
  hero_dmg_reduction?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attack?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_health?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attack?: InputMaybe<Scalars['u8']['input']>;
  magical_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_health?: InputMaybe<Scalars['u8']['input']>;
  magical_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_heal?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energy?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_GameMetadata = {
  __typename?: 'ds_GameMetadata';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  creator_address?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  developer?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  genre?: Maybe<Scalars['felt252']['output']>;
  image?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  publisher?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_GameMetadataConnection = {
  __typename?: 'ds_GameMetadataConnection';
  edges?: Maybe<Array<Maybe<Ds_GameMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_GameMetadataEdge = {
  __typename?: 'ds_GameMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_GameMetadata>;
};

export type Ds_GameMetadataOrder = {
  direction: OrderDirection;
  field: Ds_GameMetadataOrderField;
};

export enum Ds_GameMetadataOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  CreatorAddress = 'CREATOR_ADDRESS',
  Description = 'DESCRIPTION',
  Developer = 'DEVELOPER',
  Genre = 'GENRE',
  Image = 'IMAGE',
  Name = 'NAME',
  Publisher = 'PUBLISHER'
}

export type Ds_GameMetadataWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  developer?: InputMaybe<Scalars['felt252']['input']>;
  developerEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerGT?: InputMaybe<Scalars['felt252']['input']>;
  developerGTE?: InputMaybe<Scalars['felt252']['input']>;
  developerIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerLIKE?: InputMaybe<Scalars['felt252']['input']>;
  developerLT?: InputMaybe<Scalars['felt252']['input']>;
  developerLTE?: InputMaybe<Scalars['felt252']['input']>;
  developerNEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genre?: InputMaybe<Scalars['felt252']['input']>;
  genreEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreGT?: InputMaybe<Scalars['felt252']['input']>;
  genreGTE?: InputMaybe<Scalars['felt252']['input']>;
  genreIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genreLT?: InputMaybe<Scalars['felt252']['input']>;
  genreLTE?: InputMaybe<Scalars['felt252']['input']>;
  genreNEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  image?: InputMaybe<Scalars['ByteArray']['input']>;
  imageEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisher?: InputMaybe<Scalars['felt252']['input']>;
  publisherEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherGT?: InputMaybe<Scalars['felt252']['input']>;
  publisherGTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisherLT?: InputMaybe<Scalars['felt252']['input']>;
  publisherLTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherNEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_GameOrder = {
  direction: OrderDirection;
  field: Ds_GameOrderField;
};

export enum Ds_GameOrderField {
  ActionCount = 'ACTION_COUNT',
  GameId = 'GAME_ID',
  HeroHealth = 'HERO_HEALTH',
  HeroXp = 'HERO_XP',
  LastNodeId = 'LAST_NODE_ID',
  MapDepth = 'MAP_DEPTH',
  MapLevel = 'MAP_LEVEL',
  MonstersSlain = 'MONSTERS_SLAIN',
  State = 'STATE'
}

export type Ds_GameSettings = {
  __typename?: 'ds_GameSettings';
  draft_size?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  include_spells?: Maybe<Scalars['bool']['output']>;
  max_energy?: Maybe<Scalars['u8']['output']>;
  max_hand_size?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  start_energy?: Maybe<Scalars['u8']['output']>;
  start_hand_size?: Maybe<Scalars['u8']['output']>;
  start_health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_GameSettingsConnection = {
  __typename?: 'ds_GameSettingsConnection';
  edges?: Maybe<Array<Maybe<Ds_GameSettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_GameSettingsEdge = {
  __typename?: 'ds_GameSettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_GameSettings>;
};

export type Ds_GameSettingsOrder = {
  direction: OrderDirection;
  field: Ds_GameSettingsOrderField;
};

export enum Ds_GameSettingsOrderField {
  DraftSize = 'DRAFT_SIZE',
  IncludeSpells = 'INCLUDE_SPELLS',
  MaxEnergy = 'MAX_ENERGY',
  MaxHandSize = 'MAX_HAND_SIZE',
  SettingsId = 'SETTINGS_ID',
  StartEnergy = 'START_ENERGY',
  StartHandSize = 'START_HAND_SIZE',
  StartHealth = 'START_HEALTH'
}

export type Ds_GameSettingsWhereInput = {
  draft_size?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  draft_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  draft_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  include_spells?: InputMaybe<Scalars['bool']['input']>;
  max_energy?: InputMaybe<Scalars['u8']['input']>;
  max_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  max_energyGT?: InputMaybe<Scalars['u8']['input']>;
  max_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  max_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_energyLT?: InputMaybe<Scalars['u8']['input']>;
  max_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  max_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_size?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_hand_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_hand_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  start_energy?: InputMaybe<Scalars['u8']['input']>;
  start_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_size?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_hand_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_hand_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_health?: InputMaybe<Scalars['u8']['input']>;
  start_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  start_healthGT?: InputMaybe<Scalars['u8']['input']>;
  start_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  start_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_healthLT?: InputMaybe<Scalars['u8']['input']>;
  start_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  start_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_GameWhereInput = {
  action_count?: InputMaybe<Scalars['u16']['input']>;
  action_countEQ?: InputMaybe<Scalars['u16']['input']>;
  action_countGT?: InputMaybe<Scalars['u16']['input']>;
  action_countGTE?: InputMaybe<Scalars['u16']['input']>;
  action_countIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  action_countLIKE?: InputMaybe<Scalars['u16']['input']>;
  action_countLT?: InputMaybe<Scalars['u16']['input']>;
  action_countLTE?: InputMaybe<Scalars['u16']['input']>;
  action_countNEQ?: InputMaybe<Scalars['u16']['input']>;
  action_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  action_countNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  hero_health?: InputMaybe<Scalars['u8']['input']>;
  hero_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_xp?: InputMaybe<Scalars['u16']['input']>;
  hero_xpEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpLIKE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  last_node_id?: InputMaybe<Scalars['u8']['input']>;
  last_node_idEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depth?: InputMaybe<Scalars['u8']['input']>;
  map_depthEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthGT?: InputMaybe<Scalars['u8']['input']>;
  map_depthGTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depthLT?: InputMaybe<Scalars['u8']['input']>;
  map_depthLTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_level?: InputMaybe<Scalars['u8']['input']>;
  map_levelEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelGT?: InputMaybe<Scalars['u8']['input']>;
  map_levelGTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_levelLT?: InputMaybe<Scalars['u8']['input']>;
  map_levelLTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  monsters_slain?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainLIKE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  state?: InputMaybe<Scalars['Enum']['input']>;
};

export type Ds_Hero = {
  __typename?: 'ds_Hero';
  energy?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_Lifecycle = {
  __typename?: 'ds_Lifecycle';
  end?: Maybe<Ds_Optionu64>;
  mint?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Ds_Optionu64>;
};

export type Ds_Map = {
  __typename?: 'ds_Map';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  level?: Maybe<Scalars['u8']['output']>;
  seed?: Maybe<Scalars['u128']['output']>;
};

export type Ds_MapConnection = {
  __typename?: 'ds_MapConnection';
  edges?: Maybe<Array<Maybe<Ds_MapEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_MapEdge = {
  __typename?: 'ds_MapEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_Map>;
};

export type Ds_MapOrder = {
  direction: OrderDirection;
  field: Ds_MapOrderField;
};

export enum Ds_MapOrderField {
  GameId = 'GAME_ID',
  Level = 'LEVEL',
  Seed = 'SEED'
}

export type Ds_MapWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  level?: InputMaybe<Scalars['u8']['input']>;
  levelEQ?: InputMaybe<Scalars['u8']['input']>;
  levelGT?: InputMaybe<Scalars['u8']['input']>;
  levelGTE?: InputMaybe<Scalars['u8']['input']>;
  levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  levelLT?: InputMaybe<Scalars['u8']['input']>;
  levelLTE?: InputMaybe<Scalars['u8']['input']>;
  levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  seed?: InputMaybe<Scalars['u128']['input']>;
  seedEQ?: InputMaybe<Scalars['u128']['input']>;
  seedGT?: InputMaybe<Scalars['u128']['input']>;
  seedGTE?: InputMaybe<Scalars['u128']['input']>;
  seedIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedLIKE?: InputMaybe<Scalars['u128']['input']>;
  seedLT?: InputMaybe<Scalars['u128']['input']>;
  seedLTE?: InputMaybe<Scalars['u128']['input']>;
  seedNEQ?: InputMaybe<Scalars['u128']['input']>;
  seedNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type Ds_Monster = {
  __typename?: 'ds_Monster';
  attack?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
  monster_id?: Maybe<Scalars['u8']['output']>;
};

export type Ds_Optionu64 = {
  __typename?: 'ds_Optionu64';
  Some?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Ds_Score = {
  __typename?: 'ds_Score';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  score?: Maybe<Scalars['u32']['output']>;
};

export type Ds_ScoreConnection = {
  __typename?: 'ds_ScoreConnection';
  edges?: Maybe<Array<Maybe<Ds_ScoreEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_ScoreEdge = {
  __typename?: 'ds_ScoreEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_Score>;
};

export type Ds_ScoreOrder = {
  direction: OrderDirection;
  field: Ds_ScoreOrderField;
};

export enum Ds_ScoreOrderField {
  GameId = 'GAME_ID',
  Score = 'SCORE'
}

export type Ds_ScoreWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  score?: InputMaybe<Scalars['u32']['input']>;
  scoreEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreGT?: InputMaybe<Scalars['u32']['input']>;
  scoreGTE?: InputMaybe<Scalars['u32']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u32']['input']>;
  scoreLT?: InputMaybe<Scalars['u32']['input']>;
  scoreLTE?: InputMaybe<Scalars['u32']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Ds_Settings = {
  __typename?: 'ds_Settings';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  value?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_SettingsConnection = {
  __typename?: 'ds_SettingsConnection';
  edges?: Maybe<Array<Maybe<Ds_SettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_SettingsCounter = {
  __typename?: 'ds_SettingsCounter';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_SettingsCounterConnection = {
  __typename?: 'ds_SettingsCounterConnection';
  edges?: Maybe<Array<Maybe<Ds_SettingsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_SettingsCounterEdge = {
  __typename?: 'ds_SettingsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_SettingsCounter>;
};

export type Ds_SettingsCounterOrder = {
  direction: OrderDirection;
  field: Ds_SettingsCounterOrderField;
};

export enum Ds_SettingsCounterOrderField {
  Count = 'COUNT',
  Id = 'ID'
}

export type Ds_SettingsCounterWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  id?: InputMaybe<Scalars['felt252']['input']>;
  idEQ?: InputMaybe<Scalars['felt252']['input']>;
  idGT?: InputMaybe<Scalars['felt252']['input']>;
  idGTE?: InputMaybe<Scalars['felt252']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  idLT?: InputMaybe<Scalars['felt252']['input']>;
  idLTE?: InputMaybe<Scalars['felt252']['input']>;
  idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_SettingsDetails = {
  __typename?: 'ds_SettingsDetails';
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_SettingsDetailsConnection = {
  __typename?: 'ds_SettingsDetailsConnection';
  edges?: Maybe<Array<Maybe<Ds_SettingsDetailsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_SettingsDetailsEdge = {
  __typename?: 'ds_SettingsDetailsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_SettingsDetails>;
};

export type Ds_SettingsDetailsOrder = {
  direction: OrderDirection;
  field: Ds_SettingsDetailsOrderField;
};

export enum Ds_SettingsDetailsOrderField {
  Description = 'DESCRIPTION',
  Exists = 'EXISTS',
  Id = 'ID',
  Name = 'NAME'
}

export type Ds_SettingsDetailsWhereInput = {
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_SettingsEdge = {
  __typename?: 'ds_SettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_Settings>;
};

export type Ds_SettingsOrder = {
  direction: OrderDirection;
  field: Ds_SettingsOrderField;
};

export enum Ds_SettingsOrderField {
  Id = 'ID',
  Name = 'NAME',
  Value = 'VALUE'
}

export type Ds_SettingsWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  value?: InputMaybe<Scalars['felt252']['input']>;
  valueEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueGT?: InputMaybe<Scalars['felt252']['input']>;
  valueGTE?: InputMaybe<Scalars['felt252']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['felt252']['input']>;
  valueLT?: InputMaybe<Scalars['felt252']['input']>;
  valueLTE?: InputMaybe<Scalars['felt252']['input']>;
  valueNEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_Task = {
  __typename?: 'ds_Task';
  description?: Maybe<Scalars['ByteArray']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  total?: Maybe<Scalars['u32']['output']>;
};

export type Ds_TokenMetadata = {
  __typename?: 'ds_TokenMetadata';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lifecycle?: Maybe<Ds_Lifecycle>;
  minted_by?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
};

export type Ds_TokenMetadataConnection = {
  __typename?: 'ds_TokenMetadataConnection';
  edges?: Maybe<Array<Maybe<Ds_TokenMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_TokenMetadataEdge = {
  __typename?: 'ds_TokenMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_TokenMetadata>;
};

export type Ds_TokenMetadataOrder = {
  direction: OrderDirection;
  field: Ds_TokenMetadataOrderField;
};

export enum Ds_TokenMetadataOrderField {
  Lifecycle = 'LIFECYCLE',
  MintedBy = 'MINTED_BY',
  PlayerName = 'PLAYER_NAME',
  SettingsId = 'SETTINGS_ID',
  TokenId = 'TOKEN_ID'
}

export type Ds_TokenMetadataWhereInput = {
  minted_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  token_id?: InputMaybe<Scalars['u64']['input']>;
  token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idGT?: InputMaybe<Scalars['u64']['input']>;
  token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  token_idLT?: InputMaybe<Scalars['u64']['input']>;
  token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_TrophyCreation = {
  __typename?: 'ds_TrophyCreation';
  data?: Maybe<Scalars['ByteArray']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  end?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  group?: Maybe<Scalars['felt252']['output']>;
  hidden?: Maybe<Scalars['bool']['output']>;
  icon?: Maybe<Scalars['felt252']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  index?: Maybe<Scalars['u8']['output']>;
  points?: Maybe<Scalars['u16']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
  tasks?: Maybe<Array<Maybe<Ds_Task>>>;
  title?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_TrophyCreationConnection = {
  __typename?: 'ds_TrophyCreationConnection';
  edges?: Maybe<Array<Maybe<Ds_TrophyCreationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_TrophyCreationEdge = {
  __typename?: 'ds_TrophyCreationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_TrophyCreation>;
};

export type Ds_TrophyCreationOrder = {
  direction: OrderDirection;
  field: Ds_TrophyCreationOrderField;
};

export enum Ds_TrophyCreationOrderField {
  Data = 'DATA',
  Description = 'DESCRIPTION',
  End = 'END',
  Group = 'GROUP',
  Hidden = 'HIDDEN',
  Icon = 'ICON',
  Id = 'ID',
  Index = 'INDEX',
  Points = 'POINTS',
  Start = 'START',
  Tasks = 'TASKS',
  Title = 'TITLE'
}

export type Ds_TrophyCreationWhereInput = {
  data?: InputMaybe<Scalars['ByteArray']['input']>;
  dataEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  end?: InputMaybe<Scalars['u64']['input']>;
  endEQ?: InputMaybe<Scalars['u64']['input']>;
  endGT?: InputMaybe<Scalars['u64']['input']>;
  endGTE?: InputMaybe<Scalars['u64']['input']>;
  endIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endLIKE?: InputMaybe<Scalars['u64']['input']>;
  endLT?: InputMaybe<Scalars['u64']['input']>;
  endLTE?: InputMaybe<Scalars['u64']['input']>;
  endNEQ?: InputMaybe<Scalars['u64']['input']>;
  endNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  group?: InputMaybe<Scalars['felt252']['input']>;
  groupEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupGT?: InputMaybe<Scalars['felt252']['input']>;
  groupGTE?: InputMaybe<Scalars['felt252']['input']>;
  groupIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupLIKE?: InputMaybe<Scalars['felt252']['input']>;
  groupLT?: InputMaybe<Scalars['felt252']['input']>;
  groupLTE?: InputMaybe<Scalars['felt252']['input']>;
  groupNEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  hidden?: InputMaybe<Scalars['bool']['input']>;
  icon?: InputMaybe<Scalars['felt252']['input']>;
  iconEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconGT?: InputMaybe<Scalars['felt252']['input']>;
  iconGTE?: InputMaybe<Scalars['felt252']['input']>;
  iconIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconLIKE?: InputMaybe<Scalars['felt252']['input']>;
  iconLT?: InputMaybe<Scalars['felt252']['input']>;
  iconLTE?: InputMaybe<Scalars['felt252']['input']>;
  iconNEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  id?: InputMaybe<Scalars['felt252']['input']>;
  idEQ?: InputMaybe<Scalars['felt252']['input']>;
  idGT?: InputMaybe<Scalars['felt252']['input']>;
  idGTE?: InputMaybe<Scalars['felt252']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  idLT?: InputMaybe<Scalars['felt252']['input']>;
  idLTE?: InputMaybe<Scalars['felt252']['input']>;
  idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  index?: InputMaybe<Scalars['u8']['input']>;
  indexEQ?: InputMaybe<Scalars['u8']['input']>;
  indexGT?: InputMaybe<Scalars['u8']['input']>;
  indexGTE?: InputMaybe<Scalars['u8']['input']>;
  indexIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexLIKE?: InputMaybe<Scalars['u8']['input']>;
  indexLT?: InputMaybe<Scalars['u8']['input']>;
  indexLTE?: InputMaybe<Scalars['u8']['input']>;
  indexNEQ?: InputMaybe<Scalars['u8']['input']>;
  indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  points?: InputMaybe<Scalars['u16']['input']>;
  pointsEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsGT?: InputMaybe<Scalars['u16']['input']>;
  pointsGTE?: InputMaybe<Scalars['u16']['input']>;
  pointsIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsLIKE?: InputMaybe<Scalars['u16']['input']>;
  pointsLT?: InputMaybe<Scalars['u16']['input']>;
  pointsLTE?: InputMaybe<Scalars['u16']['input']>;
  pointsNEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  start?: InputMaybe<Scalars['u64']['input']>;
  startEQ?: InputMaybe<Scalars['u64']['input']>;
  startGT?: InputMaybe<Scalars['u64']['input']>;
  startGTE?: InputMaybe<Scalars['u64']['input']>;
  startIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startLIKE?: InputMaybe<Scalars['u64']['input']>;
  startLT?: InputMaybe<Scalars['u64']['input']>;
  startLTE?: InputMaybe<Scalars['u64']['input']>;
  startNEQ?: InputMaybe<Scalars['u64']['input']>;
  startNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  title?: InputMaybe<Scalars['felt252']['input']>;
  titleEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleGT?: InputMaybe<Scalars['felt252']['input']>;
  titleGTE?: InputMaybe<Scalars['felt252']['input']>;
  titleIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleLIKE?: InputMaybe<Scalars['felt252']['input']>;
  titleLT?: InputMaybe<Scalars['felt252']['input']>;
  titleLTE?: InputMaybe<Scalars['felt252']['input']>;
  titleNEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_TrophyProgression = {
  __typename?: 'ds_TrophyProgression';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  player_id?: Maybe<Scalars['felt252']['output']>;
  task_id?: Maybe<Scalars['felt252']['output']>;
  time?: Maybe<Scalars['u64']['output']>;
};

export type Ds_TrophyProgressionConnection = {
  __typename?: 'ds_TrophyProgressionConnection';
  edges?: Maybe<Array<Maybe<Ds_TrophyProgressionEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_TrophyProgressionEdge = {
  __typename?: 'ds_TrophyProgressionEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_TrophyProgression>;
};

export type Ds_TrophyProgressionOrder = {
  direction: OrderDirection;
  field: Ds_TrophyProgressionOrderField;
};

export enum Ds_TrophyProgressionOrderField {
  Count = 'COUNT',
  PlayerId = 'PLAYER_ID',
  TaskId = 'TASK_ID',
  Time = 'TIME'
}

export type Ds_TrophyProgressionWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  player_id?: InputMaybe<Scalars['felt252']['input']>;
  player_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idGT?: InputMaybe<Scalars['felt252']['input']>;
  player_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_idLT?: InputMaybe<Scalars['felt252']['input']>;
  player_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_id?: InputMaybe<Scalars['felt252']['input']>;
  task_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idGT?: InputMaybe<Scalars['felt252']['input']>;
  task_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_idLT?: InputMaybe<Scalars['felt252']['input']>;
  task_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  time?: InputMaybe<Scalars['u64']['input']>;
  timeEQ?: InputMaybe<Scalars['u64']['input']>;
  timeGT?: InputMaybe<Scalars['u64']['input']>;
  timeGTE?: InputMaybe<Scalars['u64']['input']>;
  timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  timeLT?: InputMaybe<Scalars['u64']['input']>;
  timeLTE?: InputMaybe<Scalars['u64']['input']>;
  timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_WorldConfig = {
  __typename?: 'ds_WorldConfig';
  config_id?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_count?: Maybe<Scalars['u256']['output']>;
  game_token_address?: Maybe<Scalars['ContractAddress']['output']>;
};

export type Ds_WorldConfigConnection = {
  __typename?: 'ds_WorldConfigConnection';
  edges?: Maybe<Array<Maybe<Ds_WorldConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_WorldConfigEdge = {
  __typename?: 'ds_WorldConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_WorldConfig>;
};

export type Ds_WorldConfigOrder = {
  direction: OrderDirection;
  field: Ds_WorldConfigOrderField;
};

export enum Ds_WorldConfigOrderField {
  ConfigId = 'CONFIG_ID',
  GameCount = 'GAME_COUNT',
  GameTokenAddress = 'GAME_TOKEN_ADDRESS'
}

export type Ds_WorldConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u8']['input']>;
  config_idEQ?: InputMaybe<Scalars['u8']['input']>;
  config_idGT?: InputMaybe<Scalars['u8']['input']>;
  config_idGTE?: InputMaybe<Scalars['u8']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  config_idLT?: InputMaybe<Scalars['u8']['input']>;
  config_idLTE?: InputMaybe<Scalars['u8']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_count?: InputMaybe<Scalars['u256']['input']>;
  game_countEQ?: InputMaybe<Scalars['u256']['input']>;
  game_countGT?: InputMaybe<Scalars['u256']['input']>;
  game_countGTE?: InputMaybe<Scalars['u256']['input']>;
  game_countIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  game_countLIKE?: InputMaybe<Scalars['u256']['input']>;
  game_countLT?: InputMaybe<Scalars['u256']['input']>;
  game_countLTE?: InputMaybe<Scalars['u256']['input']>;
  game_countNEQ?: InputMaybe<Scalars['u256']['input']>;
  game_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  game_countNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  game_token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  game_token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  game_token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
};

export type Ds_V1_1_0_Battle = {
  __typename?: 'ds_v1_1_0_Battle';
  battle_effects?: Maybe<Ds_V1_1_0_BattleEffects>;
  battle_id?: Maybe<Scalars['u16']['output']>;
  deck?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hand?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  hero?: Maybe<Ds_V1_1_0_Hero>;
  monster?: Maybe<Ds_V1_1_0_Monster>;
  round?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_0_BattleConnection = {
  __typename?: 'ds_v1_1_0_BattleConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_BattleEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_BattleEdge = {
  __typename?: 'ds_v1_1_0_BattleEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_Battle>;
};

export type Ds_V1_1_0_BattleEffects = {
  __typename?: 'ds_v1_1_0_BattleEffects';
  enemy_marks?: Maybe<Scalars['u8']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  next_brute_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_brute_health_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_health_bonus?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_0_BattleOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_BattleOrderField;
};

export enum Ds_V1_1_0_BattleOrderField {
  BattleEffects = 'BATTLE_EFFECTS',
  BattleId = 'BATTLE_ID',
  Deck = 'DECK',
  GameId = 'GAME_ID',
  Hand = 'HAND',
  Hero = 'HERO',
  Monster = 'MONSTER',
  Round = 'ROUND'
}

export type Ds_V1_1_0_BattleWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  round?: InputMaybe<Scalars['u8']['input']>;
  roundEQ?: InputMaybe<Scalars['u8']['input']>;
  roundGT?: InputMaybe<Scalars['u8']['input']>;
  roundGTE?: InputMaybe<Scalars['u8']['input']>;
  roundIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundLIKE?: InputMaybe<Scalars['u8']['input']>;
  roundLT?: InputMaybe<Scalars['u8']['input']>;
  roundLTE?: InputMaybe<Scalars['u8']['input']>;
  roundNEQ?: InputMaybe<Scalars['u8']['input']>;
  roundNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_0_Board = {
  __typename?: 'ds_v1_1_0_Board';
  battle_id?: Maybe<Scalars['u16']['output']>;
  creature1?: Maybe<Ds_V1_1_0_Creature>;
  creature2?: Maybe<Ds_V1_1_0_Creature>;
  creature3?: Maybe<Ds_V1_1_0_Creature>;
  creature4?: Maybe<Ds_V1_1_0_Creature>;
  creature5?: Maybe<Ds_V1_1_0_Creature>;
  creature6?: Maybe<Ds_V1_1_0_Creature>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_1_0_BoardConnection = {
  __typename?: 'ds_v1_1_0_BoardConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_BoardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_BoardEdge = {
  __typename?: 'ds_v1_1_0_BoardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_Board>;
};

export type Ds_V1_1_0_BoardOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_BoardOrderField;
};

export enum Ds_V1_1_0_BoardOrderField {
  BattleId = 'BATTLE_ID',
  Creature1 = 'CREATURE1',
  Creature2 = 'CREATURE2',
  Creature3 = 'CREATURE3',
  Creature4 = 'CREATURE4',
  Creature5 = 'CREATURE5',
  Creature6 = 'CREATURE6',
  GameId = 'GAME_ID'
}

export type Ds_V1_1_0_BoardWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_0_Creature = {
  __typename?: 'ds_v1_1_0_Creature';
  attack?: Maybe<Scalars['u8']['output']>;
  card_id?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_0_Draft = {
  __typename?: 'ds_v1_1_0_Draft';
  cards?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  options?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
};

export type Ds_V1_1_0_DraftConnection = {
  __typename?: 'ds_v1_1_0_DraftConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_DraftEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_DraftEdge = {
  __typename?: 'ds_v1_1_0_DraftEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_Draft>;
};

export type Ds_V1_1_0_DraftOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_DraftOrderField;
};

export enum Ds_V1_1_0_DraftOrderField {
  Cards = 'CARDS',
  GameId = 'GAME_ID',
  Options = 'OPTIONS'
}

export type Ds_V1_1_0_DraftWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_0_Game = {
  __typename?: 'ds_v1_1_0_Game';
  action_count?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hero_health?: Maybe<Scalars['u8']['output']>;
  hero_xp?: Maybe<Scalars['u16']['output']>;
  last_node_id?: Maybe<Scalars['u8']['output']>;
  map_depth?: Maybe<Scalars['u8']['output']>;
  map_level?: Maybe<Scalars['u8']['output']>;
  monsters_slain?: Maybe<Scalars['u16']['output']>;
  state?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_0_GameActionEvent = {
  __typename?: 'ds_v1_1_0_GameActionEvent';
  count?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  tx_hash?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_0_GameActionEventConnection = {
  __typename?: 'ds_v1_1_0_GameActionEventConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_GameActionEventEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_GameActionEventEdge = {
  __typename?: 'ds_v1_1_0_GameActionEventEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_GameActionEvent>;
};

export type Ds_V1_1_0_GameActionEventOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_GameActionEventOrderField;
};

export enum Ds_V1_1_0_GameActionEventOrderField {
  Count = 'COUNT',
  GameId = 'GAME_ID',
  TxHash = 'TX_HASH'
}

export type Ds_V1_1_0_GameActionEventWhereInput = {
  count?: InputMaybe<Scalars['u16']['input']>;
  countEQ?: InputMaybe<Scalars['u16']['input']>;
  countGT?: InputMaybe<Scalars['u16']['input']>;
  countGTE?: InputMaybe<Scalars['u16']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u16']['input']>;
  countLT?: InputMaybe<Scalars['u16']['input']>;
  countLTE?: InputMaybe<Scalars['u16']['input']>;
  countNEQ?: InputMaybe<Scalars['u16']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  tx_hash?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashEQ?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashGT?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashGTE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  tx_hashLIKE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashLT?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashLTE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashNEQ?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  tx_hashNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_0_GameConnection = {
  __typename?: 'ds_v1_1_0_GameConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_GameEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_GameCounter = {
  __typename?: 'ds_v1_1_0_GameCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_0_GameCounterConnection = {
  __typename?: 'ds_v1_1_0_GameCounterConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_GameCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_GameCounterEdge = {
  __typename?: 'ds_v1_1_0_GameCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_GameCounter>;
};

export type Ds_V1_1_0_GameCounterOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_GameCounterOrderField;
};

export enum Ds_V1_1_0_GameCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Ds_V1_1_0_GameCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_0_GameEdge = {
  __typename?: 'ds_v1_1_0_GameEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_Game>;
};

export type Ds_V1_1_0_GameEffects = {
  __typename?: 'ds_v1_1_0_GameEffects';
  all_attack?: Maybe<Scalars['u8']['output']>;
  brute_attack?: Maybe<Scalars['u8']['output']>;
  brute_health?: Maybe<Scalars['u8']['output']>;
  card_draw?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  first_attack?: Maybe<Scalars['u8']['output']>;
  first_creature_cost?: Maybe<Scalars['u8']['output']>;
  first_health?: Maybe<Scalars['u8']['output']>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hero_card_heal?: Maybe<Scalars['bool']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  hunter_attack?: Maybe<Scalars['u8']['output']>;
  hunter_health?: Maybe<Scalars['u8']['output']>;
  magical_attack?: Maybe<Scalars['u8']['output']>;
  magical_health?: Maybe<Scalars['u8']['output']>;
  play_creature_heal?: Maybe<Scalars['u8']['output']>;
  start_bonus_energy?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_0_GameEffectsConnection = {
  __typename?: 'ds_v1_1_0_GameEffectsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_GameEffectsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_GameEffectsEdge = {
  __typename?: 'ds_v1_1_0_GameEffectsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_GameEffects>;
};

export type Ds_V1_1_0_GameEffectsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_GameEffectsOrderField;
};

export enum Ds_V1_1_0_GameEffectsOrderField {
  AllAttack = 'ALL_ATTACK',
  BruteAttack = 'BRUTE_ATTACK',
  BruteHealth = 'BRUTE_HEALTH',
  CardDraw = 'CARD_DRAW',
  FirstAttack = 'FIRST_ATTACK',
  FirstCreatureCost = 'FIRST_CREATURE_COST',
  FirstHealth = 'FIRST_HEALTH',
  GameId = 'GAME_ID',
  HeroCardHeal = 'HERO_CARD_HEAL',
  HeroDmgReduction = 'HERO_DMG_REDUCTION',
  HunterAttack = 'HUNTER_ATTACK',
  HunterHealth = 'HUNTER_HEALTH',
  MagicalAttack = 'MAGICAL_ATTACK',
  MagicalHealth = 'MAGICAL_HEALTH',
  PlayCreatureHeal = 'PLAY_CREATURE_HEAL',
  StartBonusEnergy = 'START_BONUS_ENERGY'
}

export type Ds_V1_1_0_GameEffectsWhereInput = {
  all_attack?: InputMaybe<Scalars['u8']['input']>;
  all_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackGT?: InputMaybe<Scalars['u8']['input']>;
  all_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  all_attackLT?: InputMaybe<Scalars['u8']['input']>;
  all_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attack?: InputMaybe<Scalars['u8']['input']>;
  brute_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_health?: InputMaybe<Scalars['u8']['input']>;
  brute_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_draw?: InputMaybe<Scalars['u8']['input']>;
  card_drawEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawGT?: InputMaybe<Scalars['u8']['input']>;
  card_drawGTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_drawLT?: InputMaybe<Scalars['u8']['input']>;
  card_drawLTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawNEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attack?: InputMaybe<Scalars['u8']['input']>;
  first_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackGT?: InputMaybe<Scalars['u8']['input']>;
  first_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attackLT?: InputMaybe<Scalars['u8']['input']>;
  first_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_cost?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costEQ?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costGT?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costGTE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_creature_costLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costLT?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costLTE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_creature_costNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_health?: InputMaybe<Scalars['u8']['input']>;
  first_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthGT?: InputMaybe<Scalars['u8']['input']>;
  first_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_healthLT?: InputMaybe<Scalars['u8']['input']>;
  first_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  hero_card_heal?: InputMaybe<Scalars['bool']['input']>;
  hero_dmg_reduction?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attack?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_health?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attack?: InputMaybe<Scalars['u8']['input']>;
  magical_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_health?: InputMaybe<Scalars['u8']['input']>;
  magical_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_heal?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energy?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_0_GameMetadata = {
  __typename?: 'ds_v1_1_0_GameMetadata';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  creator_address?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  developer?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  genre?: Maybe<Scalars['felt252']['output']>;
  image?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  publisher?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_0_GameMetadataConnection = {
  __typename?: 'ds_v1_1_0_GameMetadataConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_GameMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_GameMetadataEdge = {
  __typename?: 'ds_v1_1_0_GameMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_GameMetadata>;
};

export type Ds_V1_1_0_GameMetadataOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_GameMetadataOrderField;
};

export enum Ds_V1_1_0_GameMetadataOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  CreatorAddress = 'CREATOR_ADDRESS',
  Description = 'DESCRIPTION',
  Developer = 'DEVELOPER',
  Genre = 'GENRE',
  Image = 'IMAGE',
  Name = 'NAME',
  Publisher = 'PUBLISHER'
}

export type Ds_V1_1_0_GameMetadataWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  developer?: InputMaybe<Scalars['felt252']['input']>;
  developerEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerGT?: InputMaybe<Scalars['felt252']['input']>;
  developerGTE?: InputMaybe<Scalars['felt252']['input']>;
  developerIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerLIKE?: InputMaybe<Scalars['felt252']['input']>;
  developerLT?: InputMaybe<Scalars['felt252']['input']>;
  developerLTE?: InputMaybe<Scalars['felt252']['input']>;
  developerNEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genre?: InputMaybe<Scalars['felt252']['input']>;
  genreEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreGT?: InputMaybe<Scalars['felt252']['input']>;
  genreGTE?: InputMaybe<Scalars['felt252']['input']>;
  genreIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genreLT?: InputMaybe<Scalars['felt252']['input']>;
  genreLTE?: InputMaybe<Scalars['felt252']['input']>;
  genreNEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  image?: InputMaybe<Scalars['ByteArray']['input']>;
  imageEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisher?: InputMaybe<Scalars['felt252']['input']>;
  publisherEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherGT?: InputMaybe<Scalars['felt252']['input']>;
  publisherGTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisherLT?: InputMaybe<Scalars['felt252']['input']>;
  publisherLTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherNEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_0_GameOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_GameOrderField;
};

export enum Ds_V1_1_0_GameOrderField {
  ActionCount = 'ACTION_COUNT',
  GameId = 'GAME_ID',
  HeroHealth = 'HERO_HEALTH',
  HeroXp = 'HERO_XP',
  LastNodeId = 'LAST_NODE_ID',
  MapDepth = 'MAP_DEPTH',
  MapLevel = 'MAP_LEVEL',
  MonstersSlain = 'MONSTERS_SLAIN',
  State = 'STATE'
}

export type Ds_V1_1_0_GameSettings = {
  __typename?: 'ds_v1_1_0_GameSettings';
  draft_size?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  include_spells?: Maybe<Scalars['bool']['output']>;
  max_energy?: Maybe<Scalars['u8']['output']>;
  max_hand_size?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  start_energy?: Maybe<Scalars['u8']['output']>;
  start_hand_size?: Maybe<Scalars['u8']['output']>;
  start_health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_0_GameSettingsConnection = {
  __typename?: 'ds_v1_1_0_GameSettingsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_GameSettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_GameSettingsEdge = {
  __typename?: 'ds_v1_1_0_GameSettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_GameSettings>;
};

export type Ds_V1_1_0_GameSettingsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_GameSettingsOrderField;
};

export enum Ds_V1_1_0_GameSettingsOrderField {
  DraftSize = 'DRAFT_SIZE',
  IncludeSpells = 'INCLUDE_SPELLS',
  MaxEnergy = 'MAX_ENERGY',
  MaxHandSize = 'MAX_HAND_SIZE',
  SettingsId = 'SETTINGS_ID',
  StartEnergy = 'START_ENERGY',
  StartHandSize = 'START_HAND_SIZE',
  StartHealth = 'START_HEALTH'
}

export type Ds_V1_1_0_GameSettingsWhereInput = {
  draft_size?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  draft_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  draft_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  include_spells?: InputMaybe<Scalars['bool']['input']>;
  max_energy?: InputMaybe<Scalars['u8']['input']>;
  max_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  max_energyGT?: InputMaybe<Scalars['u8']['input']>;
  max_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  max_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_energyLT?: InputMaybe<Scalars['u8']['input']>;
  max_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  max_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_size?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_hand_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_hand_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  start_energy?: InputMaybe<Scalars['u8']['input']>;
  start_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_size?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_hand_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_hand_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_health?: InputMaybe<Scalars['u8']['input']>;
  start_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  start_healthGT?: InputMaybe<Scalars['u8']['input']>;
  start_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  start_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_healthLT?: InputMaybe<Scalars['u8']['input']>;
  start_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  start_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_0_GameWhereInput = {
  action_count?: InputMaybe<Scalars['u16']['input']>;
  action_countEQ?: InputMaybe<Scalars['u16']['input']>;
  action_countGT?: InputMaybe<Scalars['u16']['input']>;
  action_countGTE?: InputMaybe<Scalars['u16']['input']>;
  action_countIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  action_countLIKE?: InputMaybe<Scalars['u16']['input']>;
  action_countLT?: InputMaybe<Scalars['u16']['input']>;
  action_countLTE?: InputMaybe<Scalars['u16']['input']>;
  action_countNEQ?: InputMaybe<Scalars['u16']['input']>;
  action_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  action_countNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  hero_health?: InputMaybe<Scalars['u8']['input']>;
  hero_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_xp?: InputMaybe<Scalars['u16']['input']>;
  hero_xpEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpLIKE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  last_node_id?: InputMaybe<Scalars['u8']['input']>;
  last_node_idEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depth?: InputMaybe<Scalars['u8']['input']>;
  map_depthEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthGT?: InputMaybe<Scalars['u8']['input']>;
  map_depthGTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depthLT?: InputMaybe<Scalars['u8']['input']>;
  map_depthLTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_level?: InputMaybe<Scalars['u8']['input']>;
  map_levelEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelGT?: InputMaybe<Scalars['u8']['input']>;
  map_levelGTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_levelLT?: InputMaybe<Scalars['u8']['input']>;
  map_levelLTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  monsters_slain?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainLIKE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  state?: InputMaybe<Scalars['u8']['input']>;
  stateEQ?: InputMaybe<Scalars['u8']['input']>;
  stateGT?: InputMaybe<Scalars['u8']['input']>;
  stateGTE?: InputMaybe<Scalars['u8']['input']>;
  stateIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  stateLIKE?: InputMaybe<Scalars['u8']['input']>;
  stateLT?: InputMaybe<Scalars['u8']['input']>;
  stateLTE?: InputMaybe<Scalars['u8']['input']>;
  stateNEQ?: InputMaybe<Scalars['u8']['input']>;
  stateNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  stateNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_0_Hero = {
  __typename?: 'ds_v1_1_0_Hero';
  energy?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_0_Lifecycle = {
  __typename?: 'ds_v1_1_0_Lifecycle';
  end?: Maybe<Ds_V1_1_0_Optionu64>;
  mint?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Ds_V1_1_0_Optionu64>;
};

export type Ds_V1_1_0_Map = {
  __typename?: 'ds_v1_1_0_Map';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  level?: Maybe<Scalars['u8']['output']>;
  seed?: Maybe<Scalars['u128']['output']>;
};

export type Ds_V1_1_0_MapConnection = {
  __typename?: 'ds_v1_1_0_MapConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_MapEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_MapEdge = {
  __typename?: 'ds_v1_1_0_MapEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_Map>;
};

export type Ds_V1_1_0_MapOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_MapOrderField;
};

export enum Ds_V1_1_0_MapOrderField {
  GameId = 'GAME_ID',
  Level = 'LEVEL',
  Seed = 'SEED'
}

export type Ds_V1_1_0_MapWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  level?: InputMaybe<Scalars['u8']['input']>;
  levelEQ?: InputMaybe<Scalars['u8']['input']>;
  levelGT?: InputMaybe<Scalars['u8']['input']>;
  levelGTE?: InputMaybe<Scalars['u8']['input']>;
  levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  levelLT?: InputMaybe<Scalars['u8']['input']>;
  levelLTE?: InputMaybe<Scalars['u8']['input']>;
  levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  seed?: InputMaybe<Scalars['u128']['input']>;
  seedEQ?: InputMaybe<Scalars['u128']['input']>;
  seedGT?: InputMaybe<Scalars['u128']['input']>;
  seedGTE?: InputMaybe<Scalars['u128']['input']>;
  seedIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedLIKE?: InputMaybe<Scalars['u128']['input']>;
  seedLT?: InputMaybe<Scalars['u128']['input']>;
  seedLTE?: InputMaybe<Scalars['u128']['input']>;
  seedNEQ?: InputMaybe<Scalars['u128']['input']>;
  seedNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type Ds_V1_1_0_Monster = {
  __typename?: 'ds_v1_1_0_Monster';
  attack?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
  monster_id?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_0_Optionu64 = {
  __typename?: 'ds_v1_1_0_Optionu64';
  Some?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Ds_V1_1_0_Score = {
  __typename?: 'ds_v1_1_0_Score';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  score?: Maybe<Scalars['u32']['output']>;
};

export type Ds_V1_1_0_ScoreConnection = {
  __typename?: 'ds_v1_1_0_ScoreConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_ScoreEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_ScoreEdge = {
  __typename?: 'ds_v1_1_0_ScoreEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_Score>;
};

export type Ds_V1_1_0_ScoreOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_ScoreOrderField;
};

export enum Ds_V1_1_0_ScoreOrderField {
  GameId = 'GAME_ID',
  Score = 'SCORE'
}

export type Ds_V1_1_0_ScoreWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  score?: InputMaybe<Scalars['u32']['input']>;
  scoreEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreGT?: InputMaybe<Scalars['u32']['input']>;
  scoreGTE?: InputMaybe<Scalars['u32']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u32']['input']>;
  scoreLT?: InputMaybe<Scalars['u32']['input']>;
  scoreLTE?: InputMaybe<Scalars['u32']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Ds_V1_1_0_Settings = {
  __typename?: 'ds_v1_1_0_Settings';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  value?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_0_SettingsConnection = {
  __typename?: 'ds_v1_1_0_SettingsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_SettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_SettingsCounter = {
  __typename?: 'ds_v1_1_0_SettingsCounter';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_0_SettingsCounterConnection = {
  __typename?: 'ds_v1_1_0_SettingsCounterConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_SettingsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_SettingsCounterEdge = {
  __typename?: 'ds_v1_1_0_SettingsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_SettingsCounter>;
};

export type Ds_V1_1_0_SettingsCounterOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_SettingsCounterOrderField;
};

export enum Ds_V1_1_0_SettingsCounterOrderField {
  Count = 'COUNT',
  Id = 'ID'
}

export type Ds_V1_1_0_SettingsCounterWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  id?: InputMaybe<Scalars['felt252']['input']>;
  idEQ?: InputMaybe<Scalars['felt252']['input']>;
  idGT?: InputMaybe<Scalars['felt252']['input']>;
  idGTE?: InputMaybe<Scalars['felt252']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  idLT?: InputMaybe<Scalars['felt252']['input']>;
  idLTE?: InputMaybe<Scalars['felt252']['input']>;
  idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_0_SettingsDetails = {
  __typename?: 'ds_v1_1_0_SettingsDetails';
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_0_SettingsDetailsConnection = {
  __typename?: 'ds_v1_1_0_SettingsDetailsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_SettingsDetailsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_SettingsDetailsEdge = {
  __typename?: 'ds_v1_1_0_SettingsDetailsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_SettingsDetails>;
};

export type Ds_V1_1_0_SettingsDetailsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_SettingsDetailsOrderField;
};

export enum Ds_V1_1_0_SettingsDetailsOrderField {
  Description = 'DESCRIPTION',
  Exists = 'EXISTS',
  Id = 'ID',
  Name = 'NAME'
}

export type Ds_V1_1_0_SettingsDetailsWhereInput = {
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_0_SettingsEdge = {
  __typename?: 'ds_v1_1_0_SettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_Settings>;
};

export type Ds_V1_1_0_SettingsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_SettingsOrderField;
};

export enum Ds_V1_1_0_SettingsOrderField {
  Id = 'ID',
  Name = 'NAME',
  Value = 'VALUE'
}

export type Ds_V1_1_0_SettingsWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  value?: InputMaybe<Scalars['felt252']['input']>;
  valueEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueGT?: InputMaybe<Scalars['felt252']['input']>;
  valueGTE?: InputMaybe<Scalars['felt252']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['felt252']['input']>;
  valueLT?: InputMaybe<Scalars['felt252']['input']>;
  valueLTE?: InputMaybe<Scalars['felt252']['input']>;
  valueNEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_0_Task = {
  __typename?: 'ds_v1_1_0_Task';
  description?: Maybe<Scalars['ByteArray']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  total?: Maybe<Scalars['u32']['output']>;
};

export type Ds_V1_1_0_TokenMetadata = {
  __typename?: 'ds_v1_1_0_TokenMetadata';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lifecycle?: Maybe<Ds_V1_1_0_Lifecycle>;
  minted_by?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_1_0_TokenMetadataConnection = {
  __typename?: 'ds_v1_1_0_TokenMetadataConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_TokenMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_TokenMetadataEdge = {
  __typename?: 'ds_v1_1_0_TokenMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_TokenMetadata>;
};

export type Ds_V1_1_0_TokenMetadataOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_TokenMetadataOrderField;
};

export enum Ds_V1_1_0_TokenMetadataOrderField {
  Lifecycle = 'LIFECYCLE',
  MintedBy = 'MINTED_BY',
  PlayerName = 'PLAYER_NAME',
  SettingsId = 'SETTINGS_ID',
  TokenId = 'TOKEN_ID'
}

export type Ds_V1_1_0_TokenMetadataWhereInput = {
  minted_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  token_id?: InputMaybe<Scalars['u64']['input']>;
  token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idGT?: InputMaybe<Scalars['u64']['input']>;
  token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  token_idLT?: InputMaybe<Scalars['u64']['input']>;
  token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_0_TrophyCreation = {
  __typename?: 'ds_v1_1_0_TrophyCreation';
  data?: Maybe<Scalars['ByteArray']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  end?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  group?: Maybe<Scalars['felt252']['output']>;
  hidden?: Maybe<Scalars['bool']['output']>;
  icon?: Maybe<Scalars['felt252']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  index?: Maybe<Scalars['u8']['output']>;
  points?: Maybe<Scalars['u16']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
  tasks?: Maybe<Array<Maybe<Ds_V1_1_0_Task>>>;
  title?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_0_TrophyCreationConnection = {
  __typename?: 'ds_v1_1_0_TrophyCreationConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_TrophyCreationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_TrophyCreationEdge = {
  __typename?: 'ds_v1_1_0_TrophyCreationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_TrophyCreation>;
};

export type Ds_V1_1_0_TrophyCreationOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_TrophyCreationOrderField;
};

export enum Ds_V1_1_0_TrophyCreationOrderField {
  Data = 'DATA',
  Description = 'DESCRIPTION',
  End = 'END',
  Group = 'GROUP',
  Hidden = 'HIDDEN',
  Icon = 'ICON',
  Id = 'ID',
  Index = 'INDEX',
  Points = 'POINTS',
  Start = 'START',
  Tasks = 'TASKS',
  Title = 'TITLE'
}

export type Ds_V1_1_0_TrophyCreationWhereInput = {
  data?: InputMaybe<Scalars['ByteArray']['input']>;
  dataEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  end?: InputMaybe<Scalars['u64']['input']>;
  endEQ?: InputMaybe<Scalars['u64']['input']>;
  endGT?: InputMaybe<Scalars['u64']['input']>;
  endGTE?: InputMaybe<Scalars['u64']['input']>;
  endIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endLIKE?: InputMaybe<Scalars['u64']['input']>;
  endLT?: InputMaybe<Scalars['u64']['input']>;
  endLTE?: InputMaybe<Scalars['u64']['input']>;
  endNEQ?: InputMaybe<Scalars['u64']['input']>;
  endNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  group?: InputMaybe<Scalars['felt252']['input']>;
  groupEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupGT?: InputMaybe<Scalars['felt252']['input']>;
  groupGTE?: InputMaybe<Scalars['felt252']['input']>;
  groupIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupLIKE?: InputMaybe<Scalars['felt252']['input']>;
  groupLT?: InputMaybe<Scalars['felt252']['input']>;
  groupLTE?: InputMaybe<Scalars['felt252']['input']>;
  groupNEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  hidden?: InputMaybe<Scalars['bool']['input']>;
  icon?: InputMaybe<Scalars['felt252']['input']>;
  iconEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconGT?: InputMaybe<Scalars['felt252']['input']>;
  iconGTE?: InputMaybe<Scalars['felt252']['input']>;
  iconIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconLIKE?: InputMaybe<Scalars['felt252']['input']>;
  iconLT?: InputMaybe<Scalars['felt252']['input']>;
  iconLTE?: InputMaybe<Scalars['felt252']['input']>;
  iconNEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  id?: InputMaybe<Scalars['felt252']['input']>;
  idEQ?: InputMaybe<Scalars['felt252']['input']>;
  idGT?: InputMaybe<Scalars['felt252']['input']>;
  idGTE?: InputMaybe<Scalars['felt252']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  idLT?: InputMaybe<Scalars['felt252']['input']>;
  idLTE?: InputMaybe<Scalars['felt252']['input']>;
  idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  index?: InputMaybe<Scalars['u8']['input']>;
  indexEQ?: InputMaybe<Scalars['u8']['input']>;
  indexGT?: InputMaybe<Scalars['u8']['input']>;
  indexGTE?: InputMaybe<Scalars['u8']['input']>;
  indexIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexLIKE?: InputMaybe<Scalars['u8']['input']>;
  indexLT?: InputMaybe<Scalars['u8']['input']>;
  indexLTE?: InputMaybe<Scalars['u8']['input']>;
  indexNEQ?: InputMaybe<Scalars['u8']['input']>;
  indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  points?: InputMaybe<Scalars['u16']['input']>;
  pointsEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsGT?: InputMaybe<Scalars['u16']['input']>;
  pointsGTE?: InputMaybe<Scalars['u16']['input']>;
  pointsIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsLIKE?: InputMaybe<Scalars['u16']['input']>;
  pointsLT?: InputMaybe<Scalars['u16']['input']>;
  pointsLTE?: InputMaybe<Scalars['u16']['input']>;
  pointsNEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  start?: InputMaybe<Scalars['u64']['input']>;
  startEQ?: InputMaybe<Scalars['u64']['input']>;
  startGT?: InputMaybe<Scalars['u64']['input']>;
  startGTE?: InputMaybe<Scalars['u64']['input']>;
  startIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startLIKE?: InputMaybe<Scalars['u64']['input']>;
  startLT?: InputMaybe<Scalars['u64']['input']>;
  startLTE?: InputMaybe<Scalars['u64']['input']>;
  startNEQ?: InputMaybe<Scalars['u64']['input']>;
  startNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  title?: InputMaybe<Scalars['felt252']['input']>;
  titleEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleGT?: InputMaybe<Scalars['felt252']['input']>;
  titleGTE?: InputMaybe<Scalars['felt252']['input']>;
  titleIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleLIKE?: InputMaybe<Scalars['felt252']['input']>;
  titleLT?: InputMaybe<Scalars['felt252']['input']>;
  titleLTE?: InputMaybe<Scalars['felt252']['input']>;
  titleNEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_0_TrophyProgression = {
  __typename?: 'ds_v1_1_0_TrophyProgression';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  player_id?: Maybe<Scalars['felt252']['output']>;
  task_id?: Maybe<Scalars['felt252']['output']>;
  time?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_1_0_TrophyProgressionConnection = {
  __typename?: 'ds_v1_1_0_TrophyProgressionConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_TrophyProgressionEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_TrophyProgressionEdge = {
  __typename?: 'ds_v1_1_0_TrophyProgressionEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_TrophyProgression>;
};

export type Ds_V1_1_0_TrophyProgressionOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_TrophyProgressionOrderField;
};

export enum Ds_V1_1_0_TrophyProgressionOrderField {
  Count = 'COUNT',
  PlayerId = 'PLAYER_ID',
  TaskId = 'TASK_ID',
  Time = 'TIME'
}

export type Ds_V1_1_0_TrophyProgressionWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  player_id?: InputMaybe<Scalars['felt252']['input']>;
  player_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idGT?: InputMaybe<Scalars['felt252']['input']>;
  player_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_idLT?: InputMaybe<Scalars['felt252']['input']>;
  player_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_id?: InputMaybe<Scalars['felt252']['input']>;
  task_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idGT?: InputMaybe<Scalars['felt252']['input']>;
  task_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_idLT?: InputMaybe<Scalars['felt252']['input']>;
  task_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  time?: InputMaybe<Scalars['u64']['input']>;
  timeEQ?: InputMaybe<Scalars['u64']['input']>;
  timeGT?: InputMaybe<Scalars['u64']['input']>;
  timeGTE?: InputMaybe<Scalars['u64']['input']>;
  timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  timeLT?: InputMaybe<Scalars['u64']['input']>;
  timeLTE?: InputMaybe<Scalars['u64']['input']>;
  timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_0_WorldConfig = {
  __typename?: 'ds_v1_1_0_WorldConfig';
  config_id?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_count?: Maybe<Scalars['u256']['output']>;
  game_token_address?: Maybe<Scalars['ContractAddress']['output']>;
};

export type Ds_V1_1_0_WorldConfigConnection = {
  __typename?: 'ds_v1_1_0_WorldConfigConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_0_WorldConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_0_WorldConfigEdge = {
  __typename?: 'ds_v1_1_0_WorldConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_0_WorldConfig>;
};

export type Ds_V1_1_0_WorldConfigOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_0_WorldConfigOrderField;
};

export enum Ds_V1_1_0_WorldConfigOrderField {
  ConfigId = 'CONFIG_ID',
  GameCount = 'GAME_COUNT',
  GameTokenAddress = 'GAME_TOKEN_ADDRESS'
}

export type Ds_V1_1_0_WorldConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u8']['input']>;
  config_idEQ?: InputMaybe<Scalars['u8']['input']>;
  config_idGT?: InputMaybe<Scalars['u8']['input']>;
  config_idGTE?: InputMaybe<Scalars['u8']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  config_idLT?: InputMaybe<Scalars['u8']['input']>;
  config_idLTE?: InputMaybe<Scalars['u8']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_count?: InputMaybe<Scalars['u256']['input']>;
  game_countEQ?: InputMaybe<Scalars['u256']['input']>;
  game_countGT?: InputMaybe<Scalars['u256']['input']>;
  game_countGTE?: InputMaybe<Scalars['u256']['input']>;
  game_countIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  game_countLIKE?: InputMaybe<Scalars['u256']['input']>;
  game_countLT?: InputMaybe<Scalars['u256']['input']>;
  game_countLTE?: InputMaybe<Scalars['u256']['input']>;
  game_countNEQ?: InputMaybe<Scalars['u256']['input']>;
  game_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  game_countNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  game_token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  game_token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  game_token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
};

export type Ds_V1_1_1_Battle = {
  __typename?: 'ds_v1_1_1_Battle';
  battle_effects?: Maybe<Ds_V1_1_1_BattleEffects>;
  battle_id?: Maybe<Scalars['u16']['output']>;
  deck?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hand?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  hero?: Maybe<Ds_V1_1_1_Hero>;
  monster?: Maybe<Ds_V1_1_1_Monster>;
  round?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_1_BattleConnection = {
  __typename?: 'ds_v1_1_1_BattleConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_BattleEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_BattleEdge = {
  __typename?: 'ds_v1_1_1_BattleEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_Battle>;
};

export type Ds_V1_1_1_BattleEffects = {
  __typename?: 'ds_v1_1_1_BattleEffects';
  enemy_marks?: Maybe<Scalars['u8']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  next_brute_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_brute_health_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_health_bonus?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_1_BattleOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_BattleOrderField;
};

export enum Ds_V1_1_1_BattleOrderField {
  BattleEffects = 'BATTLE_EFFECTS',
  BattleId = 'BATTLE_ID',
  Deck = 'DECK',
  GameId = 'GAME_ID',
  Hand = 'HAND',
  Hero = 'HERO',
  Monster = 'MONSTER',
  Round = 'ROUND'
}

export type Ds_V1_1_1_BattleWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  round?: InputMaybe<Scalars['u8']['input']>;
  roundEQ?: InputMaybe<Scalars['u8']['input']>;
  roundGT?: InputMaybe<Scalars['u8']['input']>;
  roundGTE?: InputMaybe<Scalars['u8']['input']>;
  roundIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundLIKE?: InputMaybe<Scalars['u8']['input']>;
  roundLT?: InputMaybe<Scalars['u8']['input']>;
  roundLTE?: InputMaybe<Scalars['u8']['input']>;
  roundNEQ?: InputMaybe<Scalars['u8']['input']>;
  roundNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_1_Board = {
  __typename?: 'ds_v1_1_1_Board';
  battle_id?: Maybe<Scalars['u16']['output']>;
  creature1?: Maybe<Ds_V1_1_1_Creature>;
  creature2?: Maybe<Ds_V1_1_1_Creature>;
  creature3?: Maybe<Ds_V1_1_1_Creature>;
  creature4?: Maybe<Ds_V1_1_1_Creature>;
  creature5?: Maybe<Ds_V1_1_1_Creature>;
  creature6?: Maybe<Ds_V1_1_1_Creature>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_1_1_BoardConnection = {
  __typename?: 'ds_v1_1_1_BoardConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_BoardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_BoardEdge = {
  __typename?: 'ds_v1_1_1_BoardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_Board>;
};

export type Ds_V1_1_1_BoardOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_BoardOrderField;
};

export enum Ds_V1_1_1_BoardOrderField {
  BattleId = 'BATTLE_ID',
  Creature1 = 'CREATURE1',
  Creature2 = 'CREATURE2',
  Creature3 = 'CREATURE3',
  Creature4 = 'CREATURE4',
  Creature5 = 'CREATURE5',
  Creature6 = 'CREATURE6',
  GameId = 'GAME_ID'
}

export type Ds_V1_1_1_BoardWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_1_Creature = {
  __typename?: 'ds_v1_1_1_Creature';
  attack?: Maybe<Scalars['u8']['output']>;
  card_id?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_1_Draft = {
  __typename?: 'ds_v1_1_1_Draft';
  cards?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  options?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
};

export type Ds_V1_1_1_DraftConnection = {
  __typename?: 'ds_v1_1_1_DraftConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_DraftEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_DraftEdge = {
  __typename?: 'ds_v1_1_1_DraftEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_Draft>;
};

export type Ds_V1_1_1_DraftOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_DraftOrderField;
};

export enum Ds_V1_1_1_DraftOrderField {
  Cards = 'CARDS',
  GameId = 'GAME_ID',
  Options = 'OPTIONS'
}

export type Ds_V1_1_1_DraftWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_1_Game = {
  __typename?: 'ds_v1_1_1_Game';
  action_count?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hero_health?: Maybe<Scalars['u8']['output']>;
  hero_xp?: Maybe<Scalars['u16']['output']>;
  last_node_id?: Maybe<Scalars['u8']['output']>;
  map_depth?: Maybe<Scalars['u8']['output']>;
  map_level?: Maybe<Scalars['u8']['output']>;
  monsters_slain?: Maybe<Scalars['u16']['output']>;
  state?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_1_GameActionEvent = {
  __typename?: 'ds_v1_1_1_GameActionEvent';
  count?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  tx_hash?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_1_GameActionEventConnection = {
  __typename?: 'ds_v1_1_1_GameActionEventConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_GameActionEventEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_GameActionEventEdge = {
  __typename?: 'ds_v1_1_1_GameActionEventEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_GameActionEvent>;
};

export type Ds_V1_1_1_GameActionEventOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_GameActionEventOrderField;
};

export enum Ds_V1_1_1_GameActionEventOrderField {
  Count = 'COUNT',
  GameId = 'GAME_ID',
  TxHash = 'TX_HASH'
}

export type Ds_V1_1_1_GameActionEventWhereInput = {
  count?: InputMaybe<Scalars['u16']['input']>;
  countEQ?: InputMaybe<Scalars['u16']['input']>;
  countGT?: InputMaybe<Scalars['u16']['input']>;
  countGTE?: InputMaybe<Scalars['u16']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u16']['input']>;
  countLT?: InputMaybe<Scalars['u16']['input']>;
  countLTE?: InputMaybe<Scalars['u16']['input']>;
  countNEQ?: InputMaybe<Scalars['u16']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  tx_hash?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashEQ?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashGT?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashGTE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  tx_hashLIKE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashLT?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashLTE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashNEQ?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  tx_hashNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_1_GameConnection = {
  __typename?: 'ds_v1_1_1_GameConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_GameEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_GameCounter = {
  __typename?: 'ds_v1_1_1_GameCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_1_GameCounterConnection = {
  __typename?: 'ds_v1_1_1_GameCounterConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_GameCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_GameCounterEdge = {
  __typename?: 'ds_v1_1_1_GameCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_GameCounter>;
};

export type Ds_V1_1_1_GameCounterOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_GameCounterOrderField;
};

export enum Ds_V1_1_1_GameCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Ds_V1_1_1_GameCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_1_GameEdge = {
  __typename?: 'ds_v1_1_1_GameEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_Game>;
};

export type Ds_V1_1_1_GameEffects = {
  __typename?: 'ds_v1_1_1_GameEffects';
  all_attack?: Maybe<Scalars['u8']['output']>;
  brute_attack?: Maybe<Scalars['u8']['output']>;
  brute_health?: Maybe<Scalars['u8']['output']>;
  card_draw?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  first_attack?: Maybe<Scalars['u8']['output']>;
  first_creature_cost?: Maybe<Scalars['u8']['output']>;
  first_health?: Maybe<Scalars['u8']['output']>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hero_card_heal?: Maybe<Scalars['bool']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  hunter_attack?: Maybe<Scalars['u8']['output']>;
  hunter_health?: Maybe<Scalars['u8']['output']>;
  magical_attack?: Maybe<Scalars['u8']['output']>;
  magical_health?: Maybe<Scalars['u8']['output']>;
  play_creature_heal?: Maybe<Scalars['u8']['output']>;
  start_bonus_energy?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_1_GameEffectsConnection = {
  __typename?: 'ds_v1_1_1_GameEffectsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_GameEffectsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_GameEffectsEdge = {
  __typename?: 'ds_v1_1_1_GameEffectsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_GameEffects>;
};

export type Ds_V1_1_1_GameEffectsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_GameEffectsOrderField;
};

export enum Ds_V1_1_1_GameEffectsOrderField {
  AllAttack = 'ALL_ATTACK',
  BruteAttack = 'BRUTE_ATTACK',
  BruteHealth = 'BRUTE_HEALTH',
  CardDraw = 'CARD_DRAW',
  FirstAttack = 'FIRST_ATTACK',
  FirstCreatureCost = 'FIRST_CREATURE_COST',
  FirstHealth = 'FIRST_HEALTH',
  GameId = 'GAME_ID',
  HeroCardHeal = 'HERO_CARD_HEAL',
  HeroDmgReduction = 'HERO_DMG_REDUCTION',
  HunterAttack = 'HUNTER_ATTACK',
  HunterHealth = 'HUNTER_HEALTH',
  MagicalAttack = 'MAGICAL_ATTACK',
  MagicalHealth = 'MAGICAL_HEALTH',
  PlayCreatureHeal = 'PLAY_CREATURE_HEAL',
  StartBonusEnergy = 'START_BONUS_ENERGY'
}

export type Ds_V1_1_1_GameEffectsWhereInput = {
  all_attack?: InputMaybe<Scalars['u8']['input']>;
  all_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackGT?: InputMaybe<Scalars['u8']['input']>;
  all_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  all_attackLT?: InputMaybe<Scalars['u8']['input']>;
  all_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attack?: InputMaybe<Scalars['u8']['input']>;
  brute_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_health?: InputMaybe<Scalars['u8']['input']>;
  brute_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_draw?: InputMaybe<Scalars['u8']['input']>;
  card_drawEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawGT?: InputMaybe<Scalars['u8']['input']>;
  card_drawGTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_drawLT?: InputMaybe<Scalars['u8']['input']>;
  card_drawLTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawNEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attack?: InputMaybe<Scalars['u8']['input']>;
  first_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackGT?: InputMaybe<Scalars['u8']['input']>;
  first_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attackLT?: InputMaybe<Scalars['u8']['input']>;
  first_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_cost?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costEQ?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costGT?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costGTE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_creature_costLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costLT?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costLTE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_creature_costNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_health?: InputMaybe<Scalars['u8']['input']>;
  first_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthGT?: InputMaybe<Scalars['u8']['input']>;
  first_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_healthLT?: InputMaybe<Scalars['u8']['input']>;
  first_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  hero_card_heal?: InputMaybe<Scalars['bool']['input']>;
  hero_dmg_reduction?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attack?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_health?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attack?: InputMaybe<Scalars['u8']['input']>;
  magical_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_health?: InputMaybe<Scalars['u8']['input']>;
  magical_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_heal?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energy?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_1_GameMetadata = {
  __typename?: 'ds_v1_1_1_GameMetadata';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  creator_address?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  developer?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  genre?: Maybe<Scalars['felt252']['output']>;
  image?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  publisher?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_1_GameMetadataConnection = {
  __typename?: 'ds_v1_1_1_GameMetadataConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_GameMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_GameMetadataEdge = {
  __typename?: 'ds_v1_1_1_GameMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_GameMetadata>;
};

export type Ds_V1_1_1_GameMetadataOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_GameMetadataOrderField;
};

export enum Ds_V1_1_1_GameMetadataOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  CreatorAddress = 'CREATOR_ADDRESS',
  Description = 'DESCRIPTION',
  Developer = 'DEVELOPER',
  Genre = 'GENRE',
  Image = 'IMAGE',
  Name = 'NAME',
  Publisher = 'PUBLISHER'
}

export type Ds_V1_1_1_GameMetadataWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  developer?: InputMaybe<Scalars['felt252']['input']>;
  developerEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerGT?: InputMaybe<Scalars['felt252']['input']>;
  developerGTE?: InputMaybe<Scalars['felt252']['input']>;
  developerIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerLIKE?: InputMaybe<Scalars['felt252']['input']>;
  developerLT?: InputMaybe<Scalars['felt252']['input']>;
  developerLTE?: InputMaybe<Scalars['felt252']['input']>;
  developerNEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genre?: InputMaybe<Scalars['felt252']['input']>;
  genreEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreGT?: InputMaybe<Scalars['felt252']['input']>;
  genreGTE?: InputMaybe<Scalars['felt252']['input']>;
  genreIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genreLT?: InputMaybe<Scalars['felt252']['input']>;
  genreLTE?: InputMaybe<Scalars['felt252']['input']>;
  genreNEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  image?: InputMaybe<Scalars['ByteArray']['input']>;
  imageEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisher?: InputMaybe<Scalars['felt252']['input']>;
  publisherEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherGT?: InputMaybe<Scalars['felt252']['input']>;
  publisherGTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisherLT?: InputMaybe<Scalars['felt252']['input']>;
  publisherLTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherNEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_1_GameOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_GameOrderField;
};

export enum Ds_V1_1_1_GameOrderField {
  ActionCount = 'ACTION_COUNT',
  GameId = 'GAME_ID',
  HeroHealth = 'HERO_HEALTH',
  HeroXp = 'HERO_XP',
  LastNodeId = 'LAST_NODE_ID',
  MapDepth = 'MAP_DEPTH',
  MapLevel = 'MAP_LEVEL',
  MonstersSlain = 'MONSTERS_SLAIN',
  State = 'STATE'
}

export type Ds_V1_1_1_GameSettings = {
  __typename?: 'ds_v1_1_1_GameSettings';
  draft_size?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  include_spells?: Maybe<Scalars['bool']['output']>;
  max_energy?: Maybe<Scalars['u8']['output']>;
  max_hand_size?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  start_energy?: Maybe<Scalars['u8']['output']>;
  start_hand_size?: Maybe<Scalars['u8']['output']>;
  start_health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_1_GameSettingsConnection = {
  __typename?: 'ds_v1_1_1_GameSettingsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_GameSettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_GameSettingsEdge = {
  __typename?: 'ds_v1_1_1_GameSettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_GameSettings>;
};

export type Ds_V1_1_1_GameSettingsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_GameSettingsOrderField;
};

export enum Ds_V1_1_1_GameSettingsOrderField {
  DraftSize = 'DRAFT_SIZE',
  IncludeSpells = 'INCLUDE_SPELLS',
  MaxEnergy = 'MAX_ENERGY',
  MaxHandSize = 'MAX_HAND_SIZE',
  SettingsId = 'SETTINGS_ID',
  StartEnergy = 'START_ENERGY',
  StartHandSize = 'START_HAND_SIZE',
  StartHealth = 'START_HEALTH'
}

export type Ds_V1_1_1_GameSettingsWhereInput = {
  draft_size?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  draft_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  draft_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  include_spells?: InputMaybe<Scalars['bool']['input']>;
  max_energy?: InputMaybe<Scalars['u8']['input']>;
  max_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  max_energyGT?: InputMaybe<Scalars['u8']['input']>;
  max_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  max_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_energyLT?: InputMaybe<Scalars['u8']['input']>;
  max_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  max_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_size?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_hand_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_hand_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  start_energy?: InputMaybe<Scalars['u8']['input']>;
  start_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_size?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_hand_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_hand_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_health?: InputMaybe<Scalars['u8']['input']>;
  start_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  start_healthGT?: InputMaybe<Scalars['u8']['input']>;
  start_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  start_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_healthLT?: InputMaybe<Scalars['u8']['input']>;
  start_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  start_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_1_GameWhereInput = {
  action_count?: InputMaybe<Scalars['u16']['input']>;
  action_countEQ?: InputMaybe<Scalars['u16']['input']>;
  action_countGT?: InputMaybe<Scalars['u16']['input']>;
  action_countGTE?: InputMaybe<Scalars['u16']['input']>;
  action_countIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  action_countLIKE?: InputMaybe<Scalars['u16']['input']>;
  action_countLT?: InputMaybe<Scalars['u16']['input']>;
  action_countLTE?: InputMaybe<Scalars['u16']['input']>;
  action_countNEQ?: InputMaybe<Scalars['u16']['input']>;
  action_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  action_countNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  hero_health?: InputMaybe<Scalars['u8']['input']>;
  hero_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_xp?: InputMaybe<Scalars['u16']['input']>;
  hero_xpEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpLIKE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  last_node_id?: InputMaybe<Scalars['u8']['input']>;
  last_node_idEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depth?: InputMaybe<Scalars['u8']['input']>;
  map_depthEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthGT?: InputMaybe<Scalars['u8']['input']>;
  map_depthGTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depthLT?: InputMaybe<Scalars['u8']['input']>;
  map_depthLTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_level?: InputMaybe<Scalars['u8']['input']>;
  map_levelEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelGT?: InputMaybe<Scalars['u8']['input']>;
  map_levelGTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_levelLT?: InputMaybe<Scalars['u8']['input']>;
  map_levelLTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  monsters_slain?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainLIKE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  state?: InputMaybe<Scalars['u8']['input']>;
  stateEQ?: InputMaybe<Scalars['u8']['input']>;
  stateGT?: InputMaybe<Scalars['u8']['input']>;
  stateGTE?: InputMaybe<Scalars['u8']['input']>;
  stateIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  stateLIKE?: InputMaybe<Scalars['u8']['input']>;
  stateLT?: InputMaybe<Scalars['u8']['input']>;
  stateLTE?: InputMaybe<Scalars['u8']['input']>;
  stateNEQ?: InputMaybe<Scalars['u8']['input']>;
  stateNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  stateNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_1_Hero = {
  __typename?: 'ds_v1_1_1_Hero';
  energy?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_1_Lifecycle = {
  __typename?: 'ds_v1_1_1_Lifecycle';
  end?: Maybe<Ds_V1_1_1_Optionu64>;
  mint?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Ds_V1_1_1_Optionu64>;
};

export type Ds_V1_1_1_Map = {
  __typename?: 'ds_v1_1_1_Map';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  level?: Maybe<Scalars['u8']['output']>;
  seed?: Maybe<Scalars['u128']['output']>;
};

export type Ds_V1_1_1_MapConnection = {
  __typename?: 'ds_v1_1_1_MapConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_MapEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_MapEdge = {
  __typename?: 'ds_v1_1_1_MapEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_Map>;
};

export type Ds_V1_1_1_MapOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_MapOrderField;
};

export enum Ds_V1_1_1_MapOrderField {
  GameId = 'GAME_ID',
  Level = 'LEVEL',
  Seed = 'SEED'
}

export type Ds_V1_1_1_MapWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  level?: InputMaybe<Scalars['u8']['input']>;
  levelEQ?: InputMaybe<Scalars['u8']['input']>;
  levelGT?: InputMaybe<Scalars['u8']['input']>;
  levelGTE?: InputMaybe<Scalars['u8']['input']>;
  levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  levelLT?: InputMaybe<Scalars['u8']['input']>;
  levelLTE?: InputMaybe<Scalars['u8']['input']>;
  levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  seed?: InputMaybe<Scalars['u128']['input']>;
  seedEQ?: InputMaybe<Scalars['u128']['input']>;
  seedGT?: InputMaybe<Scalars['u128']['input']>;
  seedGTE?: InputMaybe<Scalars['u128']['input']>;
  seedIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedLIKE?: InputMaybe<Scalars['u128']['input']>;
  seedLT?: InputMaybe<Scalars['u128']['input']>;
  seedLTE?: InputMaybe<Scalars['u128']['input']>;
  seedNEQ?: InputMaybe<Scalars['u128']['input']>;
  seedNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type Ds_V1_1_1_Monster = {
  __typename?: 'ds_v1_1_1_Monster';
  attack?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
  monster_id?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_1_Optionu64 = {
  __typename?: 'ds_v1_1_1_Optionu64';
  Some?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Ds_V1_1_1_Score = {
  __typename?: 'ds_v1_1_1_Score';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  score?: Maybe<Scalars['u32']['output']>;
};

export type Ds_V1_1_1_ScoreConnection = {
  __typename?: 'ds_v1_1_1_ScoreConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_ScoreEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_ScoreEdge = {
  __typename?: 'ds_v1_1_1_ScoreEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_Score>;
};

export type Ds_V1_1_1_ScoreOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_ScoreOrderField;
};

export enum Ds_V1_1_1_ScoreOrderField {
  GameId = 'GAME_ID',
  Score = 'SCORE'
}

export type Ds_V1_1_1_ScoreWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  score?: InputMaybe<Scalars['u32']['input']>;
  scoreEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreGT?: InputMaybe<Scalars['u32']['input']>;
  scoreGTE?: InputMaybe<Scalars['u32']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u32']['input']>;
  scoreLT?: InputMaybe<Scalars['u32']['input']>;
  scoreLTE?: InputMaybe<Scalars['u32']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Ds_V1_1_1_Settings = {
  __typename?: 'ds_v1_1_1_Settings';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  value?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_1_SettingsConnection = {
  __typename?: 'ds_v1_1_1_SettingsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_SettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_SettingsCounter = {
  __typename?: 'ds_v1_1_1_SettingsCounter';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_1_SettingsCounterConnection = {
  __typename?: 'ds_v1_1_1_SettingsCounterConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_SettingsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_SettingsCounterEdge = {
  __typename?: 'ds_v1_1_1_SettingsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_SettingsCounter>;
};

export type Ds_V1_1_1_SettingsCounterOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_SettingsCounterOrderField;
};

export enum Ds_V1_1_1_SettingsCounterOrderField {
  Count = 'COUNT',
  Id = 'ID'
}

export type Ds_V1_1_1_SettingsCounterWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  id?: InputMaybe<Scalars['felt252']['input']>;
  idEQ?: InputMaybe<Scalars['felt252']['input']>;
  idGT?: InputMaybe<Scalars['felt252']['input']>;
  idGTE?: InputMaybe<Scalars['felt252']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  idLT?: InputMaybe<Scalars['felt252']['input']>;
  idLTE?: InputMaybe<Scalars['felt252']['input']>;
  idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_1_SettingsDetails = {
  __typename?: 'ds_v1_1_1_SettingsDetails';
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_1_SettingsDetailsConnection = {
  __typename?: 'ds_v1_1_1_SettingsDetailsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_SettingsDetailsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_SettingsDetailsEdge = {
  __typename?: 'ds_v1_1_1_SettingsDetailsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_SettingsDetails>;
};

export type Ds_V1_1_1_SettingsDetailsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_SettingsDetailsOrderField;
};

export enum Ds_V1_1_1_SettingsDetailsOrderField {
  Description = 'DESCRIPTION',
  Exists = 'EXISTS',
  Id = 'ID',
  Name = 'NAME'
}

export type Ds_V1_1_1_SettingsDetailsWhereInput = {
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_1_SettingsEdge = {
  __typename?: 'ds_v1_1_1_SettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_Settings>;
};

export type Ds_V1_1_1_SettingsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_SettingsOrderField;
};

export enum Ds_V1_1_1_SettingsOrderField {
  Id = 'ID',
  Name = 'NAME',
  Value = 'VALUE'
}

export type Ds_V1_1_1_SettingsWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  value?: InputMaybe<Scalars['felt252']['input']>;
  valueEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueGT?: InputMaybe<Scalars['felt252']['input']>;
  valueGTE?: InputMaybe<Scalars['felt252']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['felt252']['input']>;
  valueLT?: InputMaybe<Scalars['felt252']['input']>;
  valueLTE?: InputMaybe<Scalars['felt252']['input']>;
  valueNEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_1_Task = {
  __typename?: 'ds_v1_1_1_Task';
  description?: Maybe<Scalars['ByteArray']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  total?: Maybe<Scalars['u32']['output']>;
};

export type Ds_V1_1_1_TokenMetadata = {
  __typename?: 'ds_v1_1_1_TokenMetadata';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lifecycle?: Maybe<Ds_V1_1_1_Lifecycle>;
  minted_by?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_1_1_TokenMetadataConnection = {
  __typename?: 'ds_v1_1_1_TokenMetadataConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_TokenMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_TokenMetadataEdge = {
  __typename?: 'ds_v1_1_1_TokenMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_TokenMetadata>;
};

export type Ds_V1_1_1_TokenMetadataOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_TokenMetadataOrderField;
};

export enum Ds_V1_1_1_TokenMetadataOrderField {
  Lifecycle = 'LIFECYCLE',
  MintedBy = 'MINTED_BY',
  PlayerName = 'PLAYER_NAME',
  SettingsId = 'SETTINGS_ID',
  TokenId = 'TOKEN_ID'
}

export type Ds_V1_1_1_TokenMetadataWhereInput = {
  minted_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  token_id?: InputMaybe<Scalars['u64']['input']>;
  token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idGT?: InputMaybe<Scalars['u64']['input']>;
  token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  token_idLT?: InputMaybe<Scalars['u64']['input']>;
  token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_1_TrophyCreation = {
  __typename?: 'ds_v1_1_1_TrophyCreation';
  data?: Maybe<Scalars['ByteArray']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  end?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  group?: Maybe<Scalars['felt252']['output']>;
  hidden?: Maybe<Scalars['bool']['output']>;
  icon?: Maybe<Scalars['felt252']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  index?: Maybe<Scalars['u8']['output']>;
  points?: Maybe<Scalars['u16']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
  tasks?: Maybe<Array<Maybe<Ds_V1_1_1_Task>>>;
  title?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_1_TrophyCreationConnection = {
  __typename?: 'ds_v1_1_1_TrophyCreationConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_TrophyCreationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_TrophyCreationEdge = {
  __typename?: 'ds_v1_1_1_TrophyCreationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_TrophyCreation>;
};

export type Ds_V1_1_1_TrophyCreationOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_TrophyCreationOrderField;
};

export enum Ds_V1_1_1_TrophyCreationOrderField {
  Data = 'DATA',
  Description = 'DESCRIPTION',
  End = 'END',
  Group = 'GROUP',
  Hidden = 'HIDDEN',
  Icon = 'ICON',
  Id = 'ID',
  Index = 'INDEX',
  Points = 'POINTS',
  Start = 'START',
  Tasks = 'TASKS',
  Title = 'TITLE'
}

export type Ds_V1_1_1_TrophyCreationWhereInput = {
  data?: InputMaybe<Scalars['ByteArray']['input']>;
  dataEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  end?: InputMaybe<Scalars['u64']['input']>;
  endEQ?: InputMaybe<Scalars['u64']['input']>;
  endGT?: InputMaybe<Scalars['u64']['input']>;
  endGTE?: InputMaybe<Scalars['u64']['input']>;
  endIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endLIKE?: InputMaybe<Scalars['u64']['input']>;
  endLT?: InputMaybe<Scalars['u64']['input']>;
  endLTE?: InputMaybe<Scalars['u64']['input']>;
  endNEQ?: InputMaybe<Scalars['u64']['input']>;
  endNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  group?: InputMaybe<Scalars['felt252']['input']>;
  groupEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupGT?: InputMaybe<Scalars['felt252']['input']>;
  groupGTE?: InputMaybe<Scalars['felt252']['input']>;
  groupIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupLIKE?: InputMaybe<Scalars['felt252']['input']>;
  groupLT?: InputMaybe<Scalars['felt252']['input']>;
  groupLTE?: InputMaybe<Scalars['felt252']['input']>;
  groupNEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  hidden?: InputMaybe<Scalars['bool']['input']>;
  icon?: InputMaybe<Scalars['felt252']['input']>;
  iconEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconGT?: InputMaybe<Scalars['felt252']['input']>;
  iconGTE?: InputMaybe<Scalars['felt252']['input']>;
  iconIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconLIKE?: InputMaybe<Scalars['felt252']['input']>;
  iconLT?: InputMaybe<Scalars['felt252']['input']>;
  iconLTE?: InputMaybe<Scalars['felt252']['input']>;
  iconNEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  id?: InputMaybe<Scalars['felt252']['input']>;
  idEQ?: InputMaybe<Scalars['felt252']['input']>;
  idGT?: InputMaybe<Scalars['felt252']['input']>;
  idGTE?: InputMaybe<Scalars['felt252']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  idLT?: InputMaybe<Scalars['felt252']['input']>;
  idLTE?: InputMaybe<Scalars['felt252']['input']>;
  idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  index?: InputMaybe<Scalars['u8']['input']>;
  indexEQ?: InputMaybe<Scalars['u8']['input']>;
  indexGT?: InputMaybe<Scalars['u8']['input']>;
  indexGTE?: InputMaybe<Scalars['u8']['input']>;
  indexIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexLIKE?: InputMaybe<Scalars['u8']['input']>;
  indexLT?: InputMaybe<Scalars['u8']['input']>;
  indexLTE?: InputMaybe<Scalars['u8']['input']>;
  indexNEQ?: InputMaybe<Scalars['u8']['input']>;
  indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  points?: InputMaybe<Scalars['u16']['input']>;
  pointsEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsGT?: InputMaybe<Scalars['u16']['input']>;
  pointsGTE?: InputMaybe<Scalars['u16']['input']>;
  pointsIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsLIKE?: InputMaybe<Scalars['u16']['input']>;
  pointsLT?: InputMaybe<Scalars['u16']['input']>;
  pointsLTE?: InputMaybe<Scalars['u16']['input']>;
  pointsNEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  start?: InputMaybe<Scalars['u64']['input']>;
  startEQ?: InputMaybe<Scalars['u64']['input']>;
  startGT?: InputMaybe<Scalars['u64']['input']>;
  startGTE?: InputMaybe<Scalars['u64']['input']>;
  startIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startLIKE?: InputMaybe<Scalars['u64']['input']>;
  startLT?: InputMaybe<Scalars['u64']['input']>;
  startLTE?: InputMaybe<Scalars['u64']['input']>;
  startNEQ?: InputMaybe<Scalars['u64']['input']>;
  startNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  title?: InputMaybe<Scalars['felt252']['input']>;
  titleEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleGT?: InputMaybe<Scalars['felt252']['input']>;
  titleGTE?: InputMaybe<Scalars['felt252']['input']>;
  titleIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleLIKE?: InputMaybe<Scalars['felt252']['input']>;
  titleLT?: InputMaybe<Scalars['felt252']['input']>;
  titleLTE?: InputMaybe<Scalars['felt252']['input']>;
  titleNEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_1_TrophyProgression = {
  __typename?: 'ds_v1_1_1_TrophyProgression';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  player_id?: Maybe<Scalars['felt252']['output']>;
  task_id?: Maybe<Scalars['felt252']['output']>;
  time?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_1_1_TrophyProgressionConnection = {
  __typename?: 'ds_v1_1_1_TrophyProgressionConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_TrophyProgressionEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_TrophyProgressionEdge = {
  __typename?: 'ds_v1_1_1_TrophyProgressionEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_TrophyProgression>;
};

export type Ds_V1_1_1_TrophyProgressionOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_TrophyProgressionOrderField;
};

export enum Ds_V1_1_1_TrophyProgressionOrderField {
  Count = 'COUNT',
  PlayerId = 'PLAYER_ID',
  TaskId = 'TASK_ID',
  Time = 'TIME'
}

export type Ds_V1_1_1_TrophyProgressionWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  player_id?: InputMaybe<Scalars['felt252']['input']>;
  player_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idGT?: InputMaybe<Scalars['felt252']['input']>;
  player_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_idLT?: InputMaybe<Scalars['felt252']['input']>;
  player_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_id?: InputMaybe<Scalars['felt252']['input']>;
  task_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idGT?: InputMaybe<Scalars['felt252']['input']>;
  task_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_idLT?: InputMaybe<Scalars['felt252']['input']>;
  task_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  time?: InputMaybe<Scalars['u64']['input']>;
  timeEQ?: InputMaybe<Scalars['u64']['input']>;
  timeGT?: InputMaybe<Scalars['u64']['input']>;
  timeGTE?: InputMaybe<Scalars['u64']['input']>;
  timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  timeLT?: InputMaybe<Scalars['u64']['input']>;
  timeLTE?: InputMaybe<Scalars['u64']['input']>;
  timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_1_WorldConfig = {
  __typename?: 'ds_v1_1_1_WorldConfig';
  config_id?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_count?: Maybe<Scalars['u256']['output']>;
  game_token_address?: Maybe<Scalars['ContractAddress']['output']>;
};

export type Ds_V1_1_1_WorldConfigConnection = {
  __typename?: 'ds_v1_1_1_WorldConfigConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_1_WorldConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_1_WorldConfigEdge = {
  __typename?: 'ds_v1_1_1_WorldConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_1_WorldConfig>;
};

export type Ds_V1_1_1_WorldConfigOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_1_WorldConfigOrderField;
};

export enum Ds_V1_1_1_WorldConfigOrderField {
  ConfigId = 'CONFIG_ID',
  GameCount = 'GAME_COUNT',
  GameTokenAddress = 'GAME_TOKEN_ADDRESS'
}

export type Ds_V1_1_1_WorldConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u8']['input']>;
  config_idEQ?: InputMaybe<Scalars['u8']['input']>;
  config_idGT?: InputMaybe<Scalars['u8']['input']>;
  config_idGTE?: InputMaybe<Scalars['u8']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  config_idLT?: InputMaybe<Scalars['u8']['input']>;
  config_idLTE?: InputMaybe<Scalars['u8']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_count?: InputMaybe<Scalars['u256']['input']>;
  game_countEQ?: InputMaybe<Scalars['u256']['input']>;
  game_countGT?: InputMaybe<Scalars['u256']['input']>;
  game_countGTE?: InputMaybe<Scalars['u256']['input']>;
  game_countIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  game_countLIKE?: InputMaybe<Scalars['u256']['input']>;
  game_countLT?: InputMaybe<Scalars['u256']['input']>;
  game_countLTE?: InputMaybe<Scalars['u256']['input']>;
  game_countNEQ?: InputMaybe<Scalars['u256']['input']>;
  game_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  game_countNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  game_token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  game_token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  game_token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
};

export type Ds_V1_1_2_Battle = {
  __typename?: 'ds_v1_1_2_Battle';
  battle_effects?: Maybe<Ds_V1_1_2_BattleEffects>;
  battle_id?: Maybe<Scalars['u16']['output']>;
  deck?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hand?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  hero?: Maybe<Ds_V1_1_2_Hero>;
  monster?: Maybe<Ds_V1_1_2_Monster>;
  round?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_2_BattleConnection = {
  __typename?: 'ds_v1_1_2_BattleConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_BattleEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_BattleEdge = {
  __typename?: 'ds_v1_1_2_BattleEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_Battle>;
};

export type Ds_V1_1_2_BattleEffects = {
  __typename?: 'ds_v1_1_2_BattleEffects';
  enemy_marks?: Maybe<Scalars['u8']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  next_brute_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_brute_health_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_health_bonus?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_2_BattleOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_BattleOrderField;
};

export enum Ds_V1_1_2_BattleOrderField {
  BattleEffects = 'BATTLE_EFFECTS',
  BattleId = 'BATTLE_ID',
  Deck = 'DECK',
  GameId = 'GAME_ID',
  Hand = 'HAND',
  Hero = 'HERO',
  Monster = 'MONSTER',
  Round = 'ROUND'
}

export type Ds_V1_1_2_BattleWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  round?: InputMaybe<Scalars['u8']['input']>;
  roundEQ?: InputMaybe<Scalars['u8']['input']>;
  roundGT?: InputMaybe<Scalars['u8']['input']>;
  roundGTE?: InputMaybe<Scalars['u8']['input']>;
  roundIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundLIKE?: InputMaybe<Scalars['u8']['input']>;
  roundLT?: InputMaybe<Scalars['u8']['input']>;
  roundLTE?: InputMaybe<Scalars['u8']['input']>;
  roundNEQ?: InputMaybe<Scalars['u8']['input']>;
  roundNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_2_Board = {
  __typename?: 'ds_v1_1_2_Board';
  battle_id?: Maybe<Scalars['u16']['output']>;
  creature1?: Maybe<Ds_V1_1_2_Creature>;
  creature2?: Maybe<Ds_V1_1_2_Creature>;
  creature3?: Maybe<Ds_V1_1_2_Creature>;
  creature4?: Maybe<Ds_V1_1_2_Creature>;
  creature5?: Maybe<Ds_V1_1_2_Creature>;
  creature6?: Maybe<Ds_V1_1_2_Creature>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_1_2_BoardConnection = {
  __typename?: 'ds_v1_1_2_BoardConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_BoardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_BoardEdge = {
  __typename?: 'ds_v1_1_2_BoardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_Board>;
};

export type Ds_V1_1_2_BoardOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_BoardOrderField;
};

export enum Ds_V1_1_2_BoardOrderField {
  BattleId = 'BATTLE_ID',
  Creature1 = 'CREATURE1',
  Creature2 = 'CREATURE2',
  Creature3 = 'CREATURE3',
  Creature4 = 'CREATURE4',
  Creature5 = 'CREATURE5',
  Creature6 = 'CREATURE6',
  GameId = 'GAME_ID'
}

export type Ds_V1_1_2_BoardWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_2_Creature = {
  __typename?: 'ds_v1_1_2_Creature';
  attack?: Maybe<Scalars['u8']['output']>;
  card_id?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_2_Draft = {
  __typename?: 'ds_v1_1_2_Draft';
  cards?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  options?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
};

export type Ds_V1_1_2_DraftConnection = {
  __typename?: 'ds_v1_1_2_DraftConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_DraftEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_DraftEdge = {
  __typename?: 'ds_v1_1_2_DraftEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_Draft>;
};

export type Ds_V1_1_2_DraftOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_DraftOrderField;
};

export enum Ds_V1_1_2_DraftOrderField {
  Cards = 'CARDS',
  GameId = 'GAME_ID',
  Options = 'OPTIONS'
}

export type Ds_V1_1_2_DraftWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_2_Game = {
  __typename?: 'ds_v1_1_2_Game';
  action_count?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hero_health?: Maybe<Scalars['u8']['output']>;
  hero_xp?: Maybe<Scalars['u16']['output']>;
  last_node_id?: Maybe<Scalars['u8']['output']>;
  map_depth?: Maybe<Scalars['u8']['output']>;
  map_level?: Maybe<Scalars['u8']['output']>;
  monsters_slain?: Maybe<Scalars['u16']['output']>;
  state?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_2_GameActionEvent = {
  __typename?: 'ds_v1_1_2_GameActionEvent';
  count?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  tx_hash?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_2_GameActionEventConnection = {
  __typename?: 'ds_v1_1_2_GameActionEventConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_GameActionEventEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_GameActionEventEdge = {
  __typename?: 'ds_v1_1_2_GameActionEventEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_GameActionEvent>;
};

export type Ds_V1_1_2_GameActionEventOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_GameActionEventOrderField;
};

export enum Ds_V1_1_2_GameActionEventOrderField {
  Count = 'COUNT',
  GameId = 'GAME_ID',
  TxHash = 'TX_HASH'
}

export type Ds_V1_1_2_GameActionEventWhereInput = {
  count?: InputMaybe<Scalars['u16']['input']>;
  countEQ?: InputMaybe<Scalars['u16']['input']>;
  countGT?: InputMaybe<Scalars['u16']['input']>;
  countGTE?: InputMaybe<Scalars['u16']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u16']['input']>;
  countLT?: InputMaybe<Scalars['u16']['input']>;
  countLTE?: InputMaybe<Scalars['u16']['input']>;
  countNEQ?: InputMaybe<Scalars['u16']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  tx_hash?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashEQ?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashGT?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashGTE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  tx_hashLIKE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashLT?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashLTE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashNEQ?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  tx_hashNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_2_GameConnection = {
  __typename?: 'ds_v1_1_2_GameConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_GameEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_GameCounter = {
  __typename?: 'ds_v1_1_2_GameCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_2_GameCounterConnection = {
  __typename?: 'ds_v1_1_2_GameCounterConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_GameCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_GameCounterEdge = {
  __typename?: 'ds_v1_1_2_GameCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_GameCounter>;
};

export type Ds_V1_1_2_GameCounterOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_GameCounterOrderField;
};

export enum Ds_V1_1_2_GameCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Ds_V1_1_2_GameCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_2_GameEdge = {
  __typename?: 'ds_v1_1_2_GameEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_Game>;
};

export type Ds_V1_1_2_GameEffects = {
  __typename?: 'ds_v1_1_2_GameEffects';
  all_attack?: Maybe<Scalars['u8']['output']>;
  brute_attack?: Maybe<Scalars['u8']['output']>;
  brute_health?: Maybe<Scalars['u8']['output']>;
  card_draw?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  first_attack?: Maybe<Scalars['u8']['output']>;
  first_creature_cost?: Maybe<Scalars['u8']['output']>;
  first_health?: Maybe<Scalars['u8']['output']>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hero_card_heal?: Maybe<Scalars['bool']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  hunter_attack?: Maybe<Scalars['u8']['output']>;
  hunter_health?: Maybe<Scalars['u8']['output']>;
  magical_attack?: Maybe<Scalars['u8']['output']>;
  magical_health?: Maybe<Scalars['u8']['output']>;
  play_creature_heal?: Maybe<Scalars['u8']['output']>;
  start_bonus_energy?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_2_GameEffectsConnection = {
  __typename?: 'ds_v1_1_2_GameEffectsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_GameEffectsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_GameEffectsEdge = {
  __typename?: 'ds_v1_1_2_GameEffectsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_GameEffects>;
};

export type Ds_V1_1_2_GameEffectsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_GameEffectsOrderField;
};

export enum Ds_V1_1_2_GameEffectsOrderField {
  AllAttack = 'ALL_ATTACK',
  BruteAttack = 'BRUTE_ATTACK',
  BruteHealth = 'BRUTE_HEALTH',
  CardDraw = 'CARD_DRAW',
  FirstAttack = 'FIRST_ATTACK',
  FirstCreatureCost = 'FIRST_CREATURE_COST',
  FirstHealth = 'FIRST_HEALTH',
  GameId = 'GAME_ID',
  HeroCardHeal = 'HERO_CARD_HEAL',
  HeroDmgReduction = 'HERO_DMG_REDUCTION',
  HunterAttack = 'HUNTER_ATTACK',
  HunterHealth = 'HUNTER_HEALTH',
  MagicalAttack = 'MAGICAL_ATTACK',
  MagicalHealth = 'MAGICAL_HEALTH',
  PlayCreatureHeal = 'PLAY_CREATURE_HEAL',
  StartBonusEnergy = 'START_BONUS_ENERGY'
}

export type Ds_V1_1_2_GameEffectsWhereInput = {
  all_attack?: InputMaybe<Scalars['u8']['input']>;
  all_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackGT?: InputMaybe<Scalars['u8']['input']>;
  all_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  all_attackLT?: InputMaybe<Scalars['u8']['input']>;
  all_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attack?: InputMaybe<Scalars['u8']['input']>;
  brute_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_health?: InputMaybe<Scalars['u8']['input']>;
  brute_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_draw?: InputMaybe<Scalars['u8']['input']>;
  card_drawEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawGT?: InputMaybe<Scalars['u8']['input']>;
  card_drawGTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_drawLT?: InputMaybe<Scalars['u8']['input']>;
  card_drawLTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawNEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attack?: InputMaybe<Scalars['u8']['input']>;
  first_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackGT?: InputMaybe<Scalars['u8']['input']>;
  first_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attackLT?: InputMaybe<Scalars['u8']['input']>;
  first_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_cost?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costEQ?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costGT?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costGTE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_creature_costLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costLT?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costLTE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_creature_costNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_health?: InputMaybe<Scalars['u8']['input']>;
  first_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthGT?: InputMaybe<Scalars['u8']['input']>;
  first_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_healthLT?: InputMaybe<Scalars['u8']['input']>;
  first_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  hero_card_heal?: InputMaybe<Scalars['bool']['input']>;
  hero_dmg_reduction?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attack?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_health?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attack?: InputMaybe<Scalars['u8']['input']>;
  magical_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_health?: InputMaybe<Scalars['u8']['input']>;
  magical_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_heal?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energy?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_2_GameMetadata = {
  __typename?: 'ds_v1_1_2_GameMetadata';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  creator_address?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  developer?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  genre?: Maybe<Scalars['felt252']['output']>;
  image?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  publisher?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_2_GameMetadataConnection = {
  __typename?: 'ds_v1_1_2_GameMetadataConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_GameMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_GameMetadataEdge = {
  __typename?: 'ds_v1_1_2_GameMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_GameMetadata>;
};

export type Ds_V1_1_2_GameMetadataOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_GameMetadataOrderField;
};

export enum Ds_V1_1_2_GameMetadataOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  CreatorAddress = 'CREATOR_ADDRESS',
  Description = 'DESCRIPTION',
  Developer = 'DEVELOPER',
  Genre = 'GENRE',
  Image = 'IMAGE',
  Name = 'NAME',
  Publisher = 'PUBLISHER'
}

export type Ds_V1_1_2_GameMetadataWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  developer?: InputMaybe<Scalars['felt252']['input']>;
  developerEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerGT?: InputMaybe<Scalars['felt252']['input']>;
  developerGTE?: InputMaybe<Scalars['felt252']['input']>;
  developerIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerLIKE?: InputMaybe<Scalars['felt252']['input']>;
  developerLT?: InputMaybe<Scalars['felt252']['input']>;
  developerLTE?: InputMaybe<Scalars['felt252']['input']>;
  developerNEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genre?: InputMaybe<Scalars['felt252']['input']>;
  genreEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreGT?: InputMaybe<Scalars['felt252']['input']>;
  genreGTE?: InputMaybe<Scalars['felt252']['input']>;
  genreIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genreLT?: InputMaybe<Scalars['felt252']['input']>;
  genreLTE?: InputMaybe<Scalars['felt252']['input']>;
  genreNEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  image?: InputMaybe<Scalars['ByteArray']['input']>;
  imageEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisher?: InputMaybe<Scalars['felt252']['input']>;
  publisherEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherGT?: InputMaybe<Scalars['felt252']['input']>;
  publisherGTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisherLT?: InputMaybe<Scalars['felt252']['input']>;
  publisherLTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherNEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_2_GameOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_GameOrderField;
};

export enum Ds_V1_1_2_GameOrderField {
  ActionCount = 'ACTION_COUNT',
  GameId = 'GAME_ID',
  HeroHealth = 'HERO_HEALTH',
  HeroXp = 'HERO_XP',
  LastNodeId = 'LAST_NODE_ID',
  MapDepth = 'MAP_DEPTH',
  MapLevel = 'MAP_LEVEL',
  MonstersSlain = 'MONSTERS_SLAIN',
  State = 'STATE'
}

export type Ds_V1_1_2_GameSettings = {
  __typename?: 'ds_v1_1_2_GameSettings';
  draft_size?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  include_spells?: Maybe<Scalars['bool']['output']>;
  max_energy?: Maybe<Scalars['u8']['output']>;
  max_hand_size?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  start_energy?: Maybe<Scalars['u8']['output']>;
  start_hand_size?: Maybe<Scalars['u8']['output']>;
  start_health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_2_GameSettingsConnection = {
  __typename?: 'ds_v1_1_2_GameSettingsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_GameSettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_GameSettingsEdge = {
  __typename?: 'ds_v1_1_2_GameSettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_GameSettings>;
};

export type Ds_V1_1_2_GameSettingsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_GameSettingsOrderField;
};

export enum Ds_V1_1_2_GameSettingsOrderField {
  DraftSize = 'DRAFT_SIZE',
  IncludeSpells = 'INCLUDE_SPELLS',
  MaxEnergy = 'MAX_ENERGY',
  MaxHandSize = 'MAX_HAND_SIZE',
  SettingsId = 'SETTINGS_ID',
  StartEnergy = 'START_ENERGY',
  StartHandSize = 'START_HAND_SIZE',
  StartHealth = 'START_HEALTH'
}

export type Ds_V1_1_2_GameSettingsWhereInput = {
  draft_size?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  draft_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  draft_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  include_spells?: InputMaybe<Scalars['bool']['input']>;
  max_energy?: InputMaybe<Scalars['u8']['input']>;
  max_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  max_energyGT?: InputMaybe<Scalars['u8']['input']>;
  max_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  max_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_energyLT?: InputMaybe<Scalars['u8']['input']>;
  max_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  max_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_size?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_hand_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_hand_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  start_energy?: InputMaybe<Scalars['u8']['input']>;
  start_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_size?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_hand_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_hand_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_health?: InputMaybe<Scalars['u8']['input']>;
  start_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  start_healthGT?: InputMaybe<Scalars['u8']['input']>;
  start_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  start_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_healthLT?: InputMaybe<Scalars['u8']['input']>;
  start_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  start_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_2_GameWhereInput = {
  action_count?: InputMaybe<Scalars['u16']['input']>;
  action_countEQ?: InputMaybe<Scalars['u16']['input']>;
  action_countGT?: InputMaybe<Scalars['u16']['input']>;
  action_countGTE?: InputMaybe<Scalars['u16']['input']>;
  action_countIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  action_countLIKE?: InputMaybe<Scalars['u16']['input']>;
  action_countLT?: InputMaybe<Scalars['u16']['input']>;
  action_countLTE?: InputMaybe<Scalars['u16']['input']>;
  action_countNEQ?: InputMaybe<Scalars['u16']['input']>;
  action_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  action_countNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  hero_health?: InputMaybe<Scalars['u8']['input']>;
  hero_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_xp?: InputMaybe<Scalars['u16']['input']>;
  hero_xpEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpLIKE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  last_node_id?: InputMaybe<Scalars['u8']['input']>;
  last_node_idEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depth?: InputMaybe<Scalars['u8']['input']>;
  map_depthEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthGT?: InputMaybe<Scalars['u8']['input']>;
  map_depthGTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depthLT?: InputMaybe<Scalars['u8']['input']>;
  map_depthLTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_level?: InputMaybe<Scalars['u8']['input']>;
  map_levelEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelGT?: InputMaybe<Scalars['u8']['input']>;
  map_levelGTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_levelLT?: InputMaybe<Scalars['u8']['input']>;
  map_levelLTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  monsters_slain?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainLIKE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  state?: InputMaybe<Scalars['u8']['input']>;
  stateEQ?: InputMaybe<Scalars['u8']['input']>;
  stateGT?: InputMaybe<Scalars['u8']['input']>;
  stateGTE?: InputMaybe<Scalars['u8']['input']>;
  stateIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  stateLIKE?: InputMaybe<Scalars['u8']['input']>;
  stateLT?: InputMaybe<Scalars['u8']['input']>;
  stateLTE?: InputMaybe<Scalars['u8']['input']>;
  stateNEQ?: InputMaybe<Scalars['u8']['input']>;
  stateNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  stateNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_2_Hero = {
  __typename?: 'ds_v1_1_2_Hero';
  energy?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_2_Lifecycle = {
  __typename?: 'ds_v1_1_2_Lifecycle';
  end?: Maybe<Ds_V1_1_2_Optionu64>;
  mint?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Ds_V1_1_2_Optionu64>;
};

export type Ds_V1_1_2_Map = {
  __typename?: 'ds_v1_1_2_Map';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  level?: Maybe<Scalars['u8']['output']>;
  seed?: Maybe<Scalars['u128']['output']>;
};

export type Ds_V1_1_2_MapConnection = {
  __typename?: 'ds_v1_1_2_MapConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_MapEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_MapEdge = {
  __typename?: 'ds_v1_1_2_MapEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_Map>;
};

export type Ds_V1_1_2_MapOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_MapOrderField;
};

export enum Ds_V1_1_2_MapOrderField {
  GameId = 'GAME_ID',
  Level = 'LEVEL',
  Seed = 'SEED'
}

export type Ds_V1_1_2_MapWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  level?: InputMaybe<Scalars['u8']['input']>;
  levelEQ?: InputMaybe<Scalars['u8']['input']>;
  levelGT?: InputMaybe<Scalars['u8']['input']>;
  levelGTE?: InputMaybe<Scalars['u8']['input']>;
  levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  levelLT?: InputMaybe<Scalars['u8']['input']>;
  levelLTE?: InputMaybe<Scalars['u8']['input']>;
  levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  seed?: InputMaybe<Scalars['u128']['input']>;
  seedEQ?: InputMaybe<Scalars['u128']['input']>;
  seedGT?: InputMaybe<Scalars['u128']['input']>;
  seedGTE?: InputMaybe<Scalars['u128']['input']>;
  seedIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedLIKE?: InputMaybe<Scalars['u128']['input']>;
  seedLT?: InputMaybe<Scalars['u128']['input']>;
  seedLTE?: InputMaybe<Scalars['u128']['input']>;
  seedNEQ?: InputMaybe<Scalars['u128']['input']>;
  seedNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type Ds_V1_1_2_Monster = {
  __typename?: 'ds_v1_1_2_Monster';
  attack?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
  monster_id?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_2_Optionu64 = {
  __typename?: 'ds_v1_1_2_Optionu64';
  Some?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Ds_V1_1_2_Score = {
  __typename?: 'ds_v1_1_2_Score';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  score?: Maybe<Scalars['u32']['output']>;
};

export type Ds_V1_1_2_ScoreConnection = {
  __typename?: 'ds_v1_1_2_ScoreConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_ScoreEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_ScoreEdge = {
  __typename?: 'ds_v1_1_2_ScoreEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_Score>;
};

export type Ds_V1_1_2_ScoreOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_ScoreOrderField;
};

export enum Ds_V1_1_2_ScoreOrderField {
  GameId = 'GAME_ID',
  Score = 'SCORE'
}

export type Ds_V1_1_2_ScoreWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  score?: InputMaybe<Scalars['u32']['input']>;
  scoreEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreGT?: InputMaybe<Scalars['u32']['input']>;
  scoreGTE?: InputMaybe<Scalars['u32']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u32']['input']>;
  scoreLT?: InputMaybe<Scalars['u32']['input']>;
  scoreLTE?: InputMaybe<Scalars['u32']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Ds_V1_1_2_Settings = {
  __typename?: 'ds_v1_1_2_Settings';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  value?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_2_SettingsConnection = {
  __typename?: 'ds_v1_1_2_SettingsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_SettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_SettingsCounter = {
  __typename?: 'ds_v1_1_2_SettingsCounter';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_2_SettingsCounterConnection = {
  __typename?: 'ds_v1_1_2_SettingsCounterConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_SettingsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_SettingsCounterEdge = {
  __typename?: 'ds_v1_1_2_SettingsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_SettingsCounter>;
};

export type Ds_V1_1_2_SettingsCounterOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_SettingsCounterOrderField;
};

export enum Ds_V1_1_2_SettingsCounterOrderField {
  Count = 'COUNT',
  Id = 'ID'
}

export type Ds_V1_1_2_SettingsCounterWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  id?: InputMaybe<Scalars['felt252']['input']>;
  idEQ?: InputMaybe<Scalars['felt252']['input']>;
  idGT?: InputMaybe<Scalars['felt252']['input']>;
  idGTE?: InputMaybe<Scalars['felt252']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  idLT?: InputMaybe<Scalars['felt252']['input']>;
  idLTE?: InputMaybe<Scalars['felt252']['input']>;
  idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_2_SettingsDetails = {
  __typename?: 'ds_v1_1_2_SettingsDetails';
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_2_SettingsDetailsConnection = {
  __typename?: 'ds_v1_1_2_SettingsDetailsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_SettingsDetailsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_SettingsDetailsEdge = {
  __typename?: 'ds_v1_1_2_SettingsDetailsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_SettingsDetails>;
};

export type Ds_V1_1_2_SettingsDetailsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_SettingsDetailsOrderField;
};

export enum Ds_V1_1_2_SettingsDetailsOrderField {
  Description = 'DESCRIPTION',
  Exists = 'EXISTS',
  Id = 'ID',
  Name = 'NAME'
}

export type Ds_V1_1_2_SettingsDetailsWhereInput = {
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_2_SettingsEdge = {
  __typename?: 'ds_v1_1_2_SettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_Settings>;
};

export type Ds_V1_1_2_SettingsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_SettingsOrderField;
};

export enum Ds_V1_1_2_SettingsOrderField {
  Id = 'ID',
  Name = 'NAME',
  Value = 'VALUE'
}

export type Ds_V1_1_2_SettingsWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  value?: InputMaybe<Scalars['felt252']['input']>;
  valueEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueGT?: InputMaybe<Scalars['felt252']['input']>;
  valueGTE?: InputMaybe<Scalars['felt252']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['felt252']['input']>;
  valueLT?: InputMaybe<Scalars['felt252']['input']>;
  valueLTE?: InputMaybe<Scalars['felt252']['input']>;
  valueNEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_2_Task = {
  __typename?: 'ds_v1_1_2_Task';
  description?: Maybe<Scalars['ByteArray']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  total?: Maybe<Scalars['u32']['output']>;
};

export type Ds_V1_1_2_TokenMetadata = {
  __typename?: 'ds_v1_1_2_TokenMetadata';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lifecycle?: Maybe<Ds_V1_1_2_Lifecycle>;
  minted_by?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_1_2_TokenMetadataConnection = {
  __typename?: 'ds_v1_1_2_TokenMetadataConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_TokenMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_TokenMetadataEdge = {
  __typename?: 'ds_v1_1_2_TokenMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_TokenMetadata>;
};

export type Ds_V1_1_2_TokenMetadataOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_TokenMetadataOrderField;
};

export enum Ds_V1_1_2_TokenMetadataOrderField {
  Lifecycle = 'LIFECYCLE',
  MintedBy = 'MINTED_BY',
  PlayerName = 'PLAYER_NAME',
  SettingsId = 'SETTINGS_ID',
  TokenId = 'TOKEN_ID'
}

export type Ds_V1_1_2_TokenMetadataWhereInput = {
  minted_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  token_id?: InputMaybe<Scalars['u64']['input']>;
  token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idGT?: InputMaybe<Scalars['u64']['input']>;
  token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  token_idLT?: InputMaybe<Scalars['u64']['input']>;
  token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_2_TrophyCreation = {
  __typename?: 'ds_v1_1_2_TrophyCreation';
  data?: Maybe<Scalars['ByteArray']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  end?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  group?: Maybe<Scalars['felt252']['output']>;
  hidden?: Maybe<Scalars['bool']['output']>;
  icon?: Maybe<Scalars['felt252']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  index?: Maybe<Scalars['u8']['output']>;
  points?: Maybe<Scalars['u16']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
  tasks?: Maybe<Array<Maybe<Ds_V1_1_2_Task>>>;
  title?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_2_TrophyCreationConnection = {
  __typename?: 'ds_v1_1_2_TrophyCreationConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_TrophyCreationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_TrophyCreationEdge = {
  __typename?: 'ds_v1_1_2_TrophyCreationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_TrophyCreation>;
};

export type Ds_V1_1_2_TrophyCreationOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_TrophyCreationOrderField;
};

export enum Ds_V1_1_2_TrophyCreationOrderField {
  Data = 'DATA',
  Description = 'DESCRIPTION',
  End = 'END',
  Group = 'GROUP',
  Hidden = 'HIDDEN',
  Icon = 'ICON',
  Id = 'ID',
  Index = 'INDEX',
  Points = 'POINTS',
  Start = 'START',
  Tasks = 'TASKS',
  Title = 'TITLE'
}

export type Ds_V1_1_2_TrophyCreationWhereInput = {
  data?: InputMaybe<Scalars['ByteArray']['input']>;
  dataEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  end?: InputMaybe<Scalars['u64']['input']>;
  endEQ?: InputMaybe<Scalars['u64']['input']>;
  endGT?: InputMaybe<Scalars['u64']['input']>;
  endGTE?: InputMaybe<Scalars['u64']['input']>;
  endIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endLIKE?: InputMaybe<Scalars['u64']['input']>;
  endLT?: InputMaybe<Scalars['u64']['input']>;
  endLTE?: InputMaybe<Scalars['u64']['input']>;
  endNEQ?: InputMaybe<Scalars['u64']['input']>;
  endNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  group?: InputMaybe<Scalars['felt252']['input']>;
  groupEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupGT?: InputMaybe<Scalars['felt252']['input']>;
  groupGTE?: InputMaybe<Scalars['felt252']['input']>;
  groupIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupLIKE?: InputMaybe<Scalars['felt252']['input']>;
  groupLT?: InputMaybe<Scalars['felt252']['input']>;
  groupLTE?: InputMaybe<Scalars['felt252']['input']>;
  groupNEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  hidden?: InputMaybe<Scalars['bool']['input']>;
  icon?: InputMaybe<Scalars['felt252']['input']>;
  iconEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconGT?: InputMaybe<Scalars['felt252']['input']>;
  iconGTE?: InputMaybe<Scalars['felt252']['input']>;
  iconIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconLIKE?: InputMaybe<Scalars['felt252']['input']>;
  iconLT?: InputMaybe<Scalars['felt252']['input']>;
  iconLTE?: InputMaybe<Scalars['felt252']['input']>;
  iconNEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  id?: InputMaybe<Scalars['felt252']['input']>;
  idEQ?: InputMaybe<Scalars['felt252']['input']>;
  idGT?: InputMaybe<Scalars['felt252']['input']>;
  idGTE?: InputMaybe<Scalars['felt252']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  idLT?: InputMaybe<Scalars['felt252']['input']>;
  idLTE?: InputMaybe<Scalars['felt252']['input']>;
  idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  index?: InputMaybe<Scalars['u8']['input']>;
  indexEQ?: InputMaybe<Scalars['u8']['input']>;
  indexGT?: InputMaybe<Scalars['u8']['input']>;
  indexGTE?: InputMaybe<Scalars['u8']['input']>;
  indexIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexLIKE?: InputMaybe<Scalars['u8']['input']>;
  indexLT?: InputMaybe<Scalars['u8']['input']>;
  indexLTE?: InputMaybe<Scalars['u8']['input']>;
  indexNEQ?: InputMaybe<Scalars['u8']['input']>;
  indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  points?: InputMaybe<Scalars['u16']['input']>;
  pointsEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsGT?: InputMaybe<Scalars['u16']['input']>;
  pointsGTE?: InputMaybe<Scalars['u16']['input']>;
  pointsIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsLIKE?: InputMaybe<Scalars['u16']['input']>;
  pointsLT?: InputMaybe<Scalars['u16']['input']>;
  pointsLTE?: InputMaybe<Scalars['u16']['input']>;
  pointsNEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  start?: InputMaybe<Scalars['u64']['input']>;
  startEQ?: InputMaybe<Scalars['u64']['input']>;
  startGT?: InputMaybe<Scalars['u64']['input']>;
  startGTE?: InputMaybe<Scalars['u64']['input']>;
  startIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startLIKE?: InputMaybe<Scalars['u64']['input']>;
  startLT?: InputMaybe<Scalars['u64']['input']>;
  startLTE?: InputMaybe<Scalars['u64']['input']>;
  startNEQ?: InputMaybe<Scalars['u64']['input']>;
  startNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  title?: InputMaybe<Scalars['felt252']['input']>;
  titleEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleGT?: InputMaybe<Scalars['felt252']['input']>;
  titleGTE?: InputMaybe<Scalars['felt252']['input']>;
  titleIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleLIKE?: InputMaybe<Scalars['felt252']['input']>;
  titleLT?: InputMaybe<Scalars['felt252']['input']>;
  titleLTE?: InputMaybe<Scalars['felt252']['input']>;
  titleNEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_2_TrophyProgression = {
  __typename?: 'ds_v1_1_2_TrophyProgression';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  player_id?: Maybe<Scalars['felt252']['output']>;
  task_id?: Maybe<Scalars['felt252']['output']>;
  time?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_1_2_TrophyProgressionConnection = {
  __typename?: 'ds_v1_1_2_TrophyProgressionConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_TrophyProgressionEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_TrophyProgressionEdge = {
  __typename?: 'ds_v1_1_2_TrophyProgressionEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_TrophyProgression>;
};

export type Ds_V1_1_2_TrophyProgressionOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_TrophyProgressionOrderField;
};

export enum Ds_V1_1_2_TrophyProgressionOrderField {
  Count = 'COUNT',
  PlayerId = 'PLAYER_ID',
  TaskId = 'TASK_ID',
  Time = 'TIME'
}

export type Ds_V1_1_2_TrophyProgressionWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  player_id?: InputMaybe<Scalars['felt252']['input']>;
  player_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idGT?: InputMaybe<Scalars['felt252']['input']>;
  player_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_idLT?: InputMaybe<Scalars['felt252']['input']>;
  player_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_id?: InputMaybe<Scalars['felt252']['input']>;
  task_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idGT?: InputMaybe<Scalars['felt252']['input']>;
  task_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_idLT?: InputMaybe<Scalars['felt252']['input']>;
  task_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  time?: InputMaybe<Scalars['u64']['input']>;
  timeEQ?: InputMaybe<Scalars['u64']['input']>;
  timeGT?: InputMaybe<Scalars['u64']['input']>;
  timeGTE?: InputMaybe<Scalars['u64']['input']>;
  timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  timeLT?: InputMaybe<Scalars['u64']['input']>;
  timeLTE?: InputMaybe<Scalars['u64']['input']>;
  timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_2_WorldConfig = {
  __typename?: 'ds_v1_1_2_WorldConfig';
  config_id?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_count?: Maybe<Scalars['u256']['output']>;
  game_token_address?: Maybe<Scalars['ContractAddress']['output']>;
};

export type Ds_V1_1_2_WorldConfigConnection = {
  __typename?: 'ds_v1_1_2_WorldConfigConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_2_WorldConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_2_WorldConfigEdge = {
  __typename?: 'ds_v1_1_2_WorldConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_2_WorldConfig>;
};

export type Ds_V1_1_2_WorldConfigOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_2_WorldConfigOrderField;
};

export enum Ds_V1_1_2_WorldConfigOrderField {
  ConfigId = 'CONFIG_ID',
  GameCount = 'GAME_COUNT',
  GameTokenAddress = 'GAME_TOKEN_ADDRESS'
}

export type Ds_V1_1_2_WorldConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u8']['input']>;
  config_idEQ?: InputMaybe<Scalars['u8']['input']>;
  config_idGT?: InputMaybe<Scalars['u8']['input']>;
  config_idGTE?: InputMaybe<Scalars['u8']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  config_idLT?: InputMaybe<Scalars['u8']['input']>;
  config_idLTE?: InputMaybe<Scalars['u8']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_count?: InputMaybe<Scalars['u256']['input']>;
  game_countEQ?: InputMaybe<Scalars['u256']['input']>;
  game_countGT?: InputMaybe<Scalars['u256']['input']>;
  game_countGTE?: InputMaybe<Scalars['u256']['input']>;
  game_countIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  game_countLIKE?: InputMaybe<Scalars['u256']['input']>;
  game_countLT?: InputMaybe<Scalars['u256']['input']>;
  game_countLTE?: InputMaybe<Scalars['u256']['input']>;
  game_countNEQ?: InputMaybe<Scalars['u256']['input']>;
  game_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  game_countNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  game_token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  game_token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  game_token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
};

export type Ds_V1_1_3_Battle = {
  __typename?: 'ds_v1_1_3_Battle';
  battle_effects?: Maybe<Ds_V1_1_3_BattleEffects>;
  battle_id?: Maybe<Scalars['u16']['output']>;
  deck?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hand?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  hero?: Maybe<Ds_V1_1_3_Hero>;
  monster?: Maybe<Ds_V1_1_3_Monster>;
  round?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_3_BattleConnection = {
  __typename?: 'ds_v1_1_3_BattleConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_BattleEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_BattleEdge = {
  __typename?: 'ds_v1_1_3_BattleEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_Battle>;
};

export type Ds_V1_1_3_BattleEffects = {
  __typename?: 'ds_v1_1_3_BattleEffects';
  enemy_marks?: Maybe<Scalars['u8']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  next_brute_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_brute_health_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_health_bonus?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_3_BattleOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_BattleOrderField;
};

export enum Ds_V1_1_3_BattleOrderField {
  BattleEffects = 'BATTLE_EFFECTS',
  BattleId = 'BATTLE_ID',
  Deck = 'DECK',
  GameId = 'GAME_ID',
  Hand = 'HAND',
  Hero = 'HERO',
  Monster = 'MONSTER',
  Round = 'ROUND'
}

export type Ds_V1_1_3_BattleWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  round?: InputMaybe<Scalars['u8']['input']>;
  roundEQ?: InputMaybe<Scalars['u8']['input']>;
  roundGT?: InputMaybe<Scalars['u8']['input']>;
  roundGTE?: InputMaybe<Scalars['u8']['input']>;
  roundIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundLIKE?: InputMaybe<Scalars['u8']['input']>;
  roundLT?: InputMaybe<Scalars['u8']['input']>;
  roundLTE?: InputMaybe<Scalars['u8']['input']>;
  roundNEQ?: InputMaybe<Scalars['u8']['input']>;
  roundNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_3_Board = {
  __typename?: 'ds_v1_1_3_Board';
  battle_id?: Maybe<Scalars['u16']['output']>;
  creature1?: Maybe<Ds_V1_1_3_Creature>;
  creature2?: Maybe<Ds_V1_1_3_Creature>;
  creature3?: Maybe<Ds_V1_1_3_Creature>;
  creature4?: Maybe<Ds_V1_1_3_Creature>;
  creature5?: Maybe<Ds_V1_1_3_Creature>;
  creature6?: Maybe<Ds_V1_1_3_Creature>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_1_3_BoardConnection = {
  __typename?: 'ds_v1_1_3_BoardConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_BoardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_BoardEdge = {
  __typename?: 'ds_v1_1_3_BoardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_Board>;
};

export type Ds_V1_1_3_BoardOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_BoardOrderField;
};

export enum Ds_V1_1_3_BoardOrderField {
  BattleId = 'BATTLE_ID',
  Creature1 = 'CREATURE1',
  Creature2 = 'CREATURE2',
  Creature3 = 'CREATURE3',
  Creature4 = 'CREATURE4',
  Creature5 = 'CREATURE5',
  Creature6 = 'CREATURE6',
  GameId = 'GAME_ID'
}

export type Ds_V1_1_3_BoardWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_3_Creature = {
  __typename?: 'ds_v1_1_3_Creature';
  attack?: Maybe<Scalars['u8']['output']>;
  card_id?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_3_Draft = {
  __typename?: 'ds_v1_1_3_Draft';
  cards?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  options?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
};

export type Ds_V1_1_3_DraftConnection = {
  __typename?: 'ds_v1_1_3_DraftConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_DraftEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_DraftEdge = {
  __typename?: 'ds_v1_1_3_DraftEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_Draft>;
};

export type Ds_V1_1_3_DraftOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_DraftOrderField;
};

export enum Ds_V1_1_3_DraftOrderField {
  Cards = 'CARDS',
  GameId = 'GAME_ID',
  Options = 'OPTIONS'
}

export type Ds_V1_1_3_DraftWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_3_Game = {
  __typename?: 'ds_v1_1_3_Game';
  action_count?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hero_health?: Maybe<Scalars['u8']['output']>;
  hero_xp?: Maybe<Scalars['u16']['output']>;
  last_node_id?: Maybe<Scalars['u8']['output']>;
  map_depth?: Maybe<Scalars['u8']['output']>;
  map_level?: Maybe<Scalars['u8']['output']>;
  monsters_slain?: Maybe<Scalars['u16']['output']>;
  state?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_3_GameActionEvent = {
  __typename?: 'ds_v1_1_3_GameActionEvent';
  count?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  tx_hash?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_3_GameActionEventConnection = {
  __typename?: 'ds_v1_1_3_GameActionEventConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_GameActionEventEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_GameActionEventEdge = {
  __typename?: 'ds_v1_1_3_GameActionEventEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_GameActionEvent>;
};

export type Ds_V1_1_3_GameActionEventOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_GameActionEventOrderField;
};

export enum Ds_V1_1_3_GameActionEventOrderField {
  Count = 'COUNT',
  GameId = 'GAME_ID',
  TxHash = 'TX_HASH'
}

export type Ds_V1_1_3_GameActionEventWhereInput = {
  count?: InputMaybe<Scalars['u16']['input']>;
  countEQ?: InputMaybe<Scalars['u16']['input']>;
  countGT?: InputMaybe<Scalars['u16']['input']>;
  countGTE?: InputMaybe<Scalars['u16']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u16']['input']>;
  countLT?: InputMaybe<Scalars['u16']['input']>;
  countLTE?: InputMaybe<Scalars['u16']['input']>;
  countNEQ?: InputMaybe<Scalars['u16']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  tx_hash?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashEQ?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashGT?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashGTE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  tx_hashLIKE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashLT?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashLTE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashNEQ?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  tx_hashNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_3_GameConnection = {
  __typename?: 'ds_v1_1_3_GameConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_GameEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_GameCounter = {
  __typename?: 'ds_v1_1_3_GameCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_3_GameCounterConnection = {
  __typename?: 'ds_v1_1_3_GameCounterConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_GameCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_GameCounterEdge = {
  __typename?: 'ds_v1_1_3_GameCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_GameCounter>;
};

export type Ds_V1_1_3_GameCounterOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_GameCounterOrderField;
};

export enum Ds_V1_1_3_GameCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Ds_V1_1_3_GameCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_3_GameEdge = {
  __typename?: 'ds_v1_1_3_GameEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_Game>;
};

export type Ds_V1_1_3_GameEffects = {
  __typename?: 'ds_v1_1_3_GameEffects';
  all_attack?: Maybe<Scalars['u8']['output']>;
  brute_attack?: Maybe<Scalars['u8']['output']>;
  brute_health?: Maybe<Scalars['u8']['output']>;
  card_draw?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  first_attack?: Maybe<Scalars['u8']['output']>;
  first_creature_cost?: Maybe<Scalars['u8']['output']>;
  first_health?: Maybe<Scalars['u8']['output']>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hero_card_heal?: Maybe<Scalars['bool']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  hunter_attack?: Maybe<Scalars['u8']['output']>;
  hunter_health?: Maybe<Scalars['u8']['output']>;
  magical_attack?: Maybe<Scalars['u8']['output']>;
  magical_health?: Maybe<Scalars['u8']['output']>;
  play_creature_heal?: Maybe<Scalars['u8']['output']>;
  start_bonus_energy?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_3_GameEffectsConnection = {
  __typename?: 'ds_v1_1_3_GameEffectsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_GameEffectsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_GameEffectsEdge = {
  __typename?: 'ds_v1_1_3_GameEffectsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_GameEffects>;
};

export type Ds_V1_1_3_GameEffectsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_GameEffectsOrderField;
};

export enum Ds_V1_1_3_GameEffectsOrderField {
  AllAttack = 'ALL_ATTACK',
  BruteAttack = 'BRUTE_ATTACK',
  BruteHealth = 'BRUTE_HEALTH',
  CardDraw = 'CARD_DRAW',
  FirstAttack = 'FIRST_ATTACK',
  FirstCreatureCost = 'FIRST_CREATURE_COST',
  FirstHealth = 'FIRST_HEALTH',
  GameId = 'GAME_ID',
  HeroCardHeal = 'HERO_CARD_HEAL',
  HeroDmgReduction = 'HERO_DMG_REDUCTION',
  HunterAttack = 'HUNTER_ATTACK',
  HunterHealth = 'HUNTER_HEALTH',
  MagicalAttack = 'MAGICAL_ATTACK',
  MagicalHealth = 'MAGICAL_HEALTH',
  PlayCreatureHeal = 'PLAY_CREATURE_HEAL',
  StartBonusEnergy = 'START_BONUS_ENERGY'
}

export type Ds_V1_1_3_GameEffectsWhereInput = {
  all_attack?: InputMaybe<Scalars['u8']['input']>;
  all_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackGT?: InputMaybe<Scalars['u8']['input']>;
  all_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  all_attackLT?: InputMaybe<Scalars['u8']['input']>;
  all_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attack?: InputMaybe<Scalars['u8']['input']>;
  brute_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_health?: InputMaybe<Scalars['u8']['input']>;
  brute_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_draw?: InputMaybe<Scalars['u8']['input']>;
  card_drawEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawGT?: InputMaybe<Scalars['u8']['input']>;
  card_drawGTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_drawLT?: InputMaybe<Scalars['u8']['input']>;
  card_drawLTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawNEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attack?: InputMaybe<Scalars['u8']['input']>;
  first_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackGT?: InputMaybe<Scalars['u8']['input']>;
  first_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attackLT?: InputMaybe<Scalars['u8']['input']>;
  first_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_cost?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costEQ?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costGT?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costGTE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_creature_costLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costLT?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costLTE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_creature_costNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_health?: InputMaybe<Scalars['u8']['input']>;
  first_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthGT?: InputMaybe<Scalars['u8']['input']>;
  first_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_healthLT?: InputMaybe<Scalars['u8']['input']>;
  first_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  hero_card_heal?: InputMaybe<Scalars['bool']['input']>;
  hero_dmg_reduction?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attack?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_health?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attack?: InputMaybe<Scalars['u8']['input']>;
  magical_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_health?: InputMaybe<Scalars['u8']['input']>;
  magical_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_heal?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energy?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_3_GameMetadata = {
  __typename?: 'ds_v1_1_3_GameMetadata';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  creator_address?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  developer?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  genre?: Maybe<Scalars['felt252']['output']>;
  image?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  publisher?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_3_GameMetadataConnection = {
  __typename?: 'ds_v1_1_3_GameMetadataConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_GameMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_GameMetadataEdge = {
  __typename?: 'ds_v1_1_3_GameMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_GameMetadata>;
};

export type Ds_V1_1_3_GameMetadataOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_GameMetadataOrderField;
};

export enum Ds_V1_1_3_GameMetadataOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  CreatorAddress = 'CREATOR_ADDRESS',
  Description = 'DESCRIPTION',
  Developer = 'DEVELOPER',
  Genre = 'GENRE',
  Image = 'IMAGE',
  Name = 'NAME',
  Publisher = 'PUBLISHER'
}

export type Ds_V1_1_3_GameMetadataWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  developer?: InputMaybe<Scalars['felt252']['input']>;
  developerEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerGT?: InputMaybe<Scalars['felt252']['input']>;
  developerGTE?: InputMaybe<Scalars['felt252']['input']>;
  developerIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerLIKE?: InputMaybe<Scalars['felt252']['input']>;
  developerLT?: InputMaybe<Scalars['felt252']['input']>;
  developerLTE?: InputMaybe<Scalars['felt252']['input']>;
  developerNEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genre?: InputMaybe<Scalars['felt252']['input']>;
  genreEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreGT?: InputMaybe<Scalars['felt252']['input']>;
  genreGTE?: InputMaybe<Scalars['felt252']['input']>;
  genreIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genreLT?: InputMaybe<Scalars['felt252']['input']>;
  genreLTE?: InputMaybe<Scalars['felt252']['input']>;
  genreNEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  image?: InputMaybe<Scalars['ByteArray']['input']>;
  imageEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisher?: InputMaybe<Scalars['felt252']['input']>;
  publisherEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherGT?: InputMaybe<Scalars['felt252']['input']>;
  publisherGTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisherLT?: InputMaybe<Scalars['felt252']['input']>;
  publisherLTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherNEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_3_GameOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_GameOrderField;
};

export enum Ds_V1_1_3_GameOrderField {
  ActionCount = 'ACTION_COUNT',
  GameId = 'GAME_ID',
  HeroHealth = 'HERO_HEALTH',
  HeroXp = 'HERO_XP',
  LastNodeId = 'LAST_NODE_ID',
  MapDepth = 'MAP_DEPTH',
  MapLevel = 'MAP_LEVEL',
  MonstersSlain = 'MONSTERS_SLAIN',
  State = 'STATE'
}

export type Ds_V1_1_3_GameSettings = {
  __typename?: 'ds_v1_1_3_GameSettings';
  draft_size?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  include_spells?: Maybe<Scalars['bool']['output']>;
  max_energy?: Maybe<Scalars['u8']['output']>;
  max_hand_size?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  start_energy?: Maybe<Scalars['u8']['output']>;
  start_hand_size?: Maybe<Scalars['u8']['output']>;
  start_health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_3_GameSettingsConnection = {
  __typename?: 'ds_v1_1_3_GameSettingsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_GameSettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_GameSettingsEdge = {
  __typename?: 'ds_v1_1_3_GameSettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_GameSettings>;
};

export type Ds_V1_1_3_GameSettingsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_GameSettingsOrderField;
};

export enum Ds_V1_1_3_GameSettingsOrderField {
  DraftSize = 'DRAFT_SIZE',
  IncludeSpells = 'INCLUDE_SPELLS',
  MaxEnergy = 'MAX_ENERGY',
  MaxHandSize = 'MAX_HAND_SIZE',
  SettingsId = 'SETTINGS_ID',
  StartEnergy = 'START_ENERGY',
  StartHandSize = 'START_HAND_SIZE',
  StartHealth = 'START_HEALTH'
}

export type Ds_V1_1_3_GameSettingsWhereInput = {
  draft_size?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  draft_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  draft_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  include_spells?: InputMaybe<Scalars['bool']['input']>;
  max_energy?: InputMaybe<Scalars['u8']['input']>;
  max_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  max_energyGT?: InputMaybe<Scalars['u8']['input']>;
  max_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  max_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_energyLT?: InputMaybe<Scalars['u8']['input']>;
  max_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  max_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_size?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_hand_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_hand_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  start_energy?: InputMaybe<Scalars['u8']['input']>;
  start_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_size?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_hand_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_hand_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_health?: InputMaybe<Scalars['u8']['input']>;
  start_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  start_healthGT?: InputMaybe<Scalars['u8']['input']>;
  start_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  start_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_healthLT?: InputMaybe<Scalars['u8']['input']>;
  start_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  start_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_3_GameWhereInput = {
  action_count?: InputMaybe<Scalars['u16']['input']>;
  action_countEQ?: InputMaybe<Scalars['u16']['input']>;
  action_countGT?: InputMaybe<Scalars['u16']['input']>;
  action_countGTE?: InputMaybe<Scalars['u16']['input']>;
  action_countIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  action_countLIKE?: InputMaybe<Scalars['u16']['input']>;
  action_countLT?: InputMaybe<Scalars['u16']['input']>;
  action_countLTE?: InputMaybe<Scalars['u16']['input']>;
  action_countNEQ?: InputMaybe<Scalars['u16']['input']>;
  action_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  action_countNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  hero_health?: InputMaybe<Scalars['u8']['input']>;
  hero_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_xp?: InputMaybe<Scalars['u16']['input']>;
  hero_xpEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpLIKE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  last_node_id?: InputMaybe<Scalars['u8']['input']>;
  last_node_idEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depth?: InputMaybe<Scalars['u8']['input']>;
  map_depthEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthGT?: InputMaybe<Scalars['u8']['input']>;
  map_depthGTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depthLT?: InputMaybe<Scalars['u8']['input']>;
  map_depthLTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_level?: InputMaybe<Scalars['u8']['input']>;
  map_levelEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelGT?: InputMaybe<Scalars['u8']['input']>;
  map_levelGTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_levelLT?: InputMaybe<Scalars['u8']['input']>;
  map_levelLTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  monsters_slain?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainLIKE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  state?: InputMaybe<Scalars['u8']['input']>;
  stateEQ?: InputMaybe<Scalars['u8']['input']>;
  stateGT?: InputMaybe<Scalars['u8']['input']>;
  stateGTE?: InputMaybe<Scalars['u8']['input']>;
  stateIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  stateLIKE?: InputMaybe<Scalars['u8']['input']>;
  stateLT?: InputMaybe<Scalars['u8']['input']>;
  stateLTE?: InputMaybe<Scalars['u8']['input']>;
  stateNEQ?: InputMaybe<Scalars['u8']['input']>;
  stateNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  stateNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_3_Hero = {
  __typename?: 'ds_v1_1_3_Hero';
  energy?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_3_Lifecycle = {
  __typename?: 'ds_v1_1_3_Lifecycle';
  end?: Maybe<Ds_V1_1_3_Optionu64>;
  mint?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Ds_V1_1_3_Optionu64>;
};

export type Ds_V1_1_3_Map = {
  __typename?: 'ds_v1_1_3_Map';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  level?: Maybe<Scalars['u8']['output']>;
  seed?: Maybe<Scalars['u128']['output']>;
};

export type Ds_V1_1_3_MapConnection = {
  __typename?: 'ds_v1_1_3_MapConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_MapEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_MapEdge = {
  __typename?: 'ds_v1_1_3_MapEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_Map>;
};

export type Ds_V1_1_3_MapOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_MapOrderField;
};

export enum Ds_V1_1_3_MapOrderField {
  GameId = 'GAME_ID',
  Level = 'LEVEL',
  Seed = 'SEED'
}

export type Ds_V1_1_3_MapWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  level?: InputMaybe<Scalars['u8']['input']>;
  levelEQ?: InputMaybe<Scalars['u8']['input']>;
  levelGT?: InputMaybe<Scalars['u8']['input']>;
  levelGTE?: InputMaybe<Scalars['u8']['input']>;
  levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  levelLT?: InputMaybe<Scalars['u8']['input']>;
  levelLTE?: InputMaybe<Scalars['u8']['input']>;
  levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  seed?: InputMaybe<Scalars['u128']['input']>;
  seedEQ?: InputMaybe<Scalars['u128']['input']>;
  seedGT?: InputMaybe<Scalars['u128']['input']>;
  seedGTE?: InputMaybe<Scalars['u128']['input']>;
  seedIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedLIKE?: InputMaybe<Scalars['u128']['input']>;
  seedLT?: InputMaybe<Scalars['u128']['input']>;
  seedLTE?: InputMaybe<Scalars['u128']['input']>;
  seedNEQ?: InputMaybe<Scalars['u128']['input']>;
  seedNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type Ds_V1_1_3_Monster = {
  __typename?: 'ds_v1_1_3_Monster';
  attack?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
  monster_id?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_3_Optionu64 = {
  __typename?: 'ds_v1_1_3_Optionu64';
  Some?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Ds_V1_1_3_Score = {
  __typename?: 'ds_v1_1_3_Score';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  score?: Maybe<Scalars['u32']['output']>;
};

export type Ds_V1_1_3_ScoreConnection = {
  __typename?: 'ds_v1_1_3_ScoreConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_ScoreEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_ScoreEdge = {
  __typename?: 'ds_v1_1_3_ScoreEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_Score>;
};

export type Ds_V1_1_3_ScoreOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_ScoreOrderField;
};

export enum Ds_V1_1_3_ScoreOrderField {
  GameId = 'GAME_ID',
  Score = 'SCORE'
}

export type Ds_V1_1_3_ScoreWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  score?: InputMaybe<Scalars['u32']['input']>;
  scoreEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreGT?: InputMaybe<Scalars['u32']['input']>;
  scoreGTE?: InputMaybe<Scalars['u32']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u32']['input']>;
  scoreLT?: InputMaybe<Scalars['u32']['input']>;
  scoreLTE?: InputMaybe<Scalars['u32']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Ds_V1_1_3_Settings = {
  __typename?: 'ds_v1_1_3_Settings';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  value?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_3_SettingsConnection = {
  __typename?: 'ds_v1_1_3_SettingsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_SettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_SettingsCounter = {
  __typename?: 'ds_v1_1_3_SettingsCounter';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_3_SettingsCounterConnection = {
  __typename?: 'ds_v1_1_3_SettingsCounterConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_SettingsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_SettingsCounterEdge = {
  __typename?: 'ds_v1_1_3_SettingsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_SettingsCounter>;
};

export type Ds_V1_1_3_SettingsCounterOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_SettingsCounterOrderField;
};

export enum Ds_V1_1_3_SettingsCounterOrderField {
  Count = 'COUNT',
  Id = 'ID'
}

export type Ds_V1_1_3_SettingsCounterWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  id?: InputMaybe<Scalars['felt252']['input']>;
  idEQ?: InputMaybe<Scalars['felt252']['input']>;
  idGT?: InputMaybe<Scalars['felt252']['input']>;
  idGTE?: InputMaybe<Scalars['felt252']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  idLT?: InputMaybe<Scalars['felt252']['input']>;
  idLTE?: InputMaybe<Scalars['felt252']['input']>;
  idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_3_SettingsDetails = {
  __typename?: 'ds_v1_1_3_SettingsDetails';
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_3_SettingsDetailsConnection = {
  __typename?: 'ds_v1_1_3_SettingsDetailsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_SettingsDetailsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_SettingsDetailsEdge = {
  __typename?: 'ds_v1_1_3_SettingsDetailsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_SettingsDetails>;
};

export type Ds_V1_1_3_SettingsDetailsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_SettingsDetailsOrderField;
};

export enum Ds_V1_1_3_SettingsDetailsOrderField {
  Description = 'DESCRIPTION',
  Exists = 'EXISTS',
  Id = 'ID',
  Name = 'NAME'
}

export type Ds_V1_1_3_SettingsDetailsWhereInput = {
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_3_SettingsEdge = {
  __typename?: 'ds_v1_1_3_SettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_Settings>;
};

export type Ds_V1_1_3_SettingsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_SettingsOrderField;
};

export enum Ds_V1_1_3_SettingsOrderField {
  Id = 'ID',
  Name = 'NAME',
  Value = 'VALUE'
}

export type Ds_V1_1_3_SettingsWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  value?: InputMaybe<Scalars['felt252']['input']>;
  valueEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueGT?: InputMaybe<Scalars['felt252']['input']>;
  valueGTE?: InputMaybe<Scalars['felt252']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['felt252']['input']>;
  valueLT?: InputMaybe<Scalars['felt252']['input']>;
  valueLTE?: InputMaybe<Scalars['felt252']['input']>;
  valueNEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_3_Task = {
  __typename?: 'ds_v1_1_3_Task';
  description?: Maybe<Scalars['ByteArray']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  total?: Maybe<Scalars['u32']['output']>;
};

export type Ds_V1_1_3_TokenMetadata = {
  __typename?: 'ds_v1_1_3_TokenMetadata';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lifecycle?: Maybe<Ds_V1_1_3_Lifecycle>;
  minted_by?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_1_3_TokenMetadataConnection = {
  __typename?: 'ds_v1_1_3_TokenMetadataConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_TokenMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_TokenMetadataEdge = {
  __typename?: 'ds_v1_1_3_TokenMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_TokenMetadata>;
};

export type Ds_V1_1_3_TokenMetadataOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_TokenMetadataOrderField;
};

export enum Ds_V1_1_3_TokenMetadataOrderField {
  Lifecycle = 'LIFECYCLE',
  MintedBy = 'MINTED_BY',
  PlayerName = 'PLAYER_NAME',
  SettingsId = 'SETTINGS_ID',
  TokenId = 'TOKEN_ID'
}

export type Ds_V1_1_3_TokenMetadataWhereInput = {
  minted_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  token_id?: InputMaybe<Scalars['u64']['input']>;
  token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idGT?: InputMaybe<Scalars['u64']['input']>;
  token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  token_idLT?: InputMaybe<Scalars['u64']['input']>;
  token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_3_TrophyCreation = {
  __typename?: 'ds_v1_1_3_TrophyCreation';
  data?: Maybe<Scalars['ByteArray']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  end?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  group?: Maybe<Scalars['felt252']['output']>;
  hidden?: Maybe<Scalars['bool']['output']>;
  icon?: Maybe<Scalars['felt252']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  index?: Maybe<Scalars['u8']['output']>;
  points?: Maybe<Scalars['u16']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
  tasks?: Maybe<Array<Maybe<Ds_V1_1_3_Task>>>;
  title?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_3_TrophyCreationConnection = {
  __typename?: 'ds_v1_1_3_TrophyCreationConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_TrophyCreationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_TrophyCreationEdge = {
  __typename?: 'ds_v1_1_3_TrophyCreationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_TrophyCreation>;
};

export type Ds_V1_1_3_TrophyCreationOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_TrophyCreationOrderField;
};

export enum Ds_V1_1_3_TrophyCreationOrderField {
  Data = 'DATA',
  Description = 'DESCRIPTION',
  End = 'END',
  Group = 'GROUP',
  Hidden = 'HIDDEN',
  Icon = 'ICON',
  Id = 'ID',
  Index = 'INDEX',
  Points = 'POINTS',
  Start = 'START',
  Tasks = 'TASKS',
  Title = 'TITLE'
}

export type Ds_V1_1_3_TrophyCreationWhereInput = {
  data?: InputMaybe<Scalars['ByteArray']['input']>;
  dataEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  end?: InputMaybe<Scalars['u64']['input']>;
  endEQ?: InputMaybe<Scalars['u64']['input']>;
  endGT?: InputMaybe<Scalars['u64']['input']>;
  endGTE?: InputMaybe<Scalars['u64']['input']>;
  endIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endLIKE?: InputMaybe<Scalars['u64']['input']>;
  endLT?: InputMaybe<Scalars['u64']['input']>;
  endLTE?: InputMaybe<Scalars['u64']['input']>;
  endNEQ?: InputMaybe<Scalars['u64']['input']>;
  endNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  group?: InputMaybe<Scalars['felt252']['input']>;
  groupEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupGT?: InputMaybe<Scalars['felt252']['input']>;
  groupGTE?: InputMaybe<Scalars['felt252']['input']>;
  groupIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupLIKE?: InputMaybe<Scalars['felt252']['input']>;
  groupLT?: InputMaybe<Scalars['felt252']['input']>;
  groupLTE?: InputMaybe<Scalars['felt252']['input']>;
  groupNEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  hidden?: InputMaybe<Scalars['bool']['input']>;
  icon?: InputMaybe<Scalars['felt252']['input']>;
  iconEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconGT?: InputMaybe<Scalars['felt252']['input']>;
  iconGTE?: InputMaybe<Scalars['felt252']['input']>;
  iconIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconLIKE?: InputMaybe<Scalars['felt252']['input']>;
  iconLT?: InputMaybe<Scalars['felt252']['input']>;
  iconLTE?: InputMaybe<Scalars['felt252']['input']>;
  iconNEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  id?: InputMaybe<Scalars['felt252']['input']>;
  idEQ?: InputMaybe<Scalars['felt252']['input']>;
  idGT?: InputMaybe<Scalars['felt252']['input']>;
  idGTE?: InputMaybe<Scalars['felt252']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  idLT?: InputMaybe<Scalars['felt252']['input']>;
  idLTE?: InputMaybe<Scalars['felt252']['input']>;
  idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  index?: InputMaybe<Scalars['u8']['input']>;
  indexEQ?: InputMaybe<Scalars['u8']['input']>;
  indexGT?: InputMaybe<Scalars['u8']['input']>;
  indexGTE?: InputMaybe<Scalars['u8']['input']>;
  indexIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexLIKE?: InputMaybe<Scalars['u8']['input']>;
  indexLT?: InputMaybe<Scalars['u8']['input']>;
  indexLTE?: InputMaybe<Scalars['u8']['input']>;
  indexNEQ?: InputMaybe<Scalars['u8']['input']>;
  indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  points?: InputMaybe<Scalars['u16']['input']>;
  pointsEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsGT?: InputMaybe<Scalars['u16']['input']>;
  pointsGTE?: InputMaybe<Scalars['u16']['input']>;
  pointsIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsLIKE?: InputMaybe<Scalars['u16']['input']>;
  pointsLT?: InputMaybe<Scalars['u16']['input']>;
  pointsLTE?: InputMaybe<Scalars['u16']['input']>;
  pointsNEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  start?: InputMaybe<Scalars['u64']['input']>;
  startEQ?: InputMaybe<Scalars['u64']['input']>;
  startGT?: InputMaybe<Scalars['u64']['input']>;
  startGTE?: InputMaybe<Scalars['u64']['input']>;
  startIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startLIKE?: InputMaybe<Scalars['u64']['input']>;
  startLT?: InputMaybe<Scalars['u64']['input']>;
  startLTE?: InputMaybe<Scalars['u64']['input']>;
  startNEQ?: InputMaybe<Scalars['u64']['input']>;
  startNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  title?: InputMaybe<Scalars['felt252']['input']>;
  titleEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleGT?: InputMaybe<Scalars['felt252']['input']>;
  titleGTE?: InputMaybe<Scalars['felt252']['input']>;
  titleIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleLIKE?: InputMaybe<Scalars['felt252']['input']>;
  titleLT?: InputMaybe<Scalars['felt252']['input']>;
  titleLTE?: InputMaybe<Scalars['felt252']['input']>;
  titleNEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_3_TrophyProgression = {
  __typename?: 'ds_v1_1_3_TrophyProgression';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  player_id?: Maybe<Scalars['felt252']['output']>;
  task_id?: Maybe<Scalars['felt252']['output']>;
  time?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_1_3_TrophyProgressionConnection = {
  __typename?: 'ds_v1_1_3_TrophyProgressionConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_TrophyProgressionEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_TrophyProgressionEdge = {
  __typename?: 'ds_v1_1_3_TrophyProgressionEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_TrophyProgression>;
};

export type Ds_V1_1_3_TrophyProgressionOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_TrophyProgressionOrderField;
};

export enum Ds_V1_1_3_TrophyProgressionOrderField {
  Count = 'COUNT',
  PlayerId = 'PLAYER_ID',
  TaskId = 'TASK_ID',
  Time = 'TIME'
}

export type Ds_V1_1_3_TrophyProgressionWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  player_id?: InputMaybe<Scalars['felt252']['input']>;
  player_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idGT?: InputMaybe<Scalars['felt252']['input']>;
  player_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_idLT?: InputMaybe<Scalars['felt252']['input']>;
  player_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_id?: InputMaybe<Scalars['felt252']['input']>;
  task_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idGT?: InputMaybe<Scalars['felt252']['input']>;
  task_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_idLT?: InputMaybe<Scalars['felt252']['input']>;
  task_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  time?: InputMaybe<Scalars['u64']['input']>;
  timeEQ?: InputMaybe<Scalars['u64']['input']>;
  timeGT?: InputMaybe<Scalars['u64']['input']>;
  timeGTE?: InputMaybe<Scalars['u64']['input']>;
  timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  timeLT?: InputMaybe<Scalars['u64']['input']>;
  timeLTE?: InputMaybe<Scalars['u64']['input']>;
  timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_3_WorldConfig = {
  __typename?: 'ds_v1_1_3_WorldConfig';
  config_id?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_count?: Maybe<Scalars['u256']['output']>;
  game_token_address?: Maybe<Scalars['ContractAddress']['output']>;
};

export type Ds_V1_1_3_WorldConfigConnection = {
  __typename?: 'ds_v1_1_3_WorldConfigConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_3_WorldConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_3_WorldConfigEdge = {
  __typename?: 'ds_v1_1_3_WorldConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_3_WorldConfig>;
};

export type Ds_V1_1_3_WorldConfigOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_3_WorldConfigOrderField;
};

export enum Ds_V1_1_3_WorldConfigOrderField {
  ConfigId = 'CONFIG_ID',
  GameCount = 'GAME_COUNT',
  GameTokenAddress = 'GAME_TOKEN_ADDRESS'
}

export type Ds_V1_1_3_WorldConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u8']['input']>;
  config_idEQ?: InputMaybe<Scalars['u8']['input']>;
  config_idGT?: InputMaybe<Scalars['u8']['input']>;
  config_idGTE?: InputMaybe<Scalars['u8']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  config_idLT?: InputMaybe<Scalars['u8']['input']>;
  config_idLTE?: InputMaybe<Scalars['u8']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_count?: InputMaybe<Scalars['u256']['input']>;
  game_countEQ?: InputMaybe<Scalars['u256']['input']>;
  game_countGT?: InputMaybe<Scalars['u256']['input']>;
  game_countGTE?: InputMaybe<Scalars['u256']['input']>;
  game_countIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  game_countLIKE?: InputMaybe<Scalars['u256']['input']>;
  game_countLT?: InputMaybe<Scalars['u256']['input']>;
  game_countLTE?: InputMaybe<Scalars['u256']['input']>;
  game_countNEQ?: InputMaybe<Scalars['u256']['input']>;
  game_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  game_countNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  game_token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  game_token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  game_token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
};

export type Ds_V1_1_4_Battle = {
  __typename?: 'ds_v1_1_4_Battle';
  battle_effects?: Maybe<Ds_V1_1_4_BattleEffects>;
  battle_id?: Maybe<Scalars['u16']['output']>;
  deck?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hand?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  hero?: Maybe<Ds_V1_1_4_Hero>;
  monster?: Maybe<Ds_V1_1_4_Monster>;
  round?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_4_BattleConnection = {
  __typename?: 'ds_v1_1_4_BattleConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_BattleEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_BattleEdge = {
  __typename?: 'ds_v1_1_4_BattleEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_Battle>;
};

export type Ds_V1_1_4_BattleEffects = {
  __typename?: 'ds_v1_1_4_BattleEffects';
  enemy_marks?: Maybe<Scalars['u8']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  next_brute_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_brute_health_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_health_bonus?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_4_BattleOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_BattleOrderField;
};

export enum Ds_V1_1_4_BattleOrderField {
  BattleEffects = 'BATTLE_EFFECTS',
  BattleId = 'BATTLE_ID',
  Deck = 'DECK',
  GameId = 'GAME_ID',
  Hand = 'HAND',
  Hero = 'HERO',
  Monster = 'MONSTER',
  Round = 'ROUND'
}

export type Ds_V1_1_4_BattleWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  round?: InputMaybe<Scalars['u8']['input']>;
  roundEQ?: InputMaybe<Scalars['u8']['input']>;
  roundGT?: InputMaybe<Scalars['u8']['input']>;
  roundGTE?: InputMaybe<Scalars['u8']['input']>;
  roundIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundLIKE?: InputMaybe<Scalars['u8']['input']>;
  roundLT?: InputMaybe<Scalars['u8']['input']>;
  roundLTE?: InputMaybe<Scalars['u8']['input']>;
  roundNEQ?: InputMaybe<Scalars['u8']['input']>;
  roundNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_4_Board = {
  __typename?: 'ds_v1_1_4_Board';
  battle_id?: Maybe<Scalars['u16']['output']>;
  creature1?: Maybe<Ds_V1_1_4_Creature>;
  creature2?: Maybe<Ds_V1_1_4_Creature>;
  creature3?: Maybe<Ds_V1_1_4_Creature>;
  creature4?: Maybe<Ds_V1_1_4_Creature>;
  creature5?: Maybe<Ds_V1_1_4_Creature>;
  creature6?: Maybe<Ds_V1_1_4_Creature>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_1_4_BoardConnection = {
  __typename?: 'ds_v1_1_4_BoardConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_BoardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_BoardEdge = {
  __typename?: 'ds_v1_1_4_BoardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_Board>;
};

export type Ds_V1_1_4_BoardOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_BoardOrderField;
};

export enum Ds_V1_1_4_BoardOrderField {
  BattleId = 'BATTLE_ID',
  Creature1 = 'CREATURE1',
  Creature2 = 'CREATURE2',
  Creature3 = 'CREATURE3',
  Creature4 = 'CREATURE4',
  Creature5 = 'CREATURE5',
  Creature6 = 'CREATURE6',
  GameId = 'GAME_ID'
}

export type Ds_V1_1_4_BoardWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_4_Creature = {
  __typename?: 'ds_v1_1_4_Creature';
  attack?: Maybe<Scalars['u8']['output']>;
  card_id?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_4_Draft = {
  __typename?: 'ds_v1_1_4_Draft';
  cards?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  options?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
};

export type Ds_V1_1_4_DraftConnection = {
  __typename?: 'ds_v1_1_4_DraftConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_DraftEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_DraftEdge = {
  __typename?: 'ds_v1_1_4_DraftEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_Draft>;
};

export type Ds_V1_1_4_DraftOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_DraftOrderField;
};

export enum Ds_V1_1_4_DraftOrderField {
  Cards = 'CARDS',
  GameId = 'GAME_ID',
  Options = 'OPTIONS'
}

export type Ds_V1_1_4_DraftWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_4_Game = {
  __typename?: 'ds_v1_1_4_Game';
  action_count?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hero_health?: Maybe<Scalars['u8']['output']>;
  hero_xp?: Maybe<Scalars['u16']['output']>;
  last_node_id?: Maybe<Scalars['u8']['output']>;
  map_depth?: Maybe<Scalars['u8']['output']>;
  map_level?: Maybe<Scalars['u8']['output']>;
  monsters_slain?: Maybe<Scalars['u16']['output']>;
  state?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_4_GameActionEvent = {
  __typename?: 'ds_v1_1_4_GameActionEvent';
  count?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  tx_hash?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_4_GameActionEventConnection = {
  __typename?: 'ds_v1_1_4_GameActionEventConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_GameActionEventEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_GameActionEventEdge = {
  __typename?: 'ds_v1_1_4_GameActionEventEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_GameActionEvent>;
};

export type Ds_V1_1_4_GameActionEventOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_GameActionEventOrderField;
};

export enum Ds_V1_1_4_GameActionEventOrderField {
  Count = 'COUNT',
  GameId = 'GAME_ID',
  TxHash = 'TX_HASH'
}

export type Ds_V1_1_4_GameActionEventWhereInput = {
  count?: InputMaybe<Scalars['u16']['input']>;
  countEQ?: InputMaybe<Scalars['u16']['input']>;
  countGT?: InputMaybe<Scalars['u16']['input']>;
  countGTE?: InputMaybe<Scalars['u16']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u16']['input']>;
  countLT?: InputMaybe<Scalars['u16']['input']>;
  countLTE?: InputMaybe<Scalars['u16']['input']>;
  countNEQ?: InputMaybe<Scalars['u16']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  tx_hash?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashEQ?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashGT?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashGTE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  tx_hashLIKE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashLT?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashLTE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashNEQ?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  tx_hashNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_4_GameConnection = {
  __typename?: 'ds_v1_1_4_GameConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_GameEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_GameCounter = {
  __typename?: 'ds_v1_1_4_GameCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_4_GameCounterConnection = {
  __typename?: 'ds_v1_1_4_GameCounterConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_GameCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_GameCounterEdge = {
  __typename?: 'ds_v1_1_4_GameCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_GameCounter>;
};

export type Ds_V1_1_4_GameCounterOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_GameCounterOrderField;
};

export enum Ds_V1_1_4_GameCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Ds_V1_1_4_GameCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_4_GameEdge = {
  __typename?: 'ds_v1_1_4_GameEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_Game>;
};

export type Ds_V1_1_4_GameEffects = {
  __typename?: 'ds_v1_1_4_GameEffects';
  all_attack?: Maybe<Scalars['u8']['output']>;
  brute_attack?: Maybe<Scalars['u8']['output']>;
  brute_health?: Maybe<Scalars['u8']['output']>;
  card_draw?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  first_attack?: Maybe<Scalars['u8']['output']>;
  first_creature_cost?: Maybe<Scalars['u8']['output']>;
  first_health?: Maybe<Scalars['u8']['output']>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hero_card_heal?: Maybe<Scalars['bool']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  hunter_attack?: Maybe<Scalars['u8']['output']>;
  hunter_health?: Maybe<Scalars['u8']['output']>;
  magical_attack?: Maybe<Scalars['u8']['output']>;
  magical_health?: Maybe<Scalars['u8']['output']>;
  play_creature_heal?: Maybe<Scalars['u8']['output']>;
  start_bonus_energy?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_4_GameEffectsConnection = {
  __typename?: 'ds_v1_1_4_GameEffectsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_GameEffectsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_GameEffectsEdge = {
  __typename?: 'ds_v1_1_4_GameEffectsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_GameEffects>;
};

export type Ds_V1_1_4_GameEffectsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_GameEffectsOrderField;
};

export enum Ds_V1_1_4_GameEffectsOrderField {
  AllAttack = 'ALL_ATTACK',
  BruteAttack = 'BRUTE_ATTACK',
  BruteHealth = 'BRUTE_HEALTH',
  CardDraw = 'CARD_DRAW',
  FirstAttack = 'FIRST_ATTACK',
  FirstCreatureCost = 'FIRST_CREATURE_COST',
  FirstHealth = 'FIRST_HEALTH',
  GameId = 'GAME_ID',
  HeroCardHeal = 'HERO_CARD_HEAL',
  HeroDmgReduction = 'HERO_DMG_REDUCTION',
  HunterAttack = 'HUNTER_ATTACK',
  HunterHealth = 'HUNTER_HEALTH',
  MagicalAttack = 'MAGICAL_ATTACK',
  MagicalHealth = 'MAGICAL_HEALTH',
  PlayCreatureHeal = 'PLAY_CREATURE_HEAL',
  StartBonusEnergy = 'START_BONUS_ENERGY'
}

export type Ds_V1_1_4_GameEffectsWhereInput = {
  all_attack?: InputMaybe<Scalars['u8']['input']>;
  all_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackGT?: InputMaybe<Scalars['u8']['input']>;
  all_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  all_attackLT?: InputMaybe<Scalars['u8']['input']>;
  all_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attack?: InputMaybe<Scalars['u8']['input']>;
  brute_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_health?: InputMaybe<Scalars['u8']['input']>;
  brute_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_draw?: InputMaybe<Scalars['u8']['input']>;
  card_drawEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawGT?: InputMaybe<Scalars['u8']['input']>;
  card_drawGTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_drawLT?: InputMaybe<Scalars['u8']['input']>;
  card_drawLTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawNEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attack?: InputMaybe<Scalars['u8']['input']>;
  first_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackGT?: InputMaybe<Scalars['u8']['input']>;
  first_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attackLT?: InputMaybe<Scalars['u8']['input']>;
  first_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_cost?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costEQ?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costGT?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costGTE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_creature_costLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costLT?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costLTE?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_creature_costNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_creature_costNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_health?: InputMaybe<Scalars['u8']['input']>;
  first_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthGT?: InputMaybe<Scalars['u8']['input']>;
  first_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_healthLT?: InputMaybe<Scalars['u8']['input']>;
  first_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  hero_card_heal?: InputMaybe<Scalars['bool']['input']>;
  hero_dmg_reduction?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attack?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_health?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attack?: InputMaybe<Scalars['u8']['input']>;
  magical_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_health?: InputMaybe<Scalars['u8']['input']>;
  magical_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_heal?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energy?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_4_GameMetadata = {
  __typename?: 'ds_v1_1_4_GameMetadata';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  creator_address?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  developer?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  genre?: Maybe<Scalars['felt252']['output']>;
  image?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  publisher?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_4_GameMetadataConnection = {
  __typename?: 'ds_v1_1_4_GameMetadataConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_GameMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_GameMetadataEdge = {
  __typename?: 'ds_v1_1_4_GameMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_GameMetadata>;
};

export type Ds_V1_1_4_GameMetadataOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_GameMetadataOrderField;
};

export enum Ds_V1_1_4_GameMetadataOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  CreatorAddress = 'CREATOR_ADDRESS',
  Description = 'DESCRIPTION',
  Developer = 'DEVELOPER',
  Genre = 'GENRE',
  Image = 'IMAGE',
  Name = 'NAME',
  Publisher = 'PUBLISHER'
}

export type Ds_V1_1_4_GameMetadataWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  developer?: InputMaybe<Scalars['felt252']['input']>;
  developerEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerGT?: InputMaybe<Scalars['felt252']['input']>;
  developerGTE?: InputMaybe<Scalars['felt252']['input']>;
  developerIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerLIKE?: InputMaybe<Scalars['felt252']['input']>;
  developerLT?: InputMaybe<Scalars['felt252']['input']>;
  developerLTE?: InputMaybe<Scalars['felt252']['input']>;
  developerNEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genre?: InputMaybe<Scalars['felt252']['input']>;
  genreEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreGT?: InputMaybe<Scalars['felt252']['input']>;
  genreGTE?: InputMaybe<Scalars['felt252']['input']>;
  genreIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genreLT?: InputMaybe<Scalars['felt252']['input']>;
  genreLTE?: InputMaybe<Scalars['felt252']['input']>;
  genreNEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  image?: InputMaybe<Scalars['ByteArray']['input']>;
  imageEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisher?: InputMaybe<Scalars['felt252']['input']>;
  publisherEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherGT?: InputMaybe<Scalars['felt252']['input']>;
  publisherGTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisherLT?: InputMaybe<Scalars['felt252']['input']>;
  publisherLTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherNEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_4_GameOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_GameOrderField;
};

export enum Ds_V1_1_4_GameOrderField {
  ActionCount = 'ACTION_COUNT',
  GameId = 'GAME_ID',
  HeroHealth = 'HERO_HEALTH',
  HeroXp = 'HERO_XP',
  LastNodeId = 'LAST_NODE_ID',
  MapDepth = 'MAP_DEPTH',
  MapLevel = 'MAP_LEVEL',
  MonstersSlain = 'MONSTERS_SLAIN',
  State = 'STATE'
}

export type Ds_V1_1_4_GameSettings = {
  __typename?: 'ds_v1_1_4_GameSettings';
  draft_size?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  include_spells?: Maybe<Scalars['bool']['output']>;
  max_energy?: Maybe<Scalars['u8']['output']>;
  max_hand_size?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  start_energy?: Maybe<Scalars['u8']['output']>;
  start_hand_size?: Maybe<Scalars['u8']['output']>;
  start_health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_4_GameSettingsConnection = {
  __typename?: 'ds_v1_1_4_GameSettingsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_GameSettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_GameSettingsEdge = {
  __typename?: 'ds_v1_1_4_GameSettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_GameSettings>;
};

export type Ds_V1_1_4_GameSettingsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_GameSettingsOrderField;
};

export enum Ds_V1_1_4_GameSettingsOrderField {
  DraftSize = 'DRAFT_SIZE',
  IncludeSpells = 'INCLUDE_SPELLS',
  MaxEnergy = 'MAX_ENERGY',
  MaxHandSize = 'MAX_HAND_SIZE',
  SettingsId = 'SETTINGS_ID',
  StartEnergy = 'START_ENERGY',
  StartHandSize = 'START_HAND_SIZE',
  StartHealth = 'START_HEALTH'
}

export type Ds_V1_1_4_GameSettingsWhereInput = {
  draft_size?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  draft_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  draft_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  include_spells?: InputMaybe<Scalars['bool']['input']>;
  max_energy?: InputMaybe<Scalars['u8']['input']>;
  max_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  max_energyGT?: InputMaybe<Scalars['u8']['input']>;
  max_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  max_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_energyLT?: InputMaybe<Scalars['u8']['input']>;
  max_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  max_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_size?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_hand_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_hand_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  start_energy?: InputMaybe<Scalars['u8']['input']>;
  start_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_size?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_hand_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_hand_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_health?: InputMaybe<Scalars['u8']['input']>;
  start_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  start_healthGT?: InputMaybe<Scalars['u8']['input']>;
  start_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  start_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_healthLT?: InputMaybe<Scalars['u8']['input']>;
  start_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  start_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_4_GameWhereInput = {
  action_count?: InputMaybe<Scalars['u16']['input']>;
  action_countEQ?: InputMaybe<Scalars['u16']['input']>;
  action_countGT?: InputMaybe<Scalars['u16']['input']>;
  action_countGTE?: InputMaybe<Scalars['u16']['input']>;
  action_countIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  action_countLIKE?: InputMaybe<Scalars['u16']['input']>;
  action_countLT?: InputMaybe<Scalars['u16']['input']>;
  action_countLTE?: InputMaybe<Scalars['u16']['input']>;
  action_countNEQ?: InputMaybe<Scalars['u16']['input']>;
  action_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  action_countNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  hero_health?: InputMaybe<Scalars['u8']['input']>;
  hero_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_xp?: InputMaybe<Scalars['u16']['input']>;
  hero_xpEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpLIKE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  last_node_id?: InputMaybe<Scalars['u8']['input']>;
  last_node_idEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depth?: InputMaybe<Scalars['u8']['input']>;
  map_depthEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthGT?: InputMaybe<Scalars['u8']['input']>;
  map_depthGTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depthLT?: InputMaybe<Scalars['u8']['input']>;
  map_depthLTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_level?: InputMaybe<Scalars['u8']['input']>;
  map_levelEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelGT?: InputMaybe<Scalars['u8']['input']>;
  map_levelGTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_levelLT?: InputMaybe<Scalars['u8']['input']>;
  map_levelLTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  monsters_slain?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainLIKE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  state?: InputMaybe<Scalars['u8']['input']>;
  stateEQ?: InputMaybe<Scalars['u8']['input']>;
  stateGT?: InputMaybe<Scalars['u8']['input']>;
  stateGTE?: InputMaybe<Scalars['u8']['input']>;
  stateIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  stateLIKE?: InputMaybe<Scalars['u8']['input']>;
  stateLT?: InputMaybe<Scalars['u8']['input']>;
  stateLTE?: InputMaybe<Scalars['u8']['input']>;
  stateNEQ?: InputMaybe<Scalars['u8']['input']>;
  stateNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  stateNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_1_4_Hero = {
  __typename?: 'ds_v1_1_4_Hero';
  energy?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_4_Lifecycle = {
  __typename?: 'ds_v1_1_4_Lifecycle';
  end?: Maybe<Ds_V1_1_4_Optionu64>;
  mint?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Ds_V1_1_4_Optionu64>;
};

export type Ds_V1_1_4_Map = {
  __typename?: 'ds_v1_1_4_Map';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  level?: Maybe<Scalars['u8']['output']>;
  seed?: Maybe<Scalars['u128']['output']>;
};

export type Ds_V1_1_4_MapConnection = {
  __typename?: 'ds_v1_1_4_MapConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_MapEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_MapEdge = {
  __typename?: 'ds_v1_1_4_MapEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_Map>;
};

export type Ds_V1_1_4_MapOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_MapOrderField;
};

export enum Ds_V1_1_4_MapOrderField {
  GameId = 'GAME_ID',
  Level = 'LEVEL',
  Seed = 'SEED'
}

export type Ds_V1_1_4_MapWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  level?: InputMaybe<Scalars['u8']['input']>;
  levelEQ?: InputMaybe<Scalars['u8']['input']>;
  levelGT?: InputMaybe<Scalars['u8']['input']>;
  levelGTE?: InputMaybe<Scalars['u8']['input']>;
  levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  levelLT?: InputMaybe<Scalars['u8']['input']>;
  levelLTE?: InputMaybe<Scalars['u8']['input']>;
  levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  seed?: InputMaybe<Scalars['u128']['input']>;
  seedEQ?: InputMaybe<Scalars['u128']['input']>;
  seedGT?: InputMaybe<Scalars['u128']['input']>;
  seedGTE?: InputMaybe<Scalars['u128']['input']>;
  seedIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedLIKE?: InputMaybe<Scalars['u128']['input']>;
  seedLT?: InputMaybe<Scalars['u128']['input']>;
  seedLTE?: InputMaybe<Scalars['u128']['input']>;
  seedNEQ?: InputMaybe<Scalars['u128']['input']>;
  seedNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type Ds_V1_1_4_Monster = {
  __typename?: 'ds_v1_1_4_Monster';
  attack?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
  monster_id?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_1_4_Optionu64 = {
  __typename?: 'ds_v1_1_4_Optionu64';
  Some?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Ds_V1_1_4_Score = {
  __typename?: 'ds_v1_1_4_Score';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  score?: Maybe<Scalars['u32']['output']>;
};

export type Ds_V1_1_4_ScoreConnection = {
  __typename?: 'ds_v1_1_4_ScoreConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_ScoreEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_ScoreEdge = {
  __typename?: 'ds_v1_1_4_ScoreEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_Score>;
};

export type Ds_V1_1_4_ScoreOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_ScoreOrderField;
};

export enum Ds_V1_1_4_ScoreOrderField {
  GameId = 'GAME_ID',
  Score = 'SCORE'
}

export type Ds_V1_1_4_ScoreWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  score?: InputMaybe<Scalars['u32']['input']>;
  scoreEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreGT?: InputMaybe<Scalars['u32']['input']>;
  scoreGTE?: InputMaybe<Scalars['u32']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u32']['input']>;
  scoreLT?: InputMaybe<Scalars['u32']['input']>;
  scoreLTE?: InputMaybe<Scalars['u32']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Ds_V1_1_4_Settings = {
  __typename?: 'ds_v1_1_4_Settings';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  value?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_4_SettingsConnection = {
  __typename?: 'ds_v1_1_4_SettingsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_SettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_SettingsCounter = {
  __typename?: 'ds_v1_1_4_SettingsCounter';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_4_SettingsCounterConnection = {
  __typename?: 'ds_v1_1_4_SettingsCounterConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_SettingsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_SettingsCounterEdge = {
  __typename?: 'ds_v1_1_4_SettingsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_SettingsCounter>;
};

export type Ds_V1_1_4_SettingsCounterOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_SettingsCounterOrderField;
};

export enum Ds_V1_1_4_SettingsCounterOrderField {
  Count = 'COUNT',
  Id = 'ID'
}

export type Ds_V1_1_4_SettingsCounterWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  id?: InputMaybe<Scalars['felt252']['input']>;
  idEQ?: InputMaybe<Scalars['felt252']['input']>;
  idGT?: InputMaybe<Scalars['felt252']['input']>;
  idGTE?: InputMaybe<Scalars['felt252']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  idLT?: InputMaybe<Scalars['felt252']['input']>;
  idLTE?: InputMaybe<Scalars['felt252']['input']>;
  idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_4_SettingsDetails = {
  __typename?: 'ds_v1_1_4_SettingsDetails';
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_4_SettingsDetailsConnection = {
  __typename?: 'ds_v1_1_4_SettingsDetailsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_SettingsDetailsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_SettingsDetailsEdge = {
  __typename?: 'ds_v1_1_4_SettingsDetailsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_SettingsDetails>;
};

export type Ds_V1_1_4_SettingsDetailsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_SettingsDetailsOrderField;
};

export enum Ds_V1_1_4_SettingsDetailsOrderField {
  Description = 'DESCRIPTION',
  Exists = 'EXISTS',
  Id = 'ID',
  Name = 'NAME'
}

export type Ds_V1_1_4_SettingsDetailsWhereInput = {
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_4_SettingsEdge = {
  __typename?: 'ds_v1_1_4_SettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_Settings>;
};

export type Ds_V1_1_4_SettingsOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_SettingsOrderField;
};

export enum Ds_V1_1_4_SettingsOrderField {
  Id = 'ID',
  Name = 'NAME',
  Value = 'VALUE'
}

export type Ds_V1_1_4_SettingsWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  value?: InputMaybe<Scalars['felt252']['input']>;
  valueEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueGT?: InputMaybe<Scalars['felt252']['input']>;
  valueGTE?: InputMaybe<Scalars['felt252']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['felt252']['input']>;
  valueLT?: InputMaybe<Scalars['felt252']['input']>;
  valueLTE?: InputMaybe<Scalars['felt252']['input']>;
  valueNEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_4_Task = {
  __typename?: 'ds_v1_1_4_Task';
  description?: Maybe<Scalars['ByteArray']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  total?: Maybe<Scalars['u32']['output']>;
};

export type Ds_V1_1_4_TokenMetadata = {
  __typename?: 'ds_v1_1_4_TokenMetadata';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lifecycle?: Maybe<Ds_V1_1_4_Lifecycle>;
  minted_by?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_1_4_TokenMetadataConnection = {
  __typename?: 'ds_v1_1_4_TokenMetadataConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_TokenMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_TokenMetadataEdge = {
  __typename?: 'ds_v1_1_4_TokenMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_TokenMetadata>;
};

export type Ds_V1_1_4_TokenMetadataOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_TokenMetadataOrderField;
};

export enum Ds_V1_1_4_TokenMetadataOrderField {
  Lifecycle = 'LIFECYCLE',
  MintedBy = 'MINTED_BY',
  PlayerName = 'PLAYER_NAME',
  SettingsId = 'SETTINGS_ID',
  TokenId = 'TOKEN_ID'
}

export type Ds_V1_1_4_TokenMetadataWhereInput = {
  minted_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  token_id?: InputMaybe<Scalars['u64']['input']>;
  token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idGT?: InputMaybe<Scalars['u64']['input']>;
  token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  token_idLT?: InputMaybe<Scalars['u64']['input']>;
  token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_4_TrophyCreation = {
  __typename?: 'ds_v1_1_4_TrophyCreation';
  data?: Maybe<Scalars['ByteArray']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  end?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  group?: Maybe<Scalars['felt252']['output']>;
  hidden?: Maybe<Scalars['bool']['output']>;
  icon?: Maybe<Scalars['felt252']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  index?: Maybe<Scalars['u8']['output']>;
  points?: Maybe<Scalars['u16']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
  tasks?: Maybe<Array<Maybe<Ds_V1_1_4_Task>>>;
  title?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_1_4_TrophyCreationConnection = {
  __typename?: 'ds_v1_1_4_TrophyCreationConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_TrophyCreationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_TrophyCreationEdge = {
  __typename?: 'ds_v1_1_4_TrophyCreationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_TrophyCreation>;
};

export type Ds_V1_1_4_TrophyCreationOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_TrophyCreationOrderField;
};

export enum Ds_V1_1_4_TrophyCreationOrderField {
  Data = 'DATA',
  Description = 'DESCRIPTION',
  End = 'END',
  Group = 'GROUP',
  Hidden = 'HIDDEN',
  Icon = 'ICON',
  Id = 'ID',
  Index = 'INDEX',
  Points = 'POINTS',
  Start = 'START',
  Tasks = 'TASKS',
  Title = 'TITLE'
}

export type Ds_V1_1_4_TrophyCreationWhereInput = {
  data?: InputMaybe<Scalars['ByteArray']['input']>;
  dataEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  end?: InputMaybe<Scalars['u64']['input']>;
  endEQ?: InputMaybe<Scalars['u64']['input']>;
  endGT?: InputMaybe<Scalars['u64']['input']>;
  endGTE?: InputMaybe<Scalars['u64']['input']>;
  endIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endLIKE?: InputMaybe<Scalars['u64']['input']>;
  endLT?: InputMaybe<Scalars['u64']['input']>;
  endLTE?: InputMaybe<Scalars['u64']['input']>;
  endNEQ?: InputMaybe<Scalars['u64']['input']>;
  endNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  group?: InputMaybe<Scalars['felt252']['input']>;
  groupEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupGT?: InputMaybe<Scalars['felt252']['input']>;
  groupGTE?: InputMaybe<Scalars['felt252']['input']>;
  groupIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupLIKE?: InputMaybe<Scalars['felt252']['input']>;
  groupLT?: InputMaybe<Scalars['felt252']['input']>;
  groupLTE?: InputMaybe<Scalars['felt252']['input']>;
  groupNEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  hidden?: InputMaybe<Scalars['bool']['input']>;
  icon?: InputMaybe<Scalars['felt252']['input']>;
  iconEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconGT?: InputMaybe<Scalars['felt252']['input']>;
  iconGTE?: InputMaybe<Scalars['felt252']['input']>;
  iconIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconLIKE?: InputMaybe<Scalars['felt252']['input']>;
  iconLT?: InputMaybe<Scalars['felt252']['input']>;
  iconLTE?: InputMaybe<Scalars['felt252']['input']>;
  iconNEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  id?: InputMaybe<Scalars['felt252']['input']>;
  idEQ?: InputMaybe<Scalars['felt252']['input']>;
  idGT?: InputMaybe<Scalars['felt252']['input']>;
  idGTE?: InputMaybe<Scalars['felt252']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  idLT?: InputMaybe<Scalars['felt252']['input']>;
  idLTE?: InputMaybe<Scalars['felt252']['input']>;
  idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  index?: InputMaybe<Scalars['u8']['input']>;
  indexEQ?: InputMaybe<Scalars['u8']['input']>;
  indexGT?: InputMaybe<Scalars['u8']['input']>;
  indexGTE?: InputMaybe<Scalars['u8']['input']>;
  indexIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexLIKE?: InputMaybe<Scalars['u8']['input']>;
  indexLT?: InputMaybe<Scalars['u8']['input']>;
  indexLTE?: InputMaybe<Scalars['u8']['input']>;
  indexNEQ?: InputMaybe<Scalars['u8']['input']>;
  indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  points?: InputMaybe<Scalars['u16']['input']>;
  pointsEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsGT?: InputMaybe<Scalars['u16']['input']>;
  pointsGTE?: InputMaybe<Scalars['u16']['input']>;
  pointsIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsLIKE?: InputMaybe<Scalars['u16']['input']>;
  pointsLT?: InputMaybe<Scalars['u16']['input']>;
  pointsLTE?: InputMaybe<Scalars['u16']['input']>;
  pointsNEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  start?: InputMaybe<Scalars['u64']['input']>;
  startEQ?: InputMaybe<Scalars['u64']['input']>;
  startGT?: InputMaybe<Scalars['u64']['input']>;
  startGTE?: InputMaybe<Scalars['u64']['input']>;
  startIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startLIKE?: InputMaybe<Scalars['u64']['input']>;
  startLT?: InputMaybe<Scalars['u64']['input']>;
  startLTE?: InputMaybe<Scalars['u64']['input']>;
  startNEQ?: InputMaybe<Scalars['u64']['input']>;
  startNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  title?: InputMaybe<Scalars['felt252']['input']>;
  titleEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleGT?: InputMaybe<Scalars['felt252']['input']>;
  titleGTE?: InputMaybe<Scalars['felt252']['input']>;
  titleIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleLIKE?: InputMaybe<Scalars['felt252']['input']>;
  titleLT?: InputMaybe<Scalars['felt252']['input']>;
  titleLTE?: InputMaybe<Scalars['felt252']['input']>;
  titleNEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_1_4_TrophyProgression = {
  __typename?: 'ds_v1_1_4_TrophyProgression';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  player_id?: Maybe<Scalars['felt252']['output']>;
  task_id?: Maybe<Scalars['felt252']['output']>;
  time?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_1_4_TrophyProgressionConnection = {
  __typename?: 'ds_v1_1_4_TrophyProgressionConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_TrophyProgressionEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_TrophyProgressionEdge = {
  __typename?: 'ds_v1_1_4_TrophyProgressionEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_TrophyProgression>;
};

export type Ds_V1_1_4_TrophyProgressionOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_TrophyProgressionOrderField;
};

export enum Ds_V1_1_4_TrophyProgressionOrderField {
  Count = 'COUNT',
  PlayerId = 'PLAYER_ID',
  TaskId = 'TASK_ID',
  Time = 'TIME'
}

export type Ds_V1_1_4_TrophyProgressionWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  player_id?: InputMaybe<Scalars['felt252']['input']>;
  player_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idGT?: InputMaybe<Scalars['felt252']['input']>;
  player_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_idLT?: InputMaybe<Scalars['felt252']['input']>;
  player_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_id?: InputMaybe<Scalars['felt252']['input']>;
  task_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idGT?: InputMaybe<Scalars['felt252']['input']>;
  task_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_idLT?: InputMaybe<Scalars['felt252']['input']>;
  task_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  time?: InputMaybe<Scalars['u64']['input']>;
  timeEQ?: InputMaybe<Scalars['u64']['input']>;
  timeGT?: InputMaybe<Scalars['u64']['input']>;
  timeGTE?: InputMaybe<Scalars['u64']['input']>;
  timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  timeLT?: InputMaybe<Scalars['u64']['input']>;
  timeLTE?: InputMaybe<Scalars['u64']['input']>;
  timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_1_4_WorldConfig = {
  __typename?: 'ds_v1_1_4_WorldConfig';
  config_id?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_count?: Maybe<Scalars['u256']['output']>;
  game_token_address?: Maybe<Scalars['ContractAddress']['output']>;
};

export type Ds_V1_1_4_WorldConfigConnection = {
  __typename?: 'ds_v1_1_4_WorldConfigConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_1_4_WorldConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_1_4_WorldConfigEdge = {
  __typename?: 'ds_v1_1_4_WorldConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_1_4_WorldConfig>;
};

export type Ds_V1_1_4_WorldConfigOrder = {
  direction: OrderDirection;
  field: Ds_V1_1_4_WorldConfigOrderField;
};

export enum Ds_V1_1_4_WorldConfigOrderField {
  ConfigId = 'CONFIG_ID',
  GameCount = 'GAME_COUNT',
  GameTokenAddress = 'GAME_TOKEN_ADDRESS'
}

export type Ds_V1_1_4_WorldConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u8']['input']>;
  config_idEQ?: InputMaybe<Scalars['u8']['input']>;
  config_idGT?: InputMaybe<Scalars['u8']['input']>;
  config_idGTE?: InputMaybe<Scalars['u8']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  config_idLT?: InputMaybe<Scalars['u8']['input']>;
  config_idLTE?: InputMaybe<Scalars['u8']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_count?: InputMaybe<Scalars['u256']['input']>;
  game_countEQ?: InputMaybe<Scalars['u256']['input']>;
  game_countGT?: InputMaybe<Scalars['u256']['input']>;
  game_countGTE?: InputMaybe<Scalars['u256']['input']>;
  game_countIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  game_countLIKE?: InputMaybe<Scalars['u256']['input']>;
  game_countLT?: InputMaybe<Scalars['u256']['input']>;
  game_countLTE?: InputMaybe<Scalars['u256']['input']>;
  game_countNEQ?: InputMaybe<Scalars['u256']['input']>;
  game_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  game_countNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  game_token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  game_token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  game_token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
};

export type Ds_V1_2_0_Battle = {
  __typename?: 'ds_v1_2_0_Battle';
  battle_effects?: Maybe<Ds_V1_2_0_BattleEffects>;
  battle_id?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hero?: Maybe<Ds_V1_2_0_Hero>;
  monster?: Maybe<Ds_V1_2_0_Monster>;
  round?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_2_0_BattleConnection = {
  __typename?: 'ds_v1_2_0_BattleConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_BattleEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_BattleEdge = {
  __typename?: 'ds_v1_2_0_BattleEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_Battle>;
};

export type Ds_V1_2_0_BattleEffects = {
  __typename?: 'ds_v1_2_0_BattleEffects';
  enemy_marks?: Maybe<Scalars['u8']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  next_brute_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_brute_health_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_health_bonus?: Maybe<Scalars['u8']['output']>;
  next_magical_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_magical_health_bonus?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_2_0_BattleOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_BattleOrderField;
};

export enum Ds_V1_2_0_BattleOrderField {
  BattleEffects = 'BATTLE_EFFECTS',
  BattleId = 'BATTLE_ID',
  GameId = 'GAME_ID',
  Hero = 'HERO',
  Monster = 'MONSTER',
  Round = 'ROUND'
}

export type Ds_V1_2_0_BattleResources = {
  __typename?: 'ds_v1_2_0_BattleResources';
  battle_id?: Maybe<Scalars['u16']['output']>;
  board?: Maybe<Array<Maybe<Ds_V1_2_0_Creature>>>;
  deck?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hand?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
};

export type Ds_V1_2_0_BattleResourcesConnection = {
  __typename?: 'ds_v1_2_0_BattleResourcesConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_BattleResourcesEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_BattleResourcesEdge = {
  __typename?: 'ds_v1_2_0_BattleResourcesEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_BattleResources>;
};

export type Ds_V1_2_0_BattleResourcesOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_BattleResourcesOrderField;
};

export enum Ds_V1_2_0_BattleResourcesOrderField {
  BattleId = 'BATTLE_ID',
  Board = 'BOARD',
  Deck = 'DECK',
  GameId = 'GAME_ID',
  Hand = 'HAND'
}

export type Ds_V1_2_0_BattleResourcesWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_2_0_BattleSettings = {
  __typename?: 'ds_v1_2_0_BattleSettings';
  draw_amount?: Maybe<Scalars['u8']['output']>;
  max_energy?: Maybe<Scalars['u8']['output']>;
  max_hand_size?: Maybe<Scalars['u8']['output']>;
  start_energy?: Maybe<Scalars['u8']['output']>;
  start_hand_size?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_2_0_BattleWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  round?: InputMaybe<Scalars['u8']['input']>;
  roundEQ?: InputMaybe<Scalars['u8']['input']>;
  roundGT?: InputMaybe<Scalars['u8']['input']>;
  roundGTE?: InputMaybe<Scalars['u8']['input']>;
  roundIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundLIKE?: InputMaybe<Scalars['u8']['input']>;
  roundLT?: InputMaybe<Scalars['u8']['input']>;
  roundLTE?: InputMaybe<Scalars['u8']['input']>;
  roundNEQ?: InputMaybe<Scalars['u8']['input']>;
  roundNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_2_0_Card = {
  __typename?: 'ds_v1_2_0_Card';
  category?: Maybe<Scalars['u8']['output']>;
  cost?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u64']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  rarity?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_2_0_CardConnection = {
  __typename?: 'ds_v1_2_0_CardConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_CardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_CardEdge = {
  __typename?: 'ds_v1_2_0_CardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_Card>;
};

export type Ds_V1_2_0_CardEffect = {
  __typename?: 'ds_v1_2_0_CardEffect';
  bonus?: Maybe<Ds_V1_2_0_EffectBonus>;
  modifier?: Maybe<Ds_V1_2_0_CardModifier>;
};

export type Ds_V1_2_0_CardModifier = {
  __typename?: 'ds_v1_2_0_CardModifier';
  _type?: Maybe<Scalars['u8']['output']>;
  requirement?: Maybe<Scalars['u8']['output']>;
  value?: Maybe<Scalars['u8']['output']>;
  value_type?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_2_0_CardOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_CardOrderField;
};

export enum Ds_V1_2_0_CardOrderField {
  Category = 'CATEGORY',
  Cost = 'COST',
  Id = 'ID',
  Name = 'NAME',
  Rarity = 'RARITY'
}

export type Ds_V1_2_0_CardRarityWeights = {
  __typename?: 'ds_v1_2_0_CardRarityWeights';
  common?: Maybe<Scalars['u8']['output']>;
  epic?: Maybe<Scalars['u8']['output']>;
  legendary?: Maybe<Scalars['u8']['output']>;
  rare?: Maybe<Scalars['u8']['output']>;
  uncommon?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_2_0_CardWhereInput = {
  category?: InputMaybe<Scalars['u8']['input']>;
  categoryEQ?: InputMaybe<Scalars['u8']['input']>;
  categoryGT?: InputMaybe<Scalars['u8']['input']>;
  categoryGTE?: InputMaybe<Scalars['u8']['input']>;
  categoryIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  categoryLIKE?: InputMaybe<Scalars['u8']['input']>;
  categoryLT?: InputMaybe<Scalars['u8']['input']>;
  categoryLTE?: InputMaybe<Scalars['u8']['input']>;
  categoryNEQ?: InputMaybe<Scalars['u8']['input']>;
  categoryNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  categoryNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  cost?: InputMaybe<Scalars['u8']['input']>;
  costEQ?: InputMaybe<Scalars['u8']['input']>;
  costGT?: InputMaybe<Scalars['u8']['input']>;
  costGTE?: InputMaybe<Scalars['u8']['input']>;
  costIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  costLIKE?: InputMaybe<Scalars['u8']['input']>;
  costLT?: InputMaybe<Scalars['u8']['input']>;
  costLTE?: InputMaybe<Scalars['u8']['input']>;
  costNEQ?: InputMaybe<Scalars['u8']['input']>;
  costNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  costNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  rarity?: InputMaybe<Scalars['u8']['input']>;
  rarityEQ?: InputMaybe<Scalars['u8']['input']>;
  rarityGT?: InputMaybe<Scalars['u8']['input']>;
  rarityGTE?: InputMaybe<Scalars['u8']['input']>;
  rarityIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  rarityLIKE?: InputMaybe<Scalars['u8']['input']>;
  rarityLT?: InputMaybe<Scalars['u8']['input']>;
  rarityLTE?: InputMaybe<Scalars['u8']['input']>;
  rarityNEQ?: InputMaybe<Scalars['u8']['input']>;
  rarityNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  rarityNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_2_0_CardsCounter = {
  __typename?: 'ds_v1_2_0_CardsCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_2_0_CardsCounterConnection = {
  __typename?: 'ds_v1_2_0_CardsCounterConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_CardsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_CardsCounterEdge = {
  __typename?: 'ds_v1_2_0_CardsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_CardsCounter>;
};

export type Ds_V1_2_0_CardsCounterOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_CardsCounterOrderField;
};

export enum Ds_V1_2_0_CardsCounterOrderField {
  Count = 'COUNT',
  Id = 'ID'
}

export type Ds_V1_2_0_CardsCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  id?: InputMaybe<Scalars['felt252']['input']>;
  idEQ?: InputMaybe<Scalars['felt252']['input']>;
  idGT?: InputMaybe<Scalars['felt252']['input']>;
  idGTE?: InputMaybe<Scalars['felt252']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  idLT?: InputMaybe<Scalars['felt252']['input']>;
  idLTE?: InputMaybe<Scalars['felt252']['input']>;
  idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_2_0_Creature = {
  __typename?: 'ds_v1_2_0_Creature';
  attack?: Maybe<Scalars['u8']['output']>;
  card_index?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_2_0_CreatureCard = {
  __typename?: 'ds_v1_2_0_CreatureCard';
  attack?: Maybe<Scalars['u8']['output']>;
  attack_effect?: Maybe<Ds_V1_2_0_CardEffect>;
  card_type?: Maybe<Scalars['u8']['output']>;
  death_effect?: Maybe<Ds_V1_2_0_CardEffect>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  health?: Maybe<Scalars['u8']['output']>;
  id?: Maybe<Scalars['u64']['output']>;
  play_effect?: Maybe<Ds_V1_2_0_CardEffect>;
};

export type Ds_V1_2_0_CreatureCardConnection = {
  __typename?: 'ds_v1_2_0_CreatureCardConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_CreatureCardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_CreatureCardEdge = {
  __typename?: 'ds_v1_2_0_CreatureCardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_CreatureCard>;
};

export type Ds_V1_2_0_CreatureCardOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_CreatureCardOrderField;
};

export enum Ds_V1_2_0_CreatureCardOrderField {
  Attack = 'ATTACK',
  AttackEffect = 'ATTACK_EFFECT',
  CardType = 'CARD_TYPE',
  DeathEffect = 'DEATH_EFFECT',
  Health = 'HEALTH',
  Id = 'ID',
  PlayEffect = 'PLAY_EFFECT'
}

export type Ds_V1_2_0_CreatureCardWhereInput = {
  attack?: InputMaybe<Scalars['u8']['input']>;
  attackEQ?: InputMaybe<Scalars['u8']['input']>;
  attackGT?: InputMaybe<Scalars['u8']['input']>;
  attackGTE?: InputMaybe<Scalars['u8']['input']>;
  attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  attackLT?: InputMaybe<Scalars['u8']['input']>;
  attackLTE?: InputMaybe<Scalars['u8']['input']>;
  attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_type?: InputMaybe<Scalars['u8']['input']>;
  card_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  card_typeGT?: InputMaybe<Scalars['u8']['input']>;
  card_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  card_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_typeLT?: InputMaybe<Scalars['u8']['input']>;
  card_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  card_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  card_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  health?: InputMaybe<Scalars['u8']['input']>;
  healthEQ?: InputMaybe<Scalars['u8']['input']>;
  healthGT?: InputMaybe<Scalars['u8']['input']>;
  healthGTE?: InputMaybe<Scalars['u8']['input']>;
  healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  healthLT?: InputMaybe<Scalars['u8']['input']>;
  healthLTE?: InputMaybe<Scalars['u8']['input']>;
  healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_2_0_Draft = {
  __typename?: 'ds_v1_2_0_Draft';
  cards?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  options?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
};

export type Ds_V1_2_0_DraftConnection = {
  __typename?: 'ds_v1_2_0_DraftConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_DraftEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_DraftEdge = {
  __typename?: 'ds_v1_2_0_DraftEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_Draft>;
};

export type Ds_V1_2_0_DraftOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_DraftOrderField;
};

export enum Ds_V1_2_0_DraftOrderField {
  Cards = 'CARDS',
  GameId = 'GAME_ID',
  Options = 'OPTIONS'
}

export type Ds_V1_2_0_DraftSettings = {
  __typename?: 'ds_v1_2_0_DraftSettings';
  auto_draft?: Maybe<Scalars['bool']['output']>;
  card_ids?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  card_rarity_weights?: Maybe<Ds_V1_2_0_CardRarityWeights>;
  draft_size?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_2_0_DraftWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_2_0_EffectBonus = {
  __typename?: 'ds_v1_2_0_EffectBonus';
  requirement?: Maybe<Scalars['u8']['output']>;
  value?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_2_0_Game = {
  __typename?: 'ds_v1_2_0_Game';
  action_count?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hero_health?: Maybe<Scalars['u8']['output']>;
  hero_xp?: Maybe<Scalars['u16']['output']>;
  last_node_id?: Maybe<Scalars['u8']['output']>;
  map_depth?: Maybe<Scalars['u8']['output']>;
  map_level?: Maybe<Scalars['u8']['output']>;
  monsters_slain?: Maybe<Scalars['u16']['output']>;
  state?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_2_0_GameActionEvent = {
  __typename?: 'ds_v1_2_0_GameActionEvent';
  count?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  tx_hash?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_2_0_GameActionEventConnection = {
  __typename?: 'ds_v1_2_0_GameActionEventConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_GameActionEventEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_GameActionEventEdge = {
  __typename?: 'ds_v1_2_0_GameActionEventEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_GameActionEvent>;
};

export type Ds_V1_2_0_GameActionEventOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_GameActionEventOrderField;
};

export enum Ds_V1_2_0_GameActionEventOrderField {
  Count = 'COUNT',
  GameId = 'GAME_ID',
  TxHash = 'TX_HASH'
}

export type Ds_V1_2_0_GameActionEventWhereInput = {
  count?: InputMaybe<Scalars['u16']['input']>;
  countEQ?: InputMaybe<Scalars['u16']['input']>;
  countGT?: InputMaybe<Scalars['u16']['input']>;
  countGTE?: InputMaybe<Scalars['u16']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u16']['input']>;
  countLT?: InputMaybe<Scalars['u16']['input']>;
  countLTE?: InputMaybe<Scalars['u16']['input']>;
  countNEQ?: InputMaybe<Scalars['u16']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  tx_hash?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashEQ?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashGT?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashGTE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  tx_hashLIKE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashLT?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashLTE?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashNEQ?: InputMaybe<Scalars['felt252']['input']>;
  tx_hashNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  tx_hashNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_2_0_GameConnection = {
  __typename?: 'ds_v1_2_0_GameConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_GameEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_GameCounter = {
  __typename?: 'ds_v1_2_0_GameCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_2_0_GameCounterConnection = {
  __typename?: 'ds_v1_2_0_GameCounterConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_GameCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_GameCounterEdge = {
  __typename?: 'ds_v1_2_0_GameCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_GameCounter>;
};

export type Ds_V1_2_0_GameCounterOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_GameCounterOrderField;
};

export enum Ds_V1_2_0_GameCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Ds_V1_2_0_GameCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_2_0_GameEdge = {
  __typename?: 'ds_v1_2_0_GameEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_Game>;
};

export type Ds_V1_2_0_GameEffects = {
  __typename?: 'ds_v1_2_0_GameEffects';
  all_attack?: Maybe<Scalars['u8']['output']>;
  brute_attack?: Maybe<Scalars['u8']['output']>;
  brute_health?: Maybe<Scalars['u8']['output']>;
  card_draw?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  first_attack?: Maybe<Scalars['u8']['output']>;
  first_health?: Maybe<Scalars['u8']['output']>;
  game_id?: Maybe<Scalars['u64']['output']>;
  hero_card_heal?: Maybe<Scalars['bool']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  hunter_attack?: Maybe<Scalars['u8']['output']>;
  hunter_health?: Maybe<Scalars['u8']['output']>;
  magical_attack?: Maybe<Scalars['u8']['output']>;
  magical_health?: Maybe<Scalars['u8']['output']>;
  play_creature_heal?: Maybe<Scalars['u8']['output']>;
  start_bonus_energy?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_2_0_GameEffectsConnection = {
  __typename?: 'ds_v1_2_0_GameEffectsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_GameEffectsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_GameEffectsEdge = {
  __typename?: 'ds_v1_2_0_GameEffectsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_GameEffects>;
};

export type Ds_V1_2_0_GameEffectsOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_GameEffectsOrderField;
};

export enum Ds_V1_2_0_GameEffectsOrderField {
  AllAttack = 'ALL_ATTACK',
  BruteAttack = 'BRUTE_ATTACK',
  BruteHealth = 'BRUTE_HEALTH',
  CardDraw = 'CARD_DRAW',
  FirstAttack = 'FIRST_ATTACK',
  FirstHealth = 'FIRST_HEALTH',
  GameId = 'GAME_ID',
  HeroCardHeal = 'HERO_CARD_HEAL',
  HeroDmgReduction = 'HERO_DMG_REDUCTION',
  HunterAttack = 'HUNTER_ATTACK',
  HunterHealth = 'HUNTER_HEALTH',
  MagicalAttack = 'MAGICAL_ATTACK',
  MagicalHealth = 'MAGICAL_HEALTH',
  PlayCreatureHeal = 'PLAY_CREATURE_HEAL',
  StartBonusEnergy = 'START_BONUS_ENERGY'
}

export type Ds_V1_2_0_GameEffectsWhereInput = {
  all_attack?: InputMaybe<Scalars['u8']['input']>;
  all_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackGT?: InputMaybe<Scalars['u8']['input']>;
  all_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  all_attackLT?: InputMaybe<Scalars['u8']['input']>;
  all_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attack?: InputMaybe<Scalars['u8']['input']>;
  brute_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_health?: InputMaybe<Scalars['u8']['input']>;
  brute_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_draw?: InputMaybe<Scalars['u8']['input']>;
  card_drawEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawGT?: InputMaybe<Scalars['u8']['input']>;
  card_drawGTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_drawLT?: InputMaybe<Scalars['u8']['input']>;
  card_drawLTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawNEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attack?: InputMaybe<Scalars['u8']['input']>;
  first_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackGT?: InputMaybe<Scalars['u8']['input']>;
  first_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attackLT?: InputMaybe<Scalars['u8']['input']>;
  first_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_health?: InputMaybe<Scalars['u8']['input']>;
  first_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthGT?: InputMaybe<Scalars['u8']['input']>;
  first_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_healthLT?: InputMaybe<Scalars['u8']['input']>;
  first_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  hero_card_heal?: InputMaybe<Scalars['bool']['input']>;
  hero_dmg_reduction?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attack?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_health?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attack?: InputMaybe<Scalars['u8']['input']>;
  magical_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_health?: InputMaybe<Scalars['u8']['input']>;
  magical_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_heal?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energy?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_2_0_GameMetadata = {
  __typename?: 'ds_v1_2_0_GameMetadata';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  creator_address?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  developer?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  genre?: Maybe<Scalars['felt252']['output']>;
  image?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  publisher?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_2_0_GameMetadataConnection = {
  __typename?: 'ds_v1_2_0_GameMetadataConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_GameMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_GameMetadataEdge = {
  __typename?: 'ds_v1_2_0_GameMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_GameMetadata>;
};

export type Ds_V1_2_0_GameMetadataOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_GameMetadataOrderField;
};

export enum Ds_V1_2_0_GameMetadataOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  CreatorAddress = 'CREATOR_ADDRESS',
  Description = 'DESCRIPTION',
  Developer = 'DEVELOPER',
  Genre = 'GENRE',
  Image = 'IMAGE',
  Name = 'NAME',
  Publisher = 'PUBLISHER'
}

export type Ds_V1_2_0_GameMetadataWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  developer?: InputMaybe<Scalars['felt252']['input']>;
  developerEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerGT?: InputMaybe<Scalars['felt252']['input']>;
  developerGTE?: InputMaybe<Scalars['felt252']['input']>;
  developerIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerLIKE?: InputMaybe<Scalars['felt252']['input']>;
  developerLT?: InputMaybe<Scalars['felt252']['input']>;
  developerLTE?: InputMaybe<Scalars['felt252']['input']>;
  developerNEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genre?: InputMaybe<Scalars['felt252']['input']>;
  genreEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreGT?: InputMaybe<Scalars['felt252']['input']>;
  genreGTE?: InputMaybe<Scalars['felt252']['input']>;
  genreIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genreLT?: InputMaybe<Scalars['felt252']['input']>;
  genreLTE?: InputMaybe<Scalars['felt252']['input']>;
  genreNEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  image?: InputMaybe<Scalars['ByteArray']['input']>;
  imageEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisher?: InputMaybe<Scalars['felt252']['input']>;
  publisherEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherGT?: InputMaybe<Scalars['felt252']['input']>;
  publisherGTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisherLT?: InputMaybe<Scalars['felt252']['input']>;
  publisherLTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherNEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_2_0_GameOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_GameOrderField;
};

export enum Ds_V1_2_0_GameOrderField {
  ActionCount = 'ACTION_COUNT',
  GameId = 'GAME_ID',
  HeroHealth = 'HERO_HEALTH',
  HeroXp = 'HERO_XP',
  LastNodeId = 'LAST_NODE_ID',
  MapDepth = 'MAP_DEPTH',
  MapLevel = 'MAP_LEVEL',
  MonstersSlain = 'MONSTERS_SLAIN',
  State = 'STATE'
}

export type Ds_V1_2_0_GameSettings = {
  __typename?: 'ds_v1_2_0_GameSettings';
  battle?: Maybe<Ds_V1_2_0_BattleSettings>;
  draft?: Maybe<Ds_V1_2_0_DraftSettings>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  map?: Maybe<Ds_V1_2_0_MapSettings>;
  persistent_health?: Maybe<Scalars['bool']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  starting_health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_2_0_GameSettingsConnection = {
  __typename?: 'ds_v1_2_0_GameSettingsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_GameSettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_GameSettingsEdge = {
  __typename?: 'ds_v1_2_0_GameSettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_GameSettings>;
};

export type Ds_V1_2_0_GameSettingsMetadata = {
  __typename?: 'ds_v1_2_0_GameSettingsMetadata';
  created_at?: Maybe<Scalars['u64']['output']>;
  created_by?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
};

export type Ds_V1_2_0_GameSettingsMetadataConnection = {
  __typename?: 'ds_v1_2_0_GameSettingsMetadataConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_GameSettingsMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_GameSettingsMetadataEdge = {
  __typename?: 'ds_v1_2_0_GameSettingsMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_GameSettingsMetadata>;
};

export type Ds_V1_2_0_GameSettingsMetadataOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_GameSettingsMetadataOrderField;
};

export enum Ds_V1_2_0_GameSettingsMetadataOrderField {
  CreatedAt = 'CREATED_AT',
  CreatedBy = 'CREATED_BY',
  Description = 'DESCRIPTION',
  Name = 'NAME',
  SettingsId = 'SETTINGS_ID'
}

export type Ds_V1_2_0_GameSettingsMetadataWhereInput = {
  created_at?: InputMaybe<Scalars['u64']['input']>;
  created_atEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atGT?: InputMaybe<Scalars['u64']['input']>;
  created_atGTE?: InputMaybe<Scalars['u64']['input']>;
  created_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_atLT?: InputMaybe<Scalars['u64']['input']>;
  created_atLTE?: InputMaybe<Scalars['u64']['input']>;
  created_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Ds_V1_2_0_GameSettingsOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_GameSettingsOrderField;
};

export enum Ds_V1_2_0_GameSettingsOrderField {
  Battle = 'BATTLE',
  Draft = 'DRAFT',
  Map = 'MAP',
  PersistentHealth = 'PERSISTENT_HEALTH',
  SettingsId = 'SETTINGS_ID',
  StartingHealth = 'STARTING_HEALTH'
}

export type Ds_V1_2_0_GameSettingsWhereInput = {
  persistent_health?: InputMaybe<Scalars['bool']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  starting_health?: InputMaybe<Scalars['u8']['input']>;
  starting_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  starting_healthGT?: InputMaybe<Scalars['u8']['input']>;
  starting_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  starting_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  starting_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  starting_healthLT?: InputMaybe<Scalars['u8']['input']>;
  starting_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  starting_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  starting_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  starting_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_2_0_GameWhereInput = {
  action_count?: InputMaybe<Scalars['u16']['input']>;
  action_countEQ?: InputMaybe<Scalars['u16']['input']>;
  action_countGT?: InputMaybe<Scalars['u16']['input']>;
  action_countGTE?: InputMaybe<Scalars['u16']['input']>;
  action_countIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  action_countLIKE?: InputMaybe<Scalars['u16']['input']>;
  action_countLT?: InputMaybe<Scalars['u16']['input']>;
  action_countLTE?: InputMaybe<Scalars['u16']['input']>;
  action_countNEQ?: InputMaybe<Scalars['u16']['input']>;
  action_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  action_countNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  hero_health?: InputMaybe<Scalars['u8']['input']>;
  hero_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_xp?: InputMaybe<Scalars['u16']['input']>;
  hero_xpEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpLIKE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  last_node_id?: InputMaybe<Scalars['u8']['input']>;
  last_node_idEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depth?: InputMaybe<Scalars['u8']['input']>;
  map_depthEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthGT?: InputMaybe<Scalars['u8']['input']>;
  map_depthGTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depthLT?: InputMaybe<Scalars['u8']['input']>;
  map_depthLTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_level?: InputMaybe<Scalars['u8']['input']>;
  map_levelEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelGT?: InputMaybe<Scalars['u8']['input']>;
  map_levelGTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_levelLT?: InputMaybe<Scalars['u8']['input']>;
  map_levelLTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  monsters_slain?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainLIKE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  state?: InputMaybe<Scalars['u8']['input']>;
  stateEQ?: InputMaybe<Scalars['u8']['input']>;
  stateGT?: InputMaybe<Scalars['u8']['input']>;
  stateGTE?: InputMaybe<Scalars['u8']['input']>;
  stateIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  stateLIKE?: InputMaybe<Scalars['u8']['input']>;
  stateLT?: InputMaybe<Scalars['u8']['input']>;
  stateLTE?: InputMaybe<Scalars['u8']['input']>;
  stateNEQ?: InputMaybe<Scalars['u8']['input']>;
  stateNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  stateNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Ds_V1_2_0_Hero = {
  __typename?: 'ds_v1_2_0_Hero';
  energy?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_2_0_Lifecycle = {
  __typename?: 'ds_v1_2_0_Lifecycle';
  end?: Maybe<Ds_V1_2_0_Optionu64>;
  mint?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Ds_V1_2_0_Optionu64>;
};

export type Ds_V1_2_0_Map = {
  __typename?: 'ds_v1_2_0_Map';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  level?: Maybe<Scalars['u8']['output']>;
  seed?: Maybe<Scalars['u128']['output']>;
};

export type Ds_V1_2_0_MapConnection = {
  __typename?: 'ds_v1_2_0_MapConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_MapEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_MapEdge = {
  __typename?: 'ds_v1_2_0_MapEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_Map>;
};

export type Ds_V1_2_0_MapOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_MapOrderField;
};

export enum Ds_V1_2_0_MapOrderField {
  GameId = 'GAME_ID',
  Level = 'LEVEL',
  Seed = 'SEED'
}

export type Ds_V1_2_0_MapSettings = {
  __typename?: 'ds_v1_2_0_MapSettings';
  enemy_attack_max?: Maybe<Scalars['u8']['output']>;
  enemy_attack_min?: Maybe<Scalars['u8']['output']>;
  enemy_attack_scaling?: Maybe<Scalars['u8']['output']>;
  enemy_health_max?: Maybe<Scalars['u8']['output']>;
  enemy_health_min?: Maybe<Scalars['u8']['output']>;
  enemy_health_scaling?: Maybe<Scalars['u8']['output']>;
  level_depth?: Maybe<Scalars['u8']['output']>;
  possible_branches?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_2_0_MapWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  level?: InputMaybe<Scalars['u8']['input']>;
  levelEQ?: InputMaybe<Scalars['u8']['input']>;
  levelGT?: InputMaybe<Scalars['u8']['input']>;
  levelGTE?: InputMaybe<Scalars['u8']['input']>;
  levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  levelLT?: InputMaybe<Scalars['u8']['input']>;
  levelLTE?: InputMaybe<Scalars['u8']['input']>;
  levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  seed?: InputMaybe<Scalars['u128']['input']>;
  seedEQ?: InputMaybe<Scalars['u128']['input']>;
  seedGT?: InputMaybe<Scalars['u128']['input']>;
  seedGTE?: InputMaybe<Scalars['u128']['input']>;
  seedIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedLIKE?: InputMaybe<Scalars['u128']['input']>;
  seedLT?: InputMaybe<Scalars['u128']['input']>;
  seedLTE?: InputMaybe<Scalars['u128']['input']>;
  seedNEQ?: InputMaybe<Scalars['u128']['input']>;
  seedNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type Ds_V1_2_0_Monster = {
  __typename?: 'ds_v1_2_0_Monster';
  attack?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u16']['output']>;
  monster_id?: Maybe<Scalars['u8']['output']>;
};

export type Ds_V1_2_0_Optionu64 = {
  __typename?: 'ds_v1_2_0_Optionu64';
  Some?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Ds_V1_2_0_Score = {
  __typename?: 'ds_v1_2_0_Score';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  score?: Maybe<Scalars['u32']['output']>;
};

export type Ds_V1_2_0_ScoreConnection = {
  __typename?: 'ds_v1_2_0_ScoreConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_ScoreEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_ScoreEdge = {
  __typename?: 'ds_v1_2_0_ScoreEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_Score>;
};

export type Ds_V1_2_0_ScoreOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_ScoreOrderField;
};

export enum Ds_V1_2_0_ScoreOrderField {
  GameId = 'GAME_ID',
  Score = 'SCORE'
}

export type Ds_V1_2_0_ScoreWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  score?: InputMaybe<Scalars['u32']['input']>;
  scoreEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreGT?: InputMaybe<Scalars['u32']['input']>;
  scoreGTE?: InputMaybe<Scalars['u32']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u32']['input']>;
  scoreLT?: InputMaybe<Scalars['u32']['input']>;
  scoreLTE?: InputMaybe<Scalars['u32']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Ds_V1_2_0_Settings = {
  __typename?: 'ds_v1_2_0_Settings';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  value?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_2_0_SettingsConnection = {
  __typename?: 'ds_v1_2_0_SettingsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_SettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_SettingsCounter = {
  __typename?: 'ds_v1_2_0_SettingsCounter';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_2_0_SettingsCounterConnection = {
  __typename?: 'ds_v1_2_0_SettingsCounterConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_SettingsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_SettingsCounterEdge = {
  __typename?: 'ds_v1_2_0_SettingsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_SettingsCounter>;
};

export type Ds_V1_2_0_SettingsCounterOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_SettingsCounterOrderField;
};

export enum Ds_V1_2_0_SettingsCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Ds_V1_2_0_SettingsCounterWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_2_0_SettingsDetails = {
  __typename?: 'ds_v1_2_0_SettingsDetails';
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_2_0_SettingsDetailsConnection = {
  __typename?: 'ds_v1_2_0_SettingsDetailsConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_SettingsDetailsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_SettingsDetailsEdge = {
  __typename?: 'ds_v1_2_0_SettingsDetailsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_SettingsDetails>;
};

export type Ds_V1_2_0_SettingsDetailsOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_SettingsDetailsOrderField;
};

export enum Ds_V1_2_0_SettingsDetailsOrderField {
  Description = 'DESCRIPTION',
  Exists = 'EXISTS',
  Id = 'ID',
  Name = 'NAME'
}

export type Ds_V1_2_0_SettingsDetailsWhereInput = {
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_2_0_SettingsEdge = {
  __typename?: 'ds_v1_2_0_SettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_Settings>;
};

export type Ds_V1_2_0_SettingsOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_SettingsOrderField;
};

export enum Ds_V1_2_0_SettingsOrderField {
  Id = 'ID',
  Name = 'NAME',
  Value = 'VALUE'
}

export type Ds_V1_2_0_SettingsWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  value?: InputMaybe<Scalars['felt252']['input']>;
  valueEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueGT?: InputMaybe<Scalars['felt252']['input']>;
  valueGTE?: InputMaybe<Scalars['felt252']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['felt252']['input']>;
  valueLT?: InputMaybe<Scalars['felt252']['input']>;
  valueLTE?: InputMaybe<Scalars['felt252']['input']>;
  valueNEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_2_0_SpellCard = {
  __typename?: 'ds_v1_2_0_SpellCard';
  card_type?: Maybe<Scalars['u8']['output']>;
  effect?: Maybe<Ds_V1_2_0_CardEffect>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  extra_effect?: Maybe<Ds_V1_2_0_CardEffect>;
  id?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_2_0_SpellCardConnection = {
  __typename?: 'ds_v1_2_0_SpellCardConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_SpellCardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_SpellCardEdge = {
  __typename?: 'ds_v1_2_0_SpellCardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_SpellCard>;
};

export type Ds_V1_2_0_SpellCardOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_SpellCardOrderField;
};

export enum Ds_V1_2_0_SpellCardOrderField {
  CardType = 'CARD_TYPE',
  Effect = 'EFFECT',
  ExtraEffect = 'EXTRA_EFFECT',
  Id = 'ID'
}

export type Ds_V1_2_0_SpellCardWhereInput = {
  card_type?: InputMaybe<Scalars['u8']['input']>;
  card_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  card_typeGT?: InputMaybe<Scalars['u8']['input']>;
  card_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  card_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_typeLT?: InputMaybe<Scalars['u8']['input']>;
  card_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  card_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  card_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_2_0_Task = {
  __typename?: 'ds_v1_2_0_Task';
  description?: Maybe<Scalars['ByteArray']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  total?: Maybe<Scalars['u32']['output']>;
};

export type Ds_V1_2_0_TokenMetadata = {
  __typename?: 'ds_v1_2_0_TokenMetadata';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lifecycle?: Maybe<Ds_V1_2_0_Lifecycle>;
  minted_by?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_2_0_TokenMetadataConnection = {
  __typename?: 'ds_v1_2_0_TokenMetadataConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_TokenMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_TokenMetadataEdge = {
  __typename?: 'ds_v1_2_0_TokenMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_TokenMetadata>;
};

export type Ds_V1_2_0_TokenMetadataOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_TokenMetadataOrderField;
};

export enum Ds_V1_2_0_TokenMetadataOrderField {
  Lifecycle = 'LIFECYCLE',
  MintedBy = 'MINTED_BY',
  PlayerName = 'PLAYER_NAME',
  SettingsId = 'SETTINGS_ID',
  TokenId = 'TOKEN_ID'
}

export type Ds_V1_2_0_TokenMetadataWhereInput = {
  minted_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  token_id?: InputMaybe<Scalars['u64']['input']>;
  token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idGT?: InputMaybe<Scalars['u64']['input']>;
  token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  token_idLT?: InputMaybe<Scalars['u64']['input']>;
  token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ds_V1_2_0_TrophyCreation = {
  __typename?: 'ds_v1_2_0_TrophyCreation';
  data?: Maybe<Scalars['ByteArray']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  end?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  group?: Maybe<Scalars['felt252']['output']>;
  hidden?: Maybe<Scalars['bool']['output']>;
  icon?: Maybe<Scalars['felt252']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  index?: Maybe<Scalars['u8']['output']>;
  points?: Maybe<Scalars['u16']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
  tasks?: Maybe<Array<Maybe<Ds_V1_2_0_Task>>>;
  title?: Maybe<Scalars['felt252']['output']>;
};

export type Ds_V1_2_0_TrophyCreationConnection = {
  __typename?: 'ds_v1_2_0_TrophyCreationConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_TrophyCreationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_TrophyCreationEdge = {
  __typename?: 'ds_v1_2_0_TrophyCreationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_TrophyCreation>;
};

export type Ds_V1_2_0_TrophyCreationOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_TrophyCreationOrderField;
};

export enum Ds_V1_2_0_TrophyCreationOrderField {
  Data = 'DATA',
  Description = 'DESCRIPTION',
  End = 'END',
  Group = 'GROUP',
  Hidden = 'HIDDEN',
  Icon = 'ICON',
  Id = 'ID',
  Index = 'INDEX',
  Points = 'POINTS',
  Start = 'START',
  Tasks = 'TASKS',
  Title = 'TITLE'
}

export type Ds_V1_2_0_TrophyCreationWhereInput = {
  data?: InputMaybe<Scalars['ByteArray']['input']>;
  dataEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  end?: InputMaybe<Scalars['u64']['input']>;
  endEQ?: InputMaybe<Scalars['u64']['input']>;
  endGT?: InputMaybe<Scalars['u64']['input']>;
  endGTE?: InputMaybe<Scalars['u64']['input']>;
  endIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endLIKE?: InputMaybe<Scalars['u64']['input']>;
  endLT?: InputMaybe<Scalars['u64']['input']>;
  endLTE?: InputMaybe<Scalars['u64']['input']>;
  endNEQ?: InputMaybe<Scalars['u64']['input']>;
  endNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  group?: InputMaybe<Scalars['felt252']['input']>;
  groupEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupGT?: InputMaybe<Scalars['felt252']['input']>;
  groupGTE?: InputMaybe<Scalars['felt252']['input']>;
  groupIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupLIKE?: InputMaybe<Scalars['felt252']['input']>;
  groupLT?: InputMaybe<Scalars['felt252']['input']>;
  groupLTE?: InputMaybe<Scalars['felt252']['input']>;
  groupNEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  hidden?: InputMaybe<Scalars['bool']['input']>;
  icon?: InputMaybe<Scalars['felt252']['input']>;
  iconEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconGT?: InputMaybe<Scalars['felt252']['input']>;
  iconGTE?: InputMaybe<Scalars['felt252']['input']>;
  iconIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconLIKE?: InputMaybe<Scalars['felt252']['input']>;
  iconLT?: InputMaybe<Scalars['felt252']['input']>;
  iconLTE?: InputMaybe<Scalars['felt252']['input']>;
  iconNEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  id?: InputMaybe<Scalars['felt252']['input']>;
  idEQ?: InputMaybe<Scalars['felt252']['input']>;
  idGT?: InputMaybe<Scalars['felt252']['input']>;
  idGTE?: InputMaybe<Scalars['felt252']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  idLT?: InputMaybe<Scalars['felt252']['input']>;
  idLTE?: InputMaybe<Scalars['felt252']['input']>;
  idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  index?: InputMaybe<Scalars['u8']['input']>;
  indexEQ?: InputMaybe<Scalars['u8']['input']>;
  indexGT?: InputMaybe<Scalars['u8']['input']>;
  indexGTE?: InputMaybe<Scalars['u8']['input']>;
  indexIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexLIKE?: InputMaybe<Scalars['u8']['input']>;
  indexLT?: InputMaybe<Scalars['u8']['input']>;
  indexLTE?: InputMaybe<Scalars['u8']['input']>;
  indexNEQ?: InputMaybe<Scalars['u8']['input']>;
  indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  points?: InputMaybe<Scalars['u16']['input']>;
  pointsEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsGT?: InputMaybe<Scalars['u16']['input']>;
  pointsGTE?: InputMaybe<Scalars['u16']['input']>;
  pointsIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsLIKE?: InputMaybe<Scalars['u16']['input']>;
  pointsLT?: InputMaybe<Scalars['u16']['input']>;
  pointsLTE?: InputMaybe<Scalars['u16']['input']>;
  pointsNEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  start?: InputMaybe<Scalars['u64']['input']>;
  startEQ?: InputMaybe<Scalars['u64']['input']>;
  startGT?: InputMaybe<Scalars['u64']['input']>;
  startGTE?: InputMaybe<Scalars['u64']['input']>;
  startIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startLIKE?: InputMaybe<Scalars['u64']['input']>;
  startLT?: InputMaybe<Scalars['u64']['input']>;
  startLTE?: InputMaybe<Scalars['u64']['input']>;
  startNEQ?: InputMaybe<Scalars['u64']['input']>;
  startNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  title?: InputMaybe<Scalars['felt252']['input']>;
  titleEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleGT?: InputMaybe<Scalars['felt252']['input']>;
  titleGTE?: InputMaybe<Scalars['felt252']['input']>;
  titleIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleLIKE?: InputMaybe<Scalars['felt252']['input']>;
  titleLT?: InputMaybe<Scalars['felt252']['input']>;
  titleLTE?: InputMaybe<Scalars['felt252']['input']>;
  titleNEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Ds_V1_2_0_TrophyProgression = {
  __typename?: 'ds_v1_2_0_TrophyProgression';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  player_id?: Maybe<Scalars['felt252']['output']>;
  task_id?: Maybe<Scalars['felt252']['output']>;
  time?: Maybe<Scalars['u64']['output']>;
};

export type Ds_V1_2_0_TrophyProgressionConnection = {
  __typename?: 'ds_v1_2_0_TrophyProgressionConnection';
  edges?: Maybe<Array<Maybe<Ds_V1_2_0_TrophyProgressionEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ds_V1_2_0_TrophyProgressionEdge = {
  __typename?: 'ds_v1_2_0_TrophyProgressionEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ds_V1_2_0_TrophyProgression>;
};

export type Ds_V1_2_0_TrophyProgressionOrder = {
  direction: OrderDirection;
  field: Ds_V1_2_0_TrophyProgressionOrderField;
};

export enum Ds_V1_2_0_TrophyProgressionOrderField {
  Count = 'COUNT',
  PlayerId = 'PLAYER_ID',
  TaskId = 'TASK_ID',
  Time = 'TIME'
}

export type Ds_V1_2_0_TrophyProgressionWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  player_id?: InputMaybe<Scalars['felt252']['input']>;
  player_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idGT?: InputMaybe<Scalars['felt252']['input']>;
  player_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_idLT?: InputMaybe<Scalars['felt252']['input']>;
  player_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_id?: InputMaybe<Scalars['felt252']['input']>;
  task_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idGT?: InputMaybe<Scalars['felt252']['input']>;
  task_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_idLT?: InputMaybe<Scalars['felt252']['input']>;
  task_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  time?: InputMaybe<Scalars['u64']['input']>;
  timeEQ?: InputMaybe<Scalars['u64']['input']>;
  timeGT?: InputMaybe<Scalars['u64']['input']>;
  timeGTE?: InputMaybe<Scalars['u64']['input']>;
  timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  timeLT?: InputMaybe<Scalars['u64']['input']>;
  timeLTE?: InputMaybe<Scalars['u64']['input']>;
  timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ls_Tournaments_V0_Erc20Data = {
  __typename?: 'ls_tournaments_v0_ERC20Data';
  token_amount?: Maybe<Scalars['u128']['output']>;
};

export type Ls_Tournaments_V0_Erc721Data = {
  __typename?: 'ls_tournaments_v0_ERC721Data';
  token_id?: Maybe<Scalars['u128']['output']>;
};

export type Ls_Tournaments_V0_EntryCriteria = {
  __typename?: 'ls_tournaments_v0_EntryCriteria';
  entry_count?: Maybe<Scalars['u64']['output']>;
  token_id?: Maybe<Scalars['u128']['output']>;
};

export type Ls_Tournaments_V0_GatedEntryType = {
  __typename?: 'ls_tournaments_v0_GatedEntryType';
  criteria?: Maybe<Array<Maybe<Ls_Tournaments_V0_EntryCriteria>>>;
  option?: Maybe<Scalars['Enum']['output']>;
  uniform?: Maybe<Scalars['u64']['output']>;
};

export type Ls_Tournaments_V0_GatedToken = {
  __typename?: 'ls_tournaments_v0_GatedToken';
  entry_type?: Maybe<Ls_Tournaments_V0_GatedEntryType>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
};

export type Ls_Tournaments_V0_GatedType = {
  __typename?: 'ls_tournaments_v0_GatedType';
  address?: Maybe<Array<Maybe<Scalars['ContractAddress']['output']>>>;
  option?: Maybe<Scalars['Enum']['output']>;
  token?: Maybe<Ls_Tournaments_V0_GatedToken>;
  tournament?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
};

export type Ls_Tournaments_V0_OptionGatedType = {
  __typename?: 'ls_tournaments_v0_OptionGatedType';
  Some?: Maybe<Ls_Tournaments_V0_GatedType>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Ls_Tournaments_V0_OptionPremium = {
  __typename?: 'ls_tournaments_v0_OptionPremium';
  Some?: Maybe<Ls_Tournaments_V0_Premium>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Ls_Tournaments_V0_Premium = {
  __typename?: 'ls_tournaments_v0_Premium';
  creator_fee?: Maybe<Scalars['u8']['output']>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
  token_amount?: Maybe<Scalars['u128']['output']>;
  token_distribution?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
};

export type Ls_Tournaments_V0_Token = {
  __typename?: 'ls_tournaments_v0_Token';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  is_registered?: Maybe<Scalars['bool']['output']>;
  name?: Maybe<Scalars['ByteArray']['output']>;
  symbol?: Maybe<Scalars['ByteArray']['output']>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
  token_data_type?: Maybe<Ls_Tournaments_V0_TokenDataType>;
};

export type Ls_Tournaments_V0_TokenConnection = {
  __typename?: 'ls_tournaments_v0_TokenConnection';
  edges?: Maybe<Array<Maybe<Ls_Tournaments_V0_TokenEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ls_Tournaments_V0_TokenDataType = {
  __typename?: 'ls_tournaments_v0_TokenDataType';
  erc20?: Maybe<Ls_Tournaments_V0_Erc20Data>;
  erc721?: Maybe<Ls_Tournaments_V0_Erc721Data>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Ls_Tournaments_V0_TokenEdge = {
  __typename?: 'ls_tournaments_v0_TokenEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ls_Tournaments_V0_Token>;
};

export type Ls_Tournaments_V0_TokenOrder = {
  direction: OrderDirection;
  field: Ls_Tournaments_V0_TokenOrderField;
};

export enum Ls_Tournaments_V0_TokenOrderField {
  IsRegistered = 'IS_REGISTERED',
  Name = 'NAME',
  Symbol = 'SYMBOL',
  Token = 'TOKEN',
  TokenDataType = 'TOKEN_DATA_TYPE'
}

export type Ls_Tournaments_V0_TokenWhereInput = {
  is_registered?: InputMaybe<Scalars['bool']['input']>;
  name?: InputMaybe<Scalars['ByteArray']['input']>;
  nameEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbol?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  token?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  tokenLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  tokenNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
};

export type Ls_Tournaments_V0_Tournament = {
  __typename?: 'ls_tournaments_v0_Tournament';
  creator?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  end_time?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entry_premium?: Maybe<Ls_Tournaments_V0_OptionPremium>;
  eventMessage?: Maybe<World__EventMessage>;
  gated_type?: Maybe<Ls_Tournaments_V0_OptionGatedType>;
  name?: Maybe<Scalars['felt252']['output']>;
  registration_end_time?: Maybe<Scalars['u64']['output']>;
  registration_start_time?: Maybe<Scalars['u64']['output']>;
  start_time?: Maybe<Scalars['u64']['output']>;
  submission_period?: Maybe<Scalars['u64']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
  winners_count?: Maybe<Scalars['u8']['output']>;
};

export type Ls_Tournaments_V0_TournamentConfig = {
  __typename?: 'ls_tournaments_v0_TournamentConfig';
  blobert?: Maybe<Scalars['ContractAddress']['output']>;
  contract?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eth?: Maybe<Scalars['ContractAddress']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  golden_token?: Maybe<Scalars['ContractAddress']['output']>;
  loot_survivor?: Maybe<Scalars['ContractAddress']['output']>;
  lords?: Maybe<Scalars['ContractAddress']['output']>;
  oracle?: Maybe<Scalars['ContractAddress']['output']>;
  safe_mode?: Maybe<Scalars['bool']['output']>;
  test_mode?: Maybe<Scalars['bool']['output']>;
};

export type Ls_Tournaments_V0_TournamentConfigConnection = {
  __typename?: 'ls_tournaments_v0_TournamentConfigConnection';
  edges?: Maybe<Array<Maybe<Ls_Tournaments_V0_TournamentConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ls_Tournaments_V0_TournamentConfigEdge = {
  __typename?: 'ls_tournaments_v0_TournamentConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ls_Tournaments_V0_TournamentConfig>;
};

export type Ls_Tournaments_V0_TournamentConfigOrder = {
  direction: OrderDirection;
  field: Ls_Tournaments_V0_TournamentConfigOrderField;
};

export enum Ls_Tournaments_V0_TournamentConfigOrderField {
  Blobert = 'BLOBERT',
  Contract = 'CONTRACT',
  Eth = 'ETH',
  GoldenToken = 'GOLDEN_TOKEN',
  LootSurvivor = 'LOOT_SURVIVOR',
  Lords = 'LORDS',
  Oracle = 'ORACLE',
  SafeMode = 'SAFE_MODE',
  TestMode = 'TEST_MODE'
}

export type Ls_Tournaments_V0_TournamentConfigWhereInput = {
  blobert?: InputMaybe<Scalars['ContractAddress']['input']>;
  blobertEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  blobertGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  blobertGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  blobertIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  blobertLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  blobertLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  blobertLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  blobertNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  blobertNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  blobertNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contractLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contractNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  eth?: InputMaybe<Scalars['ContractAddress']['input']>;
  ethEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  ethGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  ethGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  ethIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  ethLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  ethLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  ethLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  ethNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  ethNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  ethNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_token?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_tokenEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_tokenGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_tokenGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_tokenIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  golden_tokenLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_tokenLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_tokenLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_tokenNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_tokenNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  golden_tokenNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivor?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivorEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivorGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivorGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivorIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  loot_survivorLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivorLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivorLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivorNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivorNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  loot_survivorNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  lords?: InputMaybe<Scalars['ContractAddress']['input']>;
  lordsEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  lordsGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  lordsGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  lordsIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  lordsLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  lordsLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  lordsLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  lordsNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  lordsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  lordsNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracle?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracleEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracleGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracleGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracleIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  oracleLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracleLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracleLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracleNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracleNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  oracleNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  safe_mode?: InputMaybe<Scalars['bool']['input']>;
  test_mode?: InputMaybe<Scalars['bool']['input']>;
};

export type Ls_Tournaments_V0_TournamentConnection = {
  __typename?: 'ls_tournaments_v0_TournamentConnection';
  edges?: Maybe<Array<Maybe<Ls_Tournaments_V0_TournamentEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ls_Tournaments_V0_TournamentEdge = {
  __typename?: 'ls_tournaments_v0_TournamentEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ls_Tournaments_V0_Tournament>;
};

export type Ls_Tournaments_V0_TournamentEntries = {
  __typename?: 'ls_tournaments_v0_TournamentEntries';
  distribute_called?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  entry_count?: Maybe<Scalars['u64']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  premiums_formatted?: Maybe<Scalars['bool']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Ls_Tournaments_V0_TournamentEntriesAddress = {
  __typename?: 'ls_tournaments_v0_TournamentEntriesAddress';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  entry_count?: Maybe<Scalars['u64']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Ls_Tournaments_V0_TournamentEntriesAddressConnection = {
  __typename?: 'ls_tournaments_v0_TournamentEntriesAddressConnection';
  edges?: Maybe<Array<Maybe<Ls_Tournaments_V0_TournamentEntriesAddressEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ls_Tournaments_V0_TournamentEntriesAddressEdge = {
  __typename?: 'ls_tournaments_v0_TournamentEntriesAddressEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ls_Tournaments_V0_TournamentEntriesAddress>;
};

export type Ls_Tournaments_V0_TournamentEntriesAddressOrder = {
  direction: OrderDirection;
  field: Ls_Tournaments_V0_TournamentEntriesAddressOrderField;
};

export enum Ls_Tournaments_V0_TournamentEntriesAddressOrderField {
  Address = 'ADDRESS',
  EntryCount = 'ENTRY_COUNT',
  TournamentId = 'TOURNAMENT_ID'
}

export type Ls_Tournaments_V0_TournamentEntriesAddressWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  entry_count?: InputMaybe<Scalars['u64']['input']>;
  entry_countEQ?: InputMaybe<Scalars['u64']['input']>;
  entry_countGT?: InputMaybe<Scalars['u64']['input']>;
  entry_countGTE?: InputMaybe<Scalars['u64']['input']>;
  entry_countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  entry_countLIKE?: InputMaybe<Scalars['u64']['input']>;
  entry_countLT?: InputMaybe<Scalars['u64']['input']>;
  entry_countLTE?: InputMaybe<Scalars['u64']['input']>;
  entry_countNEQ?: InputMaybe<Scalars['u64']['input']>;
  entry_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  entry_countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ls_Tournaments_V0_TournamentEntriesConnection = {
  __typename?: 'ls_tournaments_v0_TournamentEntriesConnection';
  edges?: Maybe<Array<Maybe<Ls_Tournaments_V0_TournamentEntriesEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ls_Tournaments_V0_TournamentEntriesEdge = {
  __typename?: 'ls_tournaments_v0_TournamentEntriesEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ls_Tournaments_V0_TournamentEntries>;
};

export type Ls_Tournaments_V0_TournamentEntriesOrder = {
  direction: OrderDirection;
  field: Ls_Tournaments_V0_TournamentEntriesOrderField;
};

export enum Ls_Tournaments_V0_TournamentEntriesOrderField {
  DistributeCalled = 'DISTRIBUTE_CALLED',
  EntryCount = 'ENTRY_COUNT',
  PremiumsFormatted = 'PREMIUMS_FORMATTED',
  TournamentId = 'TOURNAMENT_ID'
}

export type Ls_Tournaments_V0_TournamentEntriesWhereInput = {
  distribute_called?: InputMaybe<Scalars['bool']['input']>;
  entry_count?: InputMaybe<Scalars['u64']['input']>;
  entry_countEQ?: InputMaybe<Scalars['u64']['input']>;
  entry_countGT?: InputMaybe<Scalars['u64']['input']>;
  entry_countGTE?: InputMaybe<Scalars['u64']['input']>;
  entry_countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  entry_countLIKE?: InputMaybe<Scalars['u64']['input']>;
  entry_countLT?: InputMaybe<Scalars['u64']['input']>;
  entry_countLTE?: InputMaybe<Scalars['u64']['input']>;
  entry_countNEQ?: InputMaybe<Scalars['u64']['input']>;
  entry_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  entry_countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  premiums_formatted?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ls_Tournaments_V0_TournamentEntryAddresses = {
  __typename?: 'ls_tournaments_v0_TournamentEntryAddresses';
  addresses?: Maybe<Array<Maybe<Scalars['ContractAddress']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Ls_Tournaments_V0_TournamentEntryAddressesConnection = {
  __typename?: 'ls_tournaments_v0_TournamentEntryAddressesConnection';
  edges?: Maybe<Array<Maybe<Ls_Tournaments_V0_TournamentEntryAddressesEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ls_Tournaments_V0_TournamentEntryAddressesEdge = {
  __typename?: 'ls_tournaments_v0_TournamentEntryAddressesEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ls_Tournaments_V0_TournamentEntryAddresses>;
};

export type Ls_Tournaments_V0_TournamentEntryAddressesOrder = {
  direction: OrderDirection;
  field: Ls_Tournaments_V0_TournamentEntryAddressesOrderField;
};

export enum Ls_Tournaments_V0_TournamentEntryAddressesOrderField {
  Addresses = 'ADDRESSES',
  TournamentId = 'TOURNAMENT_ID'
}

export type Ls_Tournaments_V0_TournamentEntryAddressesWhereInput = {
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ls_Tournaments_V0_TournamentGame = {
  __typename?: 'ls_tournaments_v0_TournamentGame';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  status?: Maybe<Scalars['Enum']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Ls_Tournaments_V0_TournamentGameConnection = {
  __typename?: 'ls_tournaments_v0_TournamentGameConnection';
  edges?: Maybe<Array<Maybe<Ls_Tournaments_V0_TournamentGameEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ls_Tournaments_V0_TournamentGameEdge = {
  __typename?: 'ls_tournaments_v0_TournamentGameEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ls_Tournaments_V0_TournamentGame>;
};

export type Ls_Tournaments_V0_TournamentGameOrder = {
  direction: OrderDirection;
  field: Ls_Tournaments_V0_TournamentGameOrderField;
};

export enum Ls_Tournaments_V0_TournamentGameOrderField {
  Address = 'ADDRESS',
  GameId = 'GAME_ID',
  Status = 'STATUS',
  TournamentId = 'TOURNAMENT_ID'
}

export type Ls_Tournaments_V0_TournamentGameWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  status?: InputMaybe<Scalars['Enum']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ls_Tournaments_V0_TournamentOrder = {
  direction: OrderDirection;
  field: Ls_Tournaments_V0_TournamentOrderField;
};

export enum Ls_Tournaments_V0_TournamentOrderField {
  Creator = 'CREATOR',
  Description = 'DESCRIPTION',
  EndTime = 'END_TIME',
  EntryPremium = 'ENTRY_PREMIUM',
  GatedType = 'GATED_TYPE',
  Name = 'NAME',
  RegistrationEndTime = 'REGISTRATION_END_TIME',
  RegistrationStartTime = 'REGISTRATION_START_TIME',
  StartTime = 'START_TIME',
  SubmissionPeriod = 'SUBMISSION_PERIOD',
  TournamentId = 'TOURNAMENT_ID',
  WinnersCount = 'WINNERS_COUNT'
}

export type Ls_Tournaments_V0_TournamentPrize = {
  __typename?: 'ls_tournaments_v0_TournamentPrize';
  claimed?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  payout_position?: Maybe<Scalars['u8']['output']>;
  prize_key?: Maybe<Scalars['u64']['output']>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
  token_data_type?: Maybe<Ls_Tournaments_V0_TokenDataType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Ls_Tournaments_V0_TournamentPrizeConnection = {
  __typename?: 'ls_tournaments_v0_TournamentPrizeConnection';
  edges?: Maybe<Array<Maybe<Ls_Tournaments_V0_TournamentPrizeEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ls_Tournaments_V0_TournamentPrizeEdge = {
  __typename?: 'ls_tournaments_v0_TournamentPrizeEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ls_Tournaments_V0_TournamentPrize>;
};

export type Ls_Tournaments_V0_TournamentPrizeOrder = {
  direction: OrderDirection;
  field: Ls_Tournaments_V0_TournamentPrizeOrderField;
};

export enum Ls_Tournaments_V0_TournamentPrizeOrderField {
  Claimed = 'CLAIMED',
  PayoutPosition = 'PAYOUT_POSITION',
  PrizeKey = 'PRIZE_KEY',
  Token = 'TOKEN',
  TokenDataType = 'TOKEN_DATA_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Ls_Tournaments_V0_TournamentPrizeWhereInput = {
  claimed?: InputMaybe<Scalars['bool']['input']>;
  payout_position?: InputMaybe<Scalars['u8']['input']>;
  payout_positionEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionLIKE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  prize_key?: InputMaybe<Scalars['u64']['input']>;
  prize_keyEQ?: InputMaybe<Scalars['u64']['input']>;
  prize_keyGT?: InputMaybe<Scalars['u64']['input']>;
  prize_keyGTE?: InputMaybe<Scalars['u64']['input']>;
  prize_keyIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  prize_keyLIKE?: InputMaybe<Scalars['u64']['input']>;
  prize_keyLT?: InputMaybe<Scalars['u64']['input']>;
  prize_keyLTE?: InputMaybe<Scalars['u64']['input']>;
  prize_keyNEQ?: InputMaybe<Scalars['u64']['input']>;
  prize_keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  prize_keyNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  token?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  tokenLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  tokenNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ls_Tournaments_V0_TournamentScores = {
  __typename?: 'ls_tournaments_v0_TournamentScores';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  top_score_ids?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Ls_Tournaments_V0_TournamentScoresConnection = {
  __typename?: 'ls_tournaments_v0_TournamentScoresConnection';
  edges?: Maybe<Array<Maybe<Ls_Tournaments_V0_TournamentScoresEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ls_Tournaments_V0_TournamentScoresEdge = {
  __typename?: 'ls_tournaments_v0_TournamentScoresEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ls_Tournaments_V0_TournamentScores>;
};

export type Ls_Tournaments_V0_TournamentScoresOrder = {
  direction: OrderDirection;
  field: Ls_Tournaments_V0_TournamentScoresOrderField;
};

export enum Ls_Tournaments_V0_TournamentScoresOrderField {
  TopScoreIds = 'TOP_SCORE_IDS',
  TournamentId = 'TOURNAMENT_ID'
}

export type Ls_Tournaments_V0_TournamentScoresWhereInput = {
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ls_Tournaments_V0_TournamentStartsAddress = {
  __typename?: 'ls_tournaments_v0_TournamentStartsAddress';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  start_count?: Maybe<Scalars['u64']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Ls_Tournaments_V0_TournamentStartsAddressConnection = {
  __typename?: 'ls_tournaments_v0_TournamentStartsAddressConnection';
  edges?: Maybe<Array<Maybe<Ls_Tournaments_V0_TournamentStartsAddressEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ls_Tournaments_V0_TournamentStartsAddressEdge = {
  __typename?: 'ls_tournaments_v0_TournamentStartsAddressEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ls_Tournaments_V0_TournamentStartsAddress>;
};

export type Ls_Tournaments_V0_TournamentStartsAddressOrder = {
  direction: OrderDirection;
  field: Ls_Tournaments_V0_TournamentStartsAddressOrderField;
};

export enum Ls_Tournaments_V0_TournamentStartsAddressOrderField {
  Address = 'ADDRESS',
  StartCount = 'START_COUNT',
  TournamentId = 'TOURNAMENT_ID'
}

export type Ls_Tournaments_V0_TournamentStartsAddressWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  start_count?: InputMaybe<Scalars['u64']['input']>;
  start_countEQ?: InputMaybe<Scalars['u64']['input']>;
  start_countGT?: InputMaybe<Scalars['u64']['input']>;
  start_countGTE?: InputMaybe<Scalars['u64']['input']>;
  start_countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  start_countLIKE?: InputMaybe<Scalars['u64']['input']>;
  start_countLT?: InputMaybe<Scalars['u64']['input']>;
  start_countLTE?: InputMaybe<Scalars['u64']['input']>;
  start_countNEQ?: InputMaybe<Scalars['u64']['input']>;
  start_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  start_countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ls_Tournaments_V0_TournamentTotals = {
  __typename?: 'ls_tournaments_v0_TournamentTotals';
  contract?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  total_prizes?: Maybe<Scalars['u64']['output']>;
  total_tournaments?: Maybe<Scalars['u64']['output']>;
};

export type Ls_Tournaments_V0_TournamentTotalsConnection = {
  __typename?: 'ls_tournaments_v0_TournamentTotalsConnection';
  edges?: Maybe<Array<Maybe<Ls_Tournaments_V0_TournamentTotalsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Ls_Tournaments_V0_TournamentTotalsEdge = {
  __typename?: 'ls_tournaments_v0_TournamentTotalsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Ls_Tournaments_V0_TournamentTotals>;
};

export type Ls_Tournaments_V0_TournamentTotalsOrder = {
  direction: OrderDirection;
  field: Ls_Tournaments_V0_TournamentTotalsOrderField;
};

export enum Ls_Tournaments_V0_TournamentTotalsOrderField {
  Contract = 'CONTRACT',
  TotalPrizes = 'TOTAL_PRIZES',
  TotalTournaments = 'TOTAL_TOURNAMENTS'
}

export type Ls_Tournaments_V0_TournamentTotalsWhereInput = {
  contract?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contractLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contractNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  total_prizes?: InputMaybe<Scalars['u64']['input']>;
  total_prizesEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_tournaments?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Ls_Tournaments_V0_TournamentWhereInput = {
  creator?: InputMaybe<Scalars['ContractAddress']['input']>;
  creatorEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creatorGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creatorGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creatorIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creatorLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creatorLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creatorLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creatorNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creatorNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creatorNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  end_time?: InputMaybe<Scalars['u64']['input']>;
  end_timeEQ?: InputMaybe<Scalars['u64']['input']>;
  end_timeGT?: InputMaybe<Scalars['u64']['input']>;
  end_timeGTE?: InputMaybe<Scalars['u64']['input']>;
  end_timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  end_timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  end_timeLT?: InputMaybe<Scalars['u64']['input']>;
  end_timeLTE?: InputMaybe<Scalars['u64']['input']>;
  end_timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  end_timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  end_timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  registration_end_time?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timeEQ?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timeGT?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timeGTE?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  registration_end_timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timeLT?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timeLTE?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  registration_end_timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  registration_start_time?: InputMaybe<Scalars['u64']['input']>;
  registration_start_timeEQ?: InputMaybe<Scalars['u64']['input']>;
  registration_start_timeGT?: InputMaybe<Scalars['u64']['input']>;
  registration_start_timeGTE?: InputMaybe<Scalars['u64']['input']>;
  registration_start_timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  registration_start_timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  registration_start_timeLT?: InputMaybe<Scalars['u64']['input']>;
  registration_start_timeLTE?: InputMaybe<Scalars['u64']['input']>;
  registration_start_timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  registration_start_timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  registration_start_timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  start_time?: InputMaybe<Scalars['u64']['input']>;
  start_timeEQ?: InputMaybe<Scalars['u64']['input']>;
  start_timeGT?: InputMaybe<Scalars['u64']['input']>;
  start_timeGTE?: InputMaybe<Scalars['u64']['input']>;
  start_timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  start_timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  start_timeLT?: InputMaybe<Scalars['u64']['input']>;
  start_timeLTE?: InputMaybe<Scalars['u64']['input']>;
  start_timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  start_timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  start_timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  submission_period?: InputMaybe<Scalars['u64']['input']>;
  submission_periodEQ?: InputMaybe<Scalars['u64']['input']>;
  submission_periodGT?: InputMaybe<Scalars['u64']['input']>;
  submission_periodGTE?: InputMaybe<Scalars['u64']['input']>;
  submission_periodIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  submission_periodLIKE?: InputMaybe<Scalars['u64']['input']>;
  submission_periodLT?: InputMaybe<Scalars['u64']['input']>;
  submission_periodLTE?: InputMaybe<Scalars['u64']['input']>;
  submission_periodNEQ?: InputMaybe<Scalars['u64']['input']>;
  submission_periodNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  submission_periodNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  winners_count?: InputMaybe<Scalars['u8']['input']>;
  winners_countEQ?: InputMaybe<Scalars['u8']['input']>;
  winners_countGT?: InputMaybe<Scalars['u8']['input']>;
  winners_countGTE?: InputMaybe<Scalars['u8']['input']>;
  winners_countIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  winners_countLIKE?: InputMaybe<Scalars['u8']['input']>;
  winners_countLT?: InputMaybe<Scalars['u8']['input']>;
  winners_countLTE?: InputMaybe<Scalars['u8']['input']>;
  winners_countNEQ?: InputMaybe<Scalars['u8']['input']>;
  winners_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  winners_countNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Lst_Dbg_Erc20Data = {
  __typename?: 'lst_dbg_ERC20Data';
  token_amount?: Maybe<Scalars['u128']['output']>;
};

export type Lst_Dbg_Erc721Data = {
  __typename?: 'lst_dbg_ERC721Data';
  token_id?: Maybe<Scalars['u128']['output']>;
};

export type Lst_Dbg_EntryCriteria = {
  __typename?: 'lst_dbg_EntryCriteria';
  entry_count?: Maybe<Scalars['u64']['output']>;
  token_id?: Maybe<Scalars['u128']['output']>;
};

export type Lst_Dbg_GatedEntryType = {
  __typename?: 'lst_dbg_GatedEntryType';
  criteria?: Maybe<Array<Maybe<Lst_Dbg_EntryCriteria>>>;
  option?: Maybe<Scalars['Enum']['output']>;
  uniform?: Maybe<Scalars['u64']['output']>;
};

export type Lst_Dbg_GatedToken = {
  __typename?: 'lst_dbg_GatedToken';
  entry_type?: Maybe<Lst_Dbg_GatedEntryType>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
};

export type Lst_Dbg_GatedType = {
  __typename?: 'lst_dbg_GatedType';
  address?: Maybe<Array<Maybe<Scalars['ContractAddress']['output']>>>;
  option?: Maybe<Scalars['Enum']['output']>;
  token?: Maybe<Lst_Dbg_GatedToken>;
  tournament?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
};

export type Lst_Dbg_OptionGatedType = {
  __typename?: 'lst_dbg_OptionGatedType';
  Some?: Maybe<Lst_Dbg_GatedType>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Lst_Dbg_OptionPremium = {
  __typename?: 'lst_dbg_OptionPremium';
  Some?: Maybe<Lst_Dbg_Premium>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Lst_Dbg_Premium = {
  __typename?: 'lst_dbg_Premium';
  creator_fee?: Maybe<Scalars['u8']['output']>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
  token_amount?: Maybe<Scalars['u128']['output']>;
  token_distribution?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
};

export type Lst_Dbg_Token = {
  __typename?: 'lst_dbg_Token';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  is_registered?: Maybe<Scalars['bool']['output']>;
  name?: Maybe<Scalars['ByteArray']['output']>;
  symbol?: Maybe<Scalars['ByteArray']['output']>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
  token_data_type?: Maybe<Lst_Dbg_TokenDataType>;
};

export type Lst_Dbg_TokenConnection = {
  __typename?: 'lst_dbg_TokenConnection';
  edges?: Maybe<Array<Maybe<Lst_Dbg_TokenEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Lst_Dbg_TokenDataType = {
  __typename?: 'lst_dbg_TokenDataType';
  erc20?: Maybe<Lst_Dbg_Erc20Data>;
  erc721?: Maybe<Lst_Dbg_Erc721Data>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Lst_Dbg_TokenEdge = {
  __typename?: 'lst_dbg_TokenEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Lst_Dbg_Token>;
};

export type Lst_Dbg_TokenOrder = {
  direction: OrderDirection;
  field: Lst_Dbg_TokenOrderField;
};

export enum Lst_Dbg_TokenOrderField {
  IsRegistered = 'IS_REGISTERED',
  Name = 'NAME',
  Symbol = 'SYMBOL',
  Token = 'TOKEN',
  TokenDataType = 'TOKEN_DATA_TYPE'
}

export type Lst_Dbg_TokenWhereInput = {
  is_registered?: InputMaybe<Scalars['bool']['input']>;
  name?: InputMaybe<Scalars['ByteArray']['input']>;
  nameEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbol?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  token?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  tokenLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  tokenNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
};

export type Lst_Dbg_Tournament = {
  __typename?: 'lst_dbg_Tournament';
  creator?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  end_time?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entry_premium?: Maybe<Lst_Dbg_OptionPremium>;
  eventMessage?: Maybe<World__EventMessage>;
  gated_type?: Maybe<Lst_Dbg_OptionGatedType>;
  name?: Maybe<Scalars['felt252']['output']>;
  registration_end_time?: Maybe<Scalars['u64']['output']>;
  registration_start_time?: Maybe<Scalars['u64']['output']>;
  start_time?: Maybe<Scalars['u64']['output']>;
  submission_period?: Maybe<Scalars['u64']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
  winners_count?: Maybe<Scalars['u8']['output']>;
};

export type Lst_Dbg_TournamentConfig = {
  __typename?: 'lst_dbg_TournamentConfig';
  blobert?: Maybe<Scalars['ContractAddress']['output']>;
  contract?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eth?: Maybe<Scalars['ContractAddress']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  golden_token?: Maybe<Scalars['ContractAddress']['output']>;
  loot_survivor?: Maybe<Scalars['ContractAddress']['output']>;
  lords?: Maybe<Scalars['ContractAddress']['output']>;
  oracle?: Maybe<Scalars['ContractAddress']['output']>;
  safe_mode?: Maybe<Scalars['bool']['output']>;
  test_mode?: Maybe<Scalars['bool']['output']>;
};

export type Lst_Dbg_TournamentConfigConnection = {
  __typename?: 'lst_dbg_TournamentConfigConnection';
  edges?: Maybe<Array<Maybe<Lst_Dbg_TournamentConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Lst_Dbg_TournamentConfigEdge = {
  __typename?: 'lst_dbg_TournamentConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Lst_Dbg_TournamentConfig>;
};

export type Lst_Dbg_TournamentConfigOrder = {
  direction: OrderDirection;
  field: Lst_Dbg_TournamentConfigOrderField;
};

export enum Lst_Dbg_TournamentConfigOrderField {
  Blobert = 'BLOBERT',
  Contract = 'CONTRACT',
  Eth = 'ETH',
  GoldenToken = 'GOLDEN_TOKEN',
  LootSurvivor = 'LOOT_SURVIVOR',
  Lords = 'LORDS',
  Oracle = 'ORACLE',
  SafeMode = 'SAFE_MODE',
  TestMode = 'TEST_MODE'
}

export type Lst_Dbg_TournamentConfigWhereInput = {
  blobert?: InputMaybe<Scalars['ContractAddress']['input']>;
  blobertEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  blobertGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  blobertGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  blobertIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  blobertLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  blobertLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  blobertLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  blobertNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  blobertNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  blobertNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contractLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contractNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  eth?: InputMaybe<Scalars['ContractAddress']['input']>;
  ethEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  ethGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  ethGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  ethIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  ethLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  ethLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  ethLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  ethNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  ethNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  ethNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_token?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_tokenEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_tokenGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_tokenGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_tokenIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  golden_tokenLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_tokenLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_tokenLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_tokenNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  golden_tokenNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  golden_tokenNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivor?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivorEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivorGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivorGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivorIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  loot_survivorLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivorLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivorLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivorNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  loot_survivorNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  loot_survivorNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  lords?: InputMaybe<Scalars['ContractAddress']['input']>;
  lordsEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  lordsGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  lordsGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  lordsIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  lordsLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  lordsLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  lordsLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  lordsNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  lordsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  lordsNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracle?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracleEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracleGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracleGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracleIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  oracleLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracleLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracleLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracleNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  oracleNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  oracleNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  safe_mode?: InputMaybe<Scalars['bool']['input']>;
  test_mode?: InputMaybe<Scalars['bool']['input']>;
};

export type Lst_Dbg_TournamentConnection = {
  __typename?: 'lst_dbg_TournamentConnection';
  edges?: Maybe<Array<Maybe<Lst_Dbg_TournamentEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Lst_Dbg_TournamentEdge = {
  __typename?: 'lst_dbg_TournamentEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Lst_Dbg_Tournament>;
};

export type Lst_Dbg_TournamentEntries = {
  __typename?: 'lst_dbg_TournamentEntries';
  distribute_called?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  entry_count?: Maybe<Scalars['u64']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  premiums_formatted?: Maybe<Scalars['bool']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Lst_Dbg_TournamentEntriesAddress = {
  __typename?: 'lst_dbg_TournamentEntriesAddress';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  entry_count?: Maybe<Scalars['u64']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Lst_Dbg_TournamentEntriesAddressConnection = {
  __typename?: 'lst_dbg_TournamentEntriesAddressConnection';
  edges?: Maybe<Array<Maybe<Lst_Dbg_TournamentEntriesAddressEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Lst_Dbg_TournamentEntriesAddressEdge = {
  __typename?: 'lst_dbg_TournamentEntriesAddressEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Lst_Dbg_TournamentEntriesAddress>;
};

export type Lst_Dbg_TournamentEntriesAddressOrder = {
  direction: OrderDirection;
  field: Lst_Dbg_TournamentEntriesAddressOrderField;
};

export enum Lst_Dbg_TournamentEntriesAddressOrderField {
  Address = 'ADDRESS',
  EntryCount = 'ENTRY_COUNT',
  TournamentId = 'TOURNAMENT_ID'
}

export type Lst_Dbg_TournamentEntriesAddressWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  entry_count?: InputMaybe<Scalars['u64']['input']>;
  entry_countEQ?: InputMaybe<Scalars['u64']['input']>;
  entry_countGT?: InputMaybe<Scalars['u64']['input']>;
  entry_countGTE?: InputMaybe<Scalars['u64']['input']>;
  entry_countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  entry_countLIKE?: InputMaybe<Scalars['u64']['input']>;
  entry_countLT?: InputMaybe<Scalars['u64']['input']>;
  entry_countLTE?: InputMaybe<Scalars['u64']['input']>;
  entry_countNEQ?: InputMaybe<Scalars['u64']['input']>;
  entry_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  entry_countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Lst_Dbg_TournamentEntriesConnection = {
  __typename?: 'lst_dbg_TournamentEntriesConnection';
  edges?: Maybe<Array<Maybe<Lst_Dbg_TournamentEntriesEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Lst_Dbg_TournamentEntriesEdge = {
  __typename?: 'lst_dbg_TournamentEntriesEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Lst_Dbg_TournamentEntries>;
};

export type Lst_Dbg_TournamentEntriesOrder = {
  direction: OrderDirection;
  field: Lst_Dbg_TournamentEntriesOrderField;
};

export enum Lst_Dbg_TournamentEntriesOrderField {
  DistributeCalled = 'DISTRIBUTE_CALLED',
  EntryCount = 'ENTRY_COUNT',
  PremiumsFormatted = 'PREMIUMS_FORMATTED',
  TournamentId = 'TOURNAMENT_ID'
}

export type Lst_Dbg_TournamentEntriesWhereInput = {
  distribute_called?: InputMaybe<Scalars['bool']['input']>;
  entry_count?: InputMaybe<Scalars['u64']['input']>;
  entry_countEQ?: InputMaybe<Scalars['u64']['input']>;
  entry_countGT?: InputMaybe<Scalars['u64']['input']>;
  entry_countGTE?: InputMaybe<Scalars['u64']['input']>;
  entry_countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  entry_countLIKE?: InputMaybe<Scalars['u64']['input']>;
  entry_countLT?: InputMaybe<Scalars['u64']['input']>;
  entry_countLTE?: InputMaybe<Scalars['u64']['input']>;
  entry_countNEQ?: InputMaybe<Scalars['u64']['input']>;
  entry_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  entry_countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  premiums_formatted?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Lst_Dbg_TournamentEntryAddresses = {
  __typename?: 'lst_dbg_TournamentEntryAddresses';
  addresses?: Maybe<Array<Maybe<Scalars['ContractAddress']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Lst_Dbg_TournamentEntryAddressesConnection = {
  __typename?: 'lst_dbg_TournamentEntryAddressesConnection';
  edges?: Maybe<Array<Maybe<Lst_Dbg_TournamentEntryAddressesEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Lst_Dbg_TournamentEntryAddressesEdge = {
  __typename?: 'lst_dbg_TournamentEntryAddressesEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Lst_Dbg_TournamentEntryAddresses>;
};

export type Lst_Dbg_TournamentEntryAddressesOrder = {
  direction: OrderDirection;
  field: Lst_Dbg_TournamentEntryAddressesOrderField;
};

export enum Lst_Dbg_TournamentEntryAddressesOrderField {
  Addresses = 'ADDRESSES',
  TournamentId = 'TOURNAMENT_ID'
}

export type Lst_Dbg_TournamentEntryAddressesWhereInput = {
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Lst_Dbg_TournamentGame = {
  __typename?: 'lst_dbg_TournamentGame';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  status?: Maybe<Scalars['Enum']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Lst_Dbg_TournamentGameConnection = {
  __typename?: 'lst_dbg_TournamentGameConnection';
  edges?: Maybe<Array<Maybe<Lst_Dbg_TournamentGameEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Lst_Dbg_TournamentGameEdge = {
  __typename?: 'lst_dbg_TournamentGameEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Lst_Dbg_TournamentGame>;
};

export type Lst_Dbg_TournamentGameOrder = {
  direction: OrderDirection;
  field: Lst_Dbg_TournamentGameOrderField;
};

export enum Lst_Dbg_TournamentGameOrderField {
  Address = 'ADDRESS',
  GameId = 'GAME_ID',
  Status = 'STATUS',
  TournamentId = 'TOURNAMENT_ID'
}

export type Lst_Dbg_TournamentGameWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  status?: InputMaybe<Scalars['Enum']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Lst_Dbg_TournamentOrder = {
  direction: OrderDirection;
  field: Lst_Dbg_TournamentOrderField;
};

export enum Lst_Dbg_TournamentOrderField {
  Creator = 'CREATOR',
  Description = 'DESCRIPTION',
  EndTime = 'END_TIME',
  EntryPremium = 'ENTRY_PREMIUM',
  GatedType = 'GATED_TYPE',
  Name = 'NAME',
  RegistrationEndTime = 'REGISTRATION_END_TIME',
  RegistrationStartTime = 'REGISTRATION_START_TIME',
  StartTime = 'START_TIME',
  SubmissionPeriod = 'SUBMISSION_PERIOD',
  TournamentId = 'TOURNAMENT_ID',
  WinnersCount = 'WINNERS_COUNT'
}

export type Lst_Dbg_TournamentPrize = {
  __typename?: 'lst_dbg_TournamentPrize';
  claimed?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  payout_position?: Maybe<Scalars['u8']['output']>;
  prize_key?: Maybe<Scalars['u64']['output']>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
  token_data_type?: Maybe<Lst_Dbg_TokenDataType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Lst_Dbg_TournamentPrizeConnection = {
  __typename?: 'lst_dbg_TournamentPrizeConnection';
  edges?: Maybe<Array<Maybe<Lst_Dbg_TournamentPrizeEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Lst_Dbg_TournamentPrizeEdge = {
  __typename?: 'lst_dbg_TournamentPrizeEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Lst_Dbg_TournamentPrize>;
};

export type Lst_Dbg_TournamentPrizeOrder = {
  direction: OrderDirection;
  field: Lst_Dbg_TournamentPrizeOrderField;
};

export enum Lst_Dbg_TournamentPrizeOrderField {
  Claimed = 'CLAIMED',
  PayoutPosition = 'PAYOUT_POSITION',
  PrizeKey = 'PRIZE_KEY',
  Token = 'TOKEN',
  TokenDataType = 'TOKEN_DATA_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Lst_Dbg_TournamentPrizeWhereInput = {
  claimed?: InputMaybe<Scalars['bool']['input']>;
  payout_position?: InputMaybe<Scalars['u8']['input']>;
  payout_positionEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionLIKE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  prize_key?: InputMaybe<Scalars['u64']['input']>;
  prize_keyEQ?: InputMaybe<Scalars['u64']['input']>;
  prize_keyGT?: InputMaybe<Scalars['u64']['input']>;
  prize_keyGTE?: InputMaybe<Scalars['u64']['input']>;
  prize_keyIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  prize_keyLIKE?: InputMaybe<Scalars['u64']['input']>;
  prize_keyLT?: InputMaybe<Scalars['u64']['input']>;
  prize_keyLTE?: InputMaybe<Scalars['u64']['input']>;
  prize_keyNEQ?: InputMaybe<Scalars['u64']['input']>;
  prize_keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  prize_keyNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  token?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  tokenLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  tokenNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Lst_Dbg_TournamentScores = {
  __typename?: 'lst_dbg_TournamentScores';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  top_score_ids?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Lst_Dbg_TournamentScoresConnection = {
  __typename?: 'lst_dbg_TournamentScoresConnection';
  edges?: Maybe<Array<Maybe<Lst_Dbg_TournamentScoresEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Lst_Dbg_TournamentScoresEdge = {
  __typename?: 'lst_dbg_TournamentScoresEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Lst_Dbg_TournamentScores>;
};

export type Lst_Dbg_TournamentScoresOrder = {
  direction: OrderDirection;
  field: Lst_Dbg_TournamentScoresOrderField;
};

export enum Lst_Dbg_TournamentScoresOrderField {
  TopScoreIds = 'TOP_SCORE_IDS',
  TournamentId = 'TOURNAMENT_ID'
}

export type Lst_Dbg_TournamentScoresWhereInput = {
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Lst_Dbg_TournamentStartsAddress = {
  __typename?: 'lst_dbg_TournamentStartsAddress';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  start_count?: Maybe<Scalars['u64']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Lst_Dbg_TournamentStartsAddressConnection = {
  __typename?: 'lst_dbg_TournamentStartsAddressConnection';
  edges?: Maybe<Array<Maybe<Lst_Dbg_TournamentStartsAddressEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Lst_Dbg_TournamentStartsAddressEdge = {
  __typename?: 'lst_dbg_TournamentStartsAddressEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Lst_Dbg_TournamentStartsAddress>;
};

export type Lst_Dbg_TournamentStartsAddressOrder = {
  direction: OrderDirection;
  field: Lst_Dbg_TournamentStartsAddressOrderField;
};

export enum Lst_Dbg_TournamentStartsAddressOrderField {
  Address = 'ADDRESS',
  StartCount = 'START_COUNT',
  TournamentId = 'TOURNAMENT_ID'
}

export type Lst_Dbg_TournamentStartsAddressWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  start_count?: InputMaybe<Scalars['u64']['input']>;
  start_countEQ?: InputMaybe<Scalars['u64']['input']>;
  start_countGT?: InputMaybe<Scalars['u64']['input']>;
  start_countGTE?: InputMaybe<Scalars['u64']['input']>;
  start_countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  start_countLIKE?: InputMaybe<Scalars['u64']['input']>;
  start_countLT?: InputMaybe<Scalars['u64']['input']>;
  start_countLTE?: InputMaybe<Scalars['u64']['input']>;
  start_countNEQ?: InputMaybe<Scalars['u64']['input']>;
  start_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  start_countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Lst_Dbg_TournamentTotals = {
  __typename?: 'lst_dbg_TournamentTotals';
  contract?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  total_prizes?: Maybe<Scalars['u64']['output']>;
  total_tournaments?: Maybe<Scalars['u64']['output']>;
};

export type Lst_Dbg_TournamentTotalsConnection = {
  __typename?: 'lst_dbg_TournamentTotalsConnection';
  edges?: Maybe<Array<Maybe<Lst_Dbg_TournamentTotalsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Lst_Dbg_TournamentTotalsEdge = {
  __typename?: 'lst_dbg_TournamentTotalsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Lst_Dbg_TournamentTotals>;
};

export type Lst_Dbg_TournamentTotalsOrder = {
  direction: OrderDirection;
  field: Lst_Dbg_TournamentTotalsOrderField;
};

export enum Lst_Dbg_TournamentTotalsOrderField {
  Contract = 'CONTRACT',
  TotalPrizes = 'TOTAL_PRIZES',
  TotalTournaments = 'TOTAL_TOURNAMENTS'
}

export type Lst_Dbg_TournamentTotalsWhereInput = {
  contract?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contractLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contractNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contractNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  total_prizes?: InputMaybe<Scalars['u64']['input']>;
  total_prizesEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_tournaments?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Lst_Dbg_TournamentWhereInput = {
  creator?: InputMaybe<Scalars['ContractAddress']['input']>;
  creatorEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creatorGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creatorGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creatorIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creatorLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creatorLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creatorLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creatorNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creatorNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creatorNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  end_time?: InputMaybe<Scalars['u64']['input']>;
  end_timeEQ?: InputMaybe<Scalars['u64']['input']>;
  end_timeGT?: InputMaybe<Scalars['u64']['input']>;
  end_timeGTE?: InputMaybe<Scalars['u64']['input']>;
  end_timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  end_timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  end_timeLT?: InputMaybe<Scalars['u64']['input']>;
  end_timeLTE?: InputMaybe<Scalars['u64']['input']>;
  end_timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  end_timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  end_timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  registration_end_time?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timeEQ?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timeGT?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timeGTE?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  registration_end_timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timeLT?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timeLTE?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  registration_end_timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  registration_start_time?: InputMaybe<Scalars['u64']['input']>;
  registration_start_timeEQ?: InputMaybe<Scalars['u64']['input']>;
  registration_start_timeGT?: InputMaybe<Scalars['u64']['input']>;
  registration_start_timeGTE?: InputMaybe<Scalars['u64']['input']>;
  registration_start_timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  registration_start_timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  registration_start_timeLT?: InputMaybe<Scalars['u64']['input']>;
  registration_start_timeLTE?: InputMaybe<Scalars['u64']['input']>;
  registration_start_timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  registration_start_timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  registration_start_timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  start_time?: InputMaybe<Scalars['u64']['input']>;
  start_timeEQ?: InputMaybe<Scalars['u64']['input']>;
  start_timeGT?: InputMaybe<Scalars['u64']['input']>;
  start_timeGTE?: InputMaybe<Scalars['u64']['input']>;
  start_timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  start_timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  start_timeLT?: InputMaybe<Scalars['u64']['input']>;
  start_timeLTE?: InputMaybe<Scalars['u64']['input']>;
  start_timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  start_timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  start_timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  submission_period?: InputMaybe<Scalars['u64']['input']>;
  submission_periodEQ?: InputMaybe<Scalars['u64']['input']>;
  submission_periodGT?: InputMaybe<Scalars['u64']['input']>;
  submission_periodGTE?: InputMaybe<Scalars['u64']['input']>;
  submission_periodIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  submission_periodLIKE?: InputMaybe<Scalars['u64']['input']>;
  submission_periodLT?: InputMaybe<Scalars['u64']['input']>;
  submission_periodLTE?: InputMaybe<Scalars['u64']['input']>;
  submission_periodNEQ?: InputMaybe<Scalars['u64']['input']>;
  submission_periodNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  submission_periodNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  winners_count?: InputMaybe<Scalars['u8']['input']>;
  winners_countEQ?: InputMaybe<Scalars['u8']['input']>;
  winners_countGT?: InputMaybe<Scalars['u8']['input']>;
  winners_countGTE?: InputMaybe<Scalars['u8']['input']>;
  winners_countIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  winners_countLIKE?: InputMaybe<Scalars['u8']['input']>;
  winners_countLT?: InputMaybe<Scalars['u8']['input']>;
  winners_countLTE?: InputMaybe<Scalars['u8']['input']>;
  winners_countNEQ?: InputMaybe<Scalars['u8']['input']>;
  winners_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  winners_countNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type Pg_Erc20Data = {
  __typename?: 'pg_ERC20Data';
  amount?: Maybe<Scalars['u128']['output']>;
};

export type Pg_Erc721Data = {
  __typename?: 'pg_ERC721Data';
  id?: Maybe<Scalars['u128']['output']>;
};

export type Pg_EntryCount = {
  __typename?: 'pg_EntryCount';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Pg_EntryCountConnection = {
  __typename?: 'pg_EntryCountConnection';
  edges?: Maybe<Array<Maybe<Pg_EntryCountEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_EntryCountEdge = {
  __typename?: 'pg_EntryCountEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_EntryCount>;
};

export type Pg_EntryCountOrder = {
  direction: OrderDirection;
  field: Pg_EntryCountOrderField;
};

export enum Pg_EntryCountOrderField {
  Count = 'COUNT',
  TournamentId = 'TOURNAMENT_ID'
}

export type Pg_EntryCountWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Pg_EntryFee = {
  __typename?: 'pg_EntryFee';
  amount?: Maybe<Scalars['u128']['output']>;
  distribution?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  game_creator_share?: Maybe<Pg_Optionu8>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  tournament_creator_share?: Maybe<Pg_Optionu8>;
};

export type Pg_EntryRequirement = {
  __typename?: 'pg_EntryRequirement';
  allowlist?: Maybe<Array<Maybe<Scalars['ContractAddress']['output']>>>;
  option?: Maybe<Scalars['Enum']['output']>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
  tournament?: Maybe<Pg_TournamentType>;
};

export type Pg_GameConfig = {
  __typename?: 'pg_GameConfig';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  prize_spots?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
};

export type Pg_GameCounter = {
  __typename?: 'pg_GameCounter';
  count?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Pg_GameCounterConnection = {
  __typename?: 'pg_GameCounterConnection';
  edges?: Maybe<Array<Maybe<Pg_GameCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_GameCounterEdge = {
  __typename?: 'pg_GameCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_GameCounter>;
};

export type Pg_GameCounterOrder = {
  direction: OrderDirection;
  field: Pg_GameCounterOrderField;
};

export enum Pg_GameCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Pg_GameCounterWhereInput = {
  count?: InputMaybe<Scalars['u64']['input']>;
  countEQ?: InputMaybe<Scalars['u64']['input']>;
  countGT?: InputMaybe<Scalars['u64']['input']>;
  countGTE?: InputMaybe<Scalars['u64']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u64']['input']>;
  countLT?: InputMaybe<Scalars['u64']['input']>;
  countLTE?: InputMaybe<Scalars['u64']['input']>;
  countNEQ?: InputMaybe<Scalars['u64']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Pg_GameMetadata = {
  __typename?: 'pg_GameMetadata';
  contract_address?: Maybe<Scalars['ContractAddress']['output']>;
  creator_address?: Maybe<Scalars['ContractAddress']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  developer?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  genre?: Maybe<Scalars['felt252']['output']>;
  image?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  publisher?: Maybe<Scalars['felt252']['output']>;
};

export type Pg_GameMetadataConnection = {
  __typename?: 'pg_GameMetadataConnection';
  edges?: Maybe<Array<Maybe<Pg_GameMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_GameMetadataEdge = {
  __typename?: 'pg_GameMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_GameMetadata>;
};

export type Pg_GameMetadataOrder = {
  direction: OrderDirection;
  field: Pg_GameMetadataOrderField;
};

export enum Pg_GameMetadataOrderField {
  ContractAddress = 'CONTRACT_ADDRESS',
  CreatorAddress = 'CREATOR_ADDRESS',
  Description = 'DESCRIPTION',
  Developer = 'DEVELOPER',
  Genre = 'GENRE',
  Image = 'IMAGE',
  Name = 'NAME',
  Publisher = 'PUBLISHER'
}

export type Pg_GameMetadataWhereInput = {
  contract_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  contract_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  contract_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  creator_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  developer?: InputMaybe<Scalars['felt252']['input']>;
  developerEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerGT?: InputMaybe<Scalars['felt252']['input']>;
  developerGTE?: InputMaybe<Scalars['felt252']['input']>;
  developerIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerLIKE?: InputMaybe<Scalars['felt252']['input']>;
  developerLT?: InputMaybe<Scalars['felt252']['input']>;
  developerLTE?: InputMaybe<Scalars['felt252']['input']>;
  developerNEQ?: InputMaybe<Scalars['felt252']['input']>;
  developerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  developerNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genre?: InputMaybe<Scalars['felt252']['input']>;
  genreEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreGT?: InputMaybe<Scalars['felt252']['input']>;
  genreGTE?: InputMaybe<Scalars['felt252']['input']>;
  genreIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreLIKE?: InputMaybe<Scalars['felt252']['input']>;
  genreLT?: InputMaybe<Scalars['felt252']['input']>;
  genreLTE?: InputMaybe<Scalars['felt252']['input']>;
  genreNEQ?: InputMaybe<Scalars['felt252']['input']>;
  genreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  genreNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  image?: InputMaybe<Scalars['ByteArray']['input']>;
  imageEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLT?: InputMaybe<Scalars['ByteArray']['input']>;
  imageLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  imageNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  imageNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisher?: InputMaybe<Scalars['felt252']['input']>;
  publisherEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherGT?: InputMaybe<Scalars['felt252']['input']>;
  publisherGTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherLIKE?: InputMaybe<Scalars['felt252']['input']>;
  publisherLT?: InputMaybe<Scalars['felt252']['input']>;
  publisherLTE?: InputMaybe<Scalars['felt252']['input']>;
  publisherNEQ?: InputMaybe<Scalars['felt252']['input']>;
  publisherNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  publisherNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Pg_Leaderboard = {
  __typename?: 'pg_Leaderboard';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  token_ids?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Pg_LeaderboardConnection = {
  __typename?: 'pg_LeaderboardConnection';
  edges?: Maybe<Array<Maybe<Pg_LeaderboardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_LeaderboardEdge = {
  __typename?: 'pg_LeaderboardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_Leaderboard>;
};

export type Pg_LeaderboardOrder = {
  direction: OrderDirection;
  field: Pg_LeaderboardOrderField;
};

export enum Pg_LeaderboardOrderField {
  TokenIds = 'TOKEN_IDS',
  TournamentId = 'TOURNAMENT_ID'
}

export type Pg_LeaderboardWhereInput = {
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Pg_Lifecycle = {
  __typename?: 'pg_Lifecycle';
  end?: Maybe<Pg_Optionu64>;
  mint?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Pg_Optionu64>;
};

export type Pg_Metadata = {
  __typename?: 'pg_Metadata';
  description?: Maybe<Scalars['ByteArray']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Pg_OptionEntryFee = {
  __typename?: 'pg_OptionEntryFee';
  Some?: Maybe<Pg_EntryFee>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Pg_OptionEntryRequirement = {
  __typename?: 'pg_OptionEntryRequirement';
  Some?: Maybe<Pg_EntryRequirement>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Pg_OptionPeriod = {
  __typename?: 'pg_OptionPeriod';
  Some?: Maybe<Pg_Period>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Pg_Optionu8 = {
  __typename?: 'pg_Optionu8';
  Some?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Pg_Optionu64 = {
  __typename?: 'pg_Optionu64';
  Some?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Pg_Period = {
  __typename?: 'pg_Period';
  end?: Maybe<Scalars['u64']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
};

export type Pg_PlatformMetrics = {
  __typename?: 'pg_PlatformMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_tournaments?: Maybe<Scalars['u64']['output']>;
};

export type Pg_PlatformMetricsConnection = {
  __typename?: 'pg_PlatformMetricsConnection';
  edges?: Maybe<Array<Maybe<Pg_PlatformMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_PlatformMetricsEdge = {
  __typename?: 'pg_PlatformMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_PlatformMetrics>;
};

export type Pg_PlatformMetricsOrder = {
  direction: OrderDirection;
  field: Pg_PlatformMetricsOrderField;
};

export enum Pg_PlatformMetricsOrderField {
  Key = 'KEY',
  TotalTournaments = 'TOTAL_TOURNAMENTS'
}

export type Pg_PlatformMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_tournaments?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsGTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLT?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsLTE?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_tournamentsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_tournamentsNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Pg_Prize = {
  __typename?: 'pg_Prize';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u64']['output']>;
  payout_position?: Maybe<Scalars['u8']['output']>;
  token_address?: Maybe<Scalars['ContractAddress']['output']>;
  token_type?: Maybe<Pg_TokenType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Pg_PrizeClaim = {
  __typename?: 'pg_PrizeClaim';
  claimed?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  prize_type?: Maybe<Pg_PrizeType>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Pg_PrizeClaimConnection = {
  __typename?: 'pg_PrizeClaimConnection';
  edges?: Maybe<Array<Maybe<Pg_PrizeClaimEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_PrizeClaimEdge = {
  __typename?: 'pg_PrizeClaimEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_PrizeClaim>;
};

export type Pg_PrizeClaimOrder = {
  direction: OrderDirection;
  field: Pg_PrizeClaimOrderField;
};

export enum Pg_PrizeClaimOrderField {
  Claimed = 'CLAIMED',
  PrizeType = 'PRIZE_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Pg_PrizeClaimWhereInput = {
  claimed?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Pg_PrizeConnection = {
  __typename?: 'pg_PrizeConnection';
  edges?: Maybe<Array<Maybe<Pg_PrizeEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_PrizeEdge = {
  __typename?: 'pg_PrizeEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_Prize>;
};

export type Pg_PrizeMetrics = {
  __typename?: 'pg_PrizeMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_prizes?: Maybe<Scalars['u64']['output']>;
};

export type Pg_PrizeMetricsConnection = {
  __typename?: 'pg_PrizeMetricsConnection';
  edges?: Maybe<Array<Maybe<Pg_PrizeMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_PrizeMetricsEdge = {
  __typename?: 'pg_PrizeMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_PrizeMetrics>;
};

export type Pg_PrizeMetricsOrder = {
  direction: OrderDirection;
  field: Pg_PrizeMetricsOrderField;
};

export enum Pg_PrizeMetricsOrderField {
  Key = 'KEY',
  TotalPrizes = 'TOTAL_PRIZES'
}

export type Pg_PrizeMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_prizes?: InputMaybe<Scalars['u64']['input']>;
  total_prizesEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesGTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLT?: InputMaybe<Scalars['u64']['input']>;
  total_prizesLTE?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_prizesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_prizesNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Pg_PrizeOrder = {
  direction: OrderDirection;
  field: Pg_PrizeOrderField;
};

export enum Pg_PrizeOrderField {
  Id = 'ID',
  PayoutPosition = 'PAYOUT_POSITION',
  TokenAddress = 'TOKEN_ADDRESS',
  TokenType = 'TOKEN_TYPE',
  TournamentId = 'TOURNAMENT_ID'
}

export type Pg_PrizeType = {
  __typename?: 'pg_PrizeType';
  EntryFees?: Maybe<Pg_Role>;
  Sponsored?: Maybe<Scalars['u64']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Pg_PrizeWhereInput = {
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  payout_position?: InputMaybe<Scalars['u8']['input']>;
  payout_positionEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionGTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionLIKE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLT?: InputMaybe<Scalars['u8']['input']>;
  payout_positionLTE?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNEQ?: InputMaybe<Scalars['u8']['input']>;
  payout_positionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  payout_positionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Pg_Registration = {
  __typename?: 'pg_Registration';
  entity?: Maybe<World__Entity>;
  entry_number?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  game_token_id?: Maybe<Scalars['u64']['output']>;
  has_submitted?: Maybe<Scalars['bool']['output']>;
  tournament_id?: Maybe<Scalars['u64']['output']>;
};

export type Pg_RegistrationConnection = {
  __typename?: 'pg_RegistrationConnection';
  edges?: Maybe<Array<Maybe<Pg_RegistrationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_RegistrationEdge = {
  __typename?: 'pg_RegistrationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_Registration>;
};

export type Pg_RegistrationOrder = {
  direction: OrderDirection;
  field: Pg_RegistrationOrderField;
};

export enum Pg_RegistrationOrderField {
  EntryNumber = 'ENTRY_NUMBER',
  GameTokenId = 'GAME_TOKEN_ID',
  HasSubmitted = 'HAS_SUBMITTED',
  TournamentId = 'TOURNAMENT_ID'
}

export type Pg_RegistrationWhereInput = {
  entry_number?: InputMaybe<Scalars['u32']['input']>;
  entry_numberEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberGTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberLIKE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLT?: InputMaybe<Scalars['u32']['input']>;
  entry_numberLTE?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNEQ?: InputMaybe<Scalars['u32']['input']>;
  entry_numberNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entry_numberNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  game_token_id?: InputMaybe<Scalars['u64']['input']>;
  game_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  has_submitted?: InputMaybe<Scalars['bool']['input']>;
  tournament_id?: InputMaybe<Scalars['u64']['input']>;
  tournament_idEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idGTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLT?: InputMaybe<Scalars['u64']['input']>;
  tournament_idLTE?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  tournament_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tournament_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Pg_Role = {
  __typename?: 'pg_Role';
  Position?: Maybe<Scalars['u8']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Pg_Schedule = {
  __typename?: 'pg_Schedule';
  game?: Maybe<Pg_Period>;
  registration?: Maybe<Pg_OptionPeriod>;
  submission_duration?: Maybe<Scalars['u64']['output']>;
};

export type Pg_Score = {
  __typename?: 'pg_Score';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u64']['output']>;
  score?: Maybe<Scalars['u32']['output']>;
};

export type Pg_ScoreConnection = {
  __typename?: 'pg_ScoreConnection';
  edges?: Maybe<Array<Maybe<Pg_ScoreEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_ScoreEdge = {
  __typename?: 'pg_ScoreEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_Score>;
};

export type Pg_ScoreOrder = {
  direction: OrderDirection;
  field: Pg_ScoreOrderField;
};

export enum Pg_ScoreOrderField {
  GameId = 'GAME_ID',
  Score = 'SCORE'
}

export type Pg_ScoreWhereInput = {
  game_id?: InputMaybe<Scalars['u64']['input']>;
  game_idEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idGT?: InputMaybe<Scalars['u64']['input']>;
  game_idGTE?: InputMaybe<Scalars['u64']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  game_idLT?: InputMaybe<Scalars['u64']['input']>;
  game_idLTE?: InputMaybe<Scalars['u64']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  score?: InputMaybe<Scalars['u32']['input']>;
  scoreEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreGT?: InputMaybe<Scalars['u32']['input']>;
  scoreGTE?: InputMaybe<Scalars['u32']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u32']['input']>;
  scoreLT?: InputMaybe<Scalars['u32']['input']>;
  scoreLTE?: InputMaybe<Scalars['u32']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u32']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type Pg_Settings = {
  __typename?: 'pg_Settings';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
  value?: Maybe<Scalars['felt252']['output']>;
};

export type Pg_SettingsConnection = {
  __typename?: 'pg_SettingsConnection';
  edges?: Maybe<Array<Maybe<Pg_SettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_SettingsCounter = {
  __typename?: 'pg_SettingsCounter';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
};

export type Pg_SettingsCounterConnection = {
  __typename?: 'pg_SettingsCounterConnection';
  edges?: Maybe<Array<Maybe<Pg_SettingsCounterEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_SettingsCounterEdge = {
  __typename?: 'pg_SettingsCounterEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_SettingsCounter>;
};

export type Pg_SettingsCounterOrder = {
  direction: OrderDirection;
  field: Pg_SettingsCounterOrderField;
};

export enum Pg_SettingsCounterOrderField {
  Count = 'COUNT',
  Key = 'KEY'
}

export type Pg_SettingsCounterWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Pg_SettingsDetails = {
  __typename?: 'pg_SettingsDetails';
  description?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type Pg_SettingsDetailsConnection = {
  __typename?: 'pg_SettingsDetailsConnection';
  edges?: Maybe<Array<Maybe<Pg_SettingsDetailsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_SettingsDetailsEdge = {
  __typename?: 'pg_SettingsDetailsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_SettingsDetails>;
};

export type Pg_SettingsDetailsOrder = {
  direction: OrderDirection;
  field: Pg_SettingsDetailsOrderField;
};

export enum Pg_SettingsDetailsOrderField {
  Description = 'DESCRIPTION',
  Exists = 'EXISTS',
  Id = 'ID',
  Name = 'NAME'
}

export type Pg_SettingsDetailsWhereInput = {
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Pg_SettingsEdge = {
  __typename?: 'pg_SettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_Settings>;
};

export type Pg_SettingsOrder = {
  direction: OrderDirection;
  field: Pg_SettingsOrderField;
};

export enum Pg_SettingsOrderField {
  Id = 'ID',
  Name = 'NAME',
  Value = 'VALUE'
}

export type Pg_SettingsWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  value?: InputMaybe<Scalars['felt252']['input']>;
  valueEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueGT?: InputMaybe<Scalars['felt252']['input']>;
  valueGTE?: InputMaybe<Scalars['felt252']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['felt252']['input']>;
  valueLT?: InputMaybe<Scalars['felt252']['input']>;
  valueLTE?: InputMaybe<Scalars['felt252']['input']>;
  valueNEQ?: InputMaybe<Scalars['felt252']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type Pg_Token = {
  __typename?: 'pg_Token';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  is_registered?: Maybe<Scalars['bool']['output']>;
  name?: Maybe<Scalars['ByteArray']['output']>;
  symbol?: Maybe<Scalars['ByteArray']['output']>;
  token_type?: Maybe<Pg_TokenType>;
};

export type Pg_TokenConnection = {
  __typename?: 'pg_TokenConnection';
  edges?: Maybe<Array<Maybe<Pg_TokenEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_TokenEdge = {
  __typename?: 'pg_TokenEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_Token>;
};

export type Pg_TokenMetadata = {
  __typename?: 'pg_TokenMetadata';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lifecycle?: Maybe<Pg_Lifecycle>;
  minted_by?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  token_id?: Maybe<Scalars['u64']['output']>;
};

export type Pg_TokenMetadataConnection = {
  __typename?: 'pg_TokenMetadataConnection';
  edges?: Maybe<Array<Maybe<Pg_TokenMetadataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_TokenMetadataEdge = {
  __typename?: 'pg_TokenMetadataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_TokenMetadata>;
};

export type Pg_TokenMetadataOrder = {
  direction: OrderDirection;
  field: Pg_TokenMetadataOrderField;
};

export enum Pg_TokenMetadataOrderField {
  Lifecycle = 'LIFECYCLE',
  MintedBy = 'MINTED_BY',
  PlayerName = 'PLAYER_NAME',
  SettingsId = 'SETTINGS_ID',
  TokenId = 'TOKEN_ID'
}

export type Pg_TokenMetadataWhereInput = {
  minted_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  minted_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  minted_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  token_id?: InputMaybe<Scalars['u64']['input']>;
  token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idGT?: InputMaybe<Scalars['u64']['input']>;
  token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  token_idLT?: InputMaybe<Scalars['u64']['input']>;
  token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Pg_TokenOrder = {
  direction: OrderDirection;
  field: Pg_TokenOrderField;
};

export enum Pg_TokenOrderField {
  Address = 'ADDRESS',
  IsRegistered = 'IS_REGISTERED',
  Name = 'NAME',
  Symbol = 'SYMBOL',
  TokenType = 'TOKEN_TYPE'
}

export type Pg_TokenType = {
  __typename?: 'pg_TokenType';
  erc20?: Maybe<Pg_Erc20Data>;
  erc721?: Maybe<Pg_Erc721Data>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type Pg_TokenWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  is_registered?: InputMaybe<Scalars['bool']['input']>;
  name?: InputMaybe<Scalars['ByteArray']['input']>;
  nameEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLT?: InputMaybe<Scalars['ByteArray']['input']>;
  nameLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbol?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLT?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  symbolNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  symbolNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
};

export type Pg_Tournament = {
  __typename?: 'pg_Tournament';
  created_at?: Maybe<Scalars['u64']['output']>;
  created_by?: Maybe<Scalars['ContractAddress']['output']>;
  creator_token_id?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entry_fee?: Maybe<Pg_OptionEntryFee>;
  entry_requirement?: Maybe<Pg_OptionEntryRequirement>;
  eventMessage?: Maybe<World__EventMessage>;
  game_config?: Maybe<Pg_GameConfig>;
  id?: Maybe<Scalars['u64']['output']>;
  metadata?: Maybe<Pg_Metadata>;
  schedule?: Maybe<Pg_Schedule>;
};

export type Pg_TournamentConfig = {
  __typename?: 'pg_TournamentConfig';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  safe_mode?: Maybe<Scalars['bool']['output']>;
  test_mode?: Maybe<Scalars['bool']['output']>;
};

export type Pg_TournamentConfigConnection = {
  __typename?: 'pg_TournamentConfigConnection';
  edges?: Maybe<Array<Maybe<Pg_TournamentConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_TournamentConfigEdge = {
  __typename?: 'pg_TournamentConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_TournamentConfig>;
};

export type Pg_TournamentConfigOrder = {
  direction: OrderDirection;
  field: Pg_TournamentConfigOrderField;
};

export enum Pg_TournamentConfigOrderField {
  Key = 'KEY',
  SafeMode = 'SAFE_MODE',
  TestMode = 'TEST_MODE'
}

export type Pg_TournamentConfigWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  safe_mode?: InputMaybe<Scalars['bool']['input']>;
  test_mode?: InputMaybe<Scalars['bool']['input']>;
};

export type Pg_TournamentConnection = {
  __typename?: 'pg_TournamentConnection';
  edges?: Maybe<Array<Maybe<Pg_TournamentEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_TournamentEdge = {
  __typename?: 'pg_TournamentEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_Tournament>;
};

export type Pg_TournamentOrder = {
  direction: OrderDirection;
  field: Pg_TournamentOrderField;
};

export enum Pg_TournamentOrderField {
  CreatedAt = 'CREATED_AT',
  CreatedBy = 'CREATED_BY',
  CreatorTokenId = 'CREATOR_TOKEN_ID',
  EntryFee = 'ENTRY_FEE',
  EntryRequirement = 'ENTRY_REQUIREMENT',
  GameConfig = 'GAME_CONFIG',
  Id = 'ID',
  Metadata = 'METADATA',
  Schedule = 'SCHEDULE'
}

export type Pg_TournamentTokenMetrics = {
  __typename?: 'pg_TournamentTokenMetrics';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  key?: Maybe<Scalars['felt252']['output']>;
  total_supply?: Maybe<Scalars['u64']['output']>;
};

export type Pg_TournamentTokenMetricsConnection = {
  __typename?: 'pg_TournamentTokenMetricsConnection';
  edges?: Maybe<Array<Maybe<Pg_TournamentTokenMetricsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Pg_TournamentTokenMetricsEdge = {
  __typename?: 'pg_TournamentTokenMetricsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Pg_TournamentTokenMetrics>;
};

export type Pg_TournamentTokenMetricsOrder = {
  direction: OrderDirection;
  field: Pg_TournamentTokenMetricsOrderField;
};

export enum Pg_TournamentTokenMetricsOrderField {
  Key = 'KEY',
  TotalSupply = 'TOTAL_SUPPLY'
}

export type Pg_TournamentTokenMetricsWhereInput = {
  key?: InputMaybe<Scalars['felt252']['input']>;
  keyEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyGT?: InputMaybe<Scalars['felt252']['input']>;
  keyGTE?: InputMaybe<Scalars['felt252']['input']>;
  keyIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyLIKE?: InputMaybe<Scalars['felt252']['input']>;
  keyLT?: InputMaybe<Scalars['felt252']['input']>;
  keyLTE?: InputMaybe<Scalars['felt252']['input']>;
  keyNEQ?: InputMaybe<Scalars['felt252']['input']>;
  keyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  keyNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  total_supply?: InputMaybe<Scalars['u64']['input']>;
  total_supplyEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyGTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLT?: InputMaybe<Scalars['u64']['input']>;
  total_supplyLTE?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNEQ?: InputMaybe<Scalars['u64']['input']>;
  total_supplyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  total_supplyNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type Pg_TournamentType = {
  __typename?: 'pg_TournamentType';
  option?: Maybe<Scalars['Enum']['output']>;
  participants?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
  winners?: Maybe<Array<Maybe<Scalars['u64']['output']>>>;
};

export type Pg_TournamentWhereInput = {
  created_at?: InputMaybe<Scalars['u64']['input']>;
  created_atEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atGT?: InputMaybe<Scalars['u64']['input']>;
  created_atGTE?: InputMaybe<Scalars['u64']['input']>;
  created_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_atLT?: InputMaybe<Scalars['u64']['input']>;
  created_atLTE?: InputMaybe<Scalars['u64']['input']>;
  created_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  created_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  created_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  creator_token_id?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idGTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idLIKE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLT?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idLTE?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNEQ?: InputMaybe<Scalars['u64']['input']>;
  creator_token_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  creator_token_idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  id?: InputMaybe<Scalars['u64']['input']>;
  idEQ?: InputMaybe<Scalars['u64']['input']>;
  idGT?: InputMaybe<Scalars['u64']['input']>;
  idGTE?: InputMaybe<Scalars['u64']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u64']['input']>;
  idLT?: InputMaybe<Scalars['u64']['input']>;
  idLTE?: InputMaybe<Scalars['u64']['input']>;
  idNEQ?: InputMaybe<Scalars['u64']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Darkshuffle_Battle = {
  __typename?: 's0_darkshuffle_Battle';
  battle_effects?: Maybe<S0_Darkshuffle_BattleEffects>;
  battle_id?: Maybe<Scalars['u16']['output']>;
  deck?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  deck_index?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u128']['output']>;
  hand?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  hero?: Maybe<S0_Darkshuffle_Hero>;
  monster?: Maybe<S0_Darkshuffle_Monster>;
  round?: Maybe<Scalars['u8']['output']>;
};

export type S0_Darkshuffle_BattleConnection = {
  __typename?: 's0_darkshuffle_BattleConnection';
  edges?: Maybe<Array<Maybe<S0_Darkshuffle_BattleEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Darkshuffle_BattleEdge = {
  __typename?: 's0_darkshuffle_BattleEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Darkshuffle_Battle>;
};

export type S0_Darkshuffle_BattleEffects = {
  __typename?: 's0_darkshuffle_BattleEffects';
  enemy_marks?: Maybe<Scalars['u8']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  next_brute_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_brute_health_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_attack_bonus?: Maybe<Scalars['u8']['output']>;
  next_hunter_health_bonus?: Maybe<Scalars['u8']['output']>;
};

export type S0_Darkshuffle_BattleOrder = {
  direction: OrderDirection;
  field: S0_Darkshuffle_BattleOrderField;
};

export enum S0_Darkshuffle_BattleOrderField {
  BattleEffects = 'BATTLE_EFFECTS',
  BattleId = 'BATTLE_ID',
  Deck = 'DECK',
  DeckIndex = 'DECK_INDEX',
  GameId = 'GAME_ID',
  Hand = 'HAND',
  Hero = 'HERO',
  Monster = 'MONSTER',
  Round = 'ROUND'
}

export type S0_Darkshuffle_BattleWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  deck_index?: InputMaybe<Scalars['u8']['input']>;
  deck_indexEQ?: InputMaybe<Scalars['u8']['input']>;
  deck_indexGT?: InputMaybe<Scalars['u8']['input']>;
  deck_indexGTE?: InputMaybe<Scalars['u8']['input']>;
  deck_indexIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  deck_indexLIKE?: InputMaybe<Scalars['u8']['input']>;
  deck_indexLT?: InputMaybe<Scalars['u8']['input']>;
  deck_indexLTE?: InputMaybe<Scalars['u8']['input']>;
  deck_indexNEQ?: InputMaybe<Scalars['u8']['input']>;
  deck_indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  deck_indexNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_id?: InputMaybe<Scalars['u128']['input']>;
  game_idEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idGT?: InputMaybe<Scalars['u128']['input']>;
  game_idGTE?: InputMaybe<Scalars['u128']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u128']['input']>;
  game_idLT?: InputMaybe<Scalars['u128']['input']>;
  game_idLTE?: InputMaybe<Scalars['u128']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  round?: InputMaybe<Scalars['u8']['input']>;
  roundEQ?: InputMaybe<Scalars['u8']['input']>;
  roundGT?: InputMaybe<Scalars['u8']['input']>;
  roundGTE?: InputMaybe<Scalars['u8']['input']>;
  roundIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundLIKE?: InputMaybe<Scalars['u8']['input']>;
  roundLT?: InputMaybe<Scalars['u8']['input']>;
  roundLTE?: InputMaybe<Scalars['u8']['input']>;
  roundNEQ?: InputMaybe<Scalars['u8']['input']>;
  roundNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  roundNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Darkshuffle_Board = {
  __typename?: 's0_darkshuffle_Board';
  battle_id?: Maybe<Scalars['u16']['output']>;
  creature1?: Maybe<S0_Darkshuffle_Creature>;
  creature2?: Maybe<S0_Darkshuffle_Creature>;
  creature3?: Maybe<S0_Darkshuffle_Creature>;
  creature4?: Maybe<S0_Darkshuffle_Creature>;
  creature5?: Maybe<S0_Darkshuffle_Creature>;
  creature6?: Maybe<S0_Darkshuffle_Creature>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u128']['output']>;
};

export type S0_Darkshuffle_BoardConnection = {
  __typename?: 's0_darkshuffle_BoardConnection';
  edges?: Maybe<Array<Maybe<S0_Darkshuffle_BoardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Darkshuffle_BoardEdge = {
  __typename?: 's0_darkshuffle_BoardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Darkshuffle_Board>;
};

export type S0_Darkshuffle_BoardOrder = {
  direction: OrderDirection;
  field: S0_Darkshuffle_BoardOrderField;
};

export enum S0_Darkshuffle_BoardOrderField {
  BattleId = 'BATTLE_ID',
  Creature1 = 'CREATURE1',
  Creature2 = 'CREATURE2',
  Creature3 = 'CREATURE3',
  Creature4 = 'CREATURE4',
  Creature5 = 'CREATURE5',
  Creature6 = 'CREATURE6',
  GameId = 'GAME_ID'
}

export type S0_Darkshuffle_BoardWhereInput = {
  battle_id?: InputMaybe<Scalars['u16']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idGT?: InputMaybe<Scalars['u16']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_idLT?: InputMaybe<Scalars['u16']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  game_id?: InputMaybe<Scalars['u128']['input']>;
  game_idEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idGT?: InputMaybe<Scalars['u128']['input']>;
  game_idGTE?: InputMaybe<Scalars['u128']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u128']['input']>;
  game_idLT?: InputMaybe<Scalars['u128']['input']>;
  game_idLTE?: InputMaybe<Scalars['u128']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type S0_Darkshuffle_Creature = {
  __typename?: 's0_darkshuffle_Creature';
  attack?: Maybe<Scalars['u8']['output']>;
  card_id?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
};

export type S0_Darkshuffle_Donation = {
  __typename?: 's0_darkshuffle_Donation';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  amount?: Maybe<Scalars['u256']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  name?: Maybe<Scalars['felt252']['output']>;
  season_id?: Maybe<Scalars['u32']['output']>;
  social?: Maybe<Scalars['felt252']['output']>;
};

export type S0_Darkshuffle_DonationConnection = {
  __typename?: 's0_darkshuffle_DonationConnection';
  edges?: Maybe<Array<Maybe<S0_Darkshuffle_DonationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Darkshuffle_DonationEdge = {
  __typename?: 's0_darkshuffle_DonationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Darkshuffle_Donation>;
};

export type S0_Darkshuffle_DonationOrder = {
  direction: OrderDirection;
  field: S0_Darkshuffle_DonationOrderField;
};

export enum S0_Darkshuffle_DonationOrderField {
  Address = 'ADDRESS',
  Amount = 'AMOUNT',
  Name = 'NAME',
  SeasonId = 'SEASON_ID',
  Social = 'SOCIAL'
}

export type S0_Darkshuffle_DonationWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  amount?: InputMaybe<Scalars['u256']['input']>;
  amountEQ?: InputMaybe<Scalars['u256']['input']>;
  amountGT?: InputMaybe<Scalars['u256']['input']>;
  amountGTE?: InputMaybe<Scalars['u256']['input']>;
  amountIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  amountLIKE?: InputMaybe<Scalars['u256']['input']>;
  amountLT?: InputMaybe<Scalars['u256']['input']>;
  amountLTE?: InputMaybe<Scalars['u256']['input']>;
  amountNEQ?: InputMaybe<Scalars['u256']['input']>;
  amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  amountNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  season_id?: InputMaybe<Scalars['u32']['input']>;
  season_idEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idGT?: InputMaybe<Scalars['u32']['input']>;
  season_idGTE?: InputMaybe<Scalars['u32']['input']>;
  season_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  season_idLT?: InputMaybe<Scalars['u32']['input']>;
  season_idLTE?: InputMaybe<Scalars['u32']['input']>;
  season_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  social?: InputMaybe<Scalars['felt252']['input']>;
  socialEQ?: InputMaybe<Scalars['felt252']['input']>;
  socialGT?: InputMaybe<Scalars['felt252']['input']>;
  socialGTE?: InputMaybe<Scalars['felt252']['input']>;
  socialIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  socialLIKE?: InputMaybe<Scalars['felt252']['input']>;
  socialLT?: InputMaybe<Scalars['felt252']['input']>;
  socialLTE?: InputMaybe<Scalars['felt252']['input']>;
  socialNEQ?: InputMaybe<Scalars['felt252']['input']>;
  socialNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  socialNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type S0_Darkshuffle_Draft = {
  __typename?: 's0_darkshuffle_Draft';
  cards?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u128']['output']>;
  options?: Maybe<Array<Maybe<Scalars['u8']['output']>>>;
};

export type S0_Darkshuffle_DraftConnection = {
  __typename?: 's0_darkshuffle_DraftConnection';
  edges?: Maybe<Array<Maybe<S0_Darkshuffle_DraftEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Darkshuffle_DraftEdge = {
  __typename?: 's0_darkshuffle_DraftEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Darkshuffle_Draft>;
};

export type S0_Darkshuffle_DraftOrder = {
  direction: OrderDirection;
  field: S0_Darkshuffle_DraftOrderField;
};

export enum S0_Darkshuffle_DraftOrderField {
  Cards = 'CARDS',
  GameId = 'GAME_ID',
  Options = 'OPTIONS'
}

export type S0_Darkshuffle_DraftWhereInput = {
  game_id?: InputMaybe<Scalars['u128']['input']>;
  game_idEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idGT?: InputMaybe<Scalars['u128']['input']>;
  game_idGTE?: InputMaybe<Scalars['u128']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u128']['input']>;
  game_idLT?: InputMaybe<Scalars['u128']['input']>;
  game_idLTE?: InputMaybe<Scalars['u128']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type S0_Darkshuffle_Game = {
  __typename?: 's0_darkshuffle_Game';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u128']['output']>;
  hero_health?: Maybe<Scalars['u8']['output']>;
  hero_xp?: Maybe<Scalars['u16']['output']>;
  last_node_id?: Maybe<Scalars['u8']['output']>;
  map_depth?: Maybe<Scalars['u8']['output']>;
  map_level?: Maybe<Scalars['u8']['output']>;
  monsters_slain?: Maybe<Scalars['u16']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  season_id?: Maybe<Scalars['u32']['output']>;
  state?: Maybe<Scalars['Enum']['output']>;
};

export type S0_Darkshuffle_GameConnection = {
  __typename?: 's0_darkshuffle_GameConnection';
  edges?: Maybe<Array<Maybe<S0_Darkshuffle_GameEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Darkshuffle_GameEdge = {
  __typename?: 's0_darkshuffle_GameEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Darkshuffle_Game>;
};

export type S0_Darkshuffle_GameEffects = {
  __typename?: 's0_darkshuffle_GameEffects';
  all_attack?: Maybe<Scalars['u8']['output']>;
  brute_attack?: Maybe<Scalars['u8']['output']>;
  brute_health?: Maybe<Scalars['u8']['output']>;
  card_draw?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  first_attack?: Maybe<Scalars['u8']['output']>;
  first_cost?: Maybe<Scalars['u8']['output']>;
  first_health?: Maybe<Scalars['u8']['output']>;
  game_id?: Maybe<Scalars['u128']['output']>;
  hero_card_heal?: Maybe<Scalars['bool']['output']>;
  hero_dmg_reduction?: Maybe<Scalars['u8']['output']>;
  hunter_attack?: Maybe<Scalars['u8']['output']>;
  hunter_health?: Maybe<Scalars['u8']['output']>;
  magical_attack?: Maybe<Scalars['u8']['output']>;
  magical_health?: Maybe<Scalars['u8']['output']>;
  play_creature_heal?: Maybe<Scalars['u8']['output']>;
  start_bonus_energy?: Maybe<Scalars['u8']['output']>;
};

export type S0_Darkshuffle_GameEffectsConnection = {
  __typename?: 's0_darkshuffle_GameEffectsConnection';
  edges?: Maybe<Array<Maybe<S0_Darkshuffle_GameEffectsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Darkshuffle_GameEffectsEdge = {
  __typename?: 's0_darkshuffle_GameEffectsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Darkshuffle_GameEffects>;
};

export type S0_Darkshuffle_GameEffectsOrder = {
  direction: OrderDirection;
  field: S0_Darkshuffle_GameEffectsOrderField;
};

export enum S0_Darkshuffle_GameEffectsOrderField {
  AllAttack = 'ALL_ATTACK',
  BruteAttack = 'BRUTE_ATTACK',
  BruteHealth = 'BRUTE_HEALTH',
  CardDraw = 'CARD_DRAW',
  FirstAttack = 'FIRST_ATTACK',
  FirstCost = 'FIRST_COST',
  FirstHealth = 'FIRST_HEALTH',
  GameId = 'GAME_ID',
  HeroCardHeal = 'HERO_CARD_HEAL',
  HeroDmgReduction = 'HERO_DMG_REDUCTION',
  HunterAttack = 'HUNTER_ATTACK',
  HunterHealth = 'HUNTER_HEALTH',
  MagicalAttack = 'MAGICAL_ATTACK',
  MagicalHealth = 'MAGICAL_HEALTH',
  PlayCreatureHeal = 'PLAY_CREATURE_HEAL',
  StartBonusEnergy = 'START_BONUS_ENERGY'
}

export type S0_Darkshuffle_GameEffectsWhereInput = {
  all_attack?: InputMaybe<Scalars['u8']['input']>;
  all_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackGT?: InputMaybe<Scalars['u8']['input']>;
  all_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  all_attackLT?: InputMaybe<Scalars['u8']['input']>;
  all_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  all_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  all_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  all_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attack?: InputMaybe<Scalars['u8']['input']>;
  brute_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLT?: InputMaybe<Scalars['u8']['input']>;
  brute_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_health?: InputMaybe<Scalars['u8']['input']>;
  brute_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLT?: InputMaybe<Scalars['u8']['input']>;
  brute_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  brute_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  brute_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_draw?: InputMaybe<Scalars['u8']['input']>;
  card_drawEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawGT?: InputMaybe<Scalars['u8']['input']>;
  card_drawGTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawLIKE?: InputMaybe<Scalars['u8']['input']>;
  card_drawLT?: InputMaybe<Scalars['u8']['input']>;
  card_drawLTE?: InputMaybe<Scalars['u8']['input']>;
  card_drawNEQ?: InputMaybe<Scalars['u8']['input']>;
  card_drawNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  card_drawNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attack?: InputMaybe<Scalars['u8']['input']>;
  first_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackGT?: InputMaybe<Scalars['u8']['input']>;
  first_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_attackLT?: InputMaybe<Scalars['u8']['input']>;
  first_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  first_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_cost?: InputMaybe<Scalars['u8']['input']>;
  first_costEQ?: InputMaybe<Scalars['u8']['input']>;
  first_costGT?: InputMaybe<Scalars['u8']['input']>;
  first_costGTE?: InputMaybe<Scalars['u8']['input']>;
  first_costIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_costLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_costLT?: InputMaybe<Scalars['u8']['input']>;
  first_costLTE?: InputMaybe<Scalars['u8']['input']>;
  first_costNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_costNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_costNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_health?: InputMaybe<Scalars['u8']['input']>;
  first_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthGT?: InputMaybe<Scalars['u8']['input']>;
  first_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  first_healthLT?: InputMaybe<Scalars['u8']['input']>;
  first_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  first_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  first_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  first_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_id?: InputMaybe<Scalars['u128']['input']>;
  game_idEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idGT?: InputMaybe<Scalars['u128']['input']>;
  game_idGTE?: InputMaybe<Scalars['u128']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u128']['input']>;
  game_idLT?: InputMaybe<Scalars['u128']['input']>;
  game_idLTE?: InputMaybe<Scalars['u128']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  hero_card_heal?: InputMaybe<Scalars['bool']['input']>;
  hero_dmg_reduction?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLT?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_dmg_reductionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_dmg_reductionNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attack?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_health?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hunter_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hunter_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attack?: InputMaybe<Scalars['u8']['input']>;
  magical_attackEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLT?: InputMaybe<Scalars['u8']['input']>;
  magical_attackLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_attackNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_attackNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_health?: InputMaybe<Scalars['u8']['input']>;
  magical_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLT?: InputMaybe<Scalars['u8']['input']>;
  magical_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  magical_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  magical_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_heal?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healGTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healLIKE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLT?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healLTE?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNEQ?: InputMaybe<Scalars['u8']['input']>;
  play_creature_healNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  play_creature_healNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energy?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_bonus_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_bonus_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Darkshuffle_GameOrder = {
  direction: OrderDirection;
  field: S0_Darkshuffle_GameOrderField;
};

export enum S0_Darkshuffle_GameOrderField {
  GameId = 'GAME_ID',
  HeroHealth = 'HERO_HEALTH',
  HeroXp = 'HERO_XP',
  LastNodeId = 'LAST_NODE_ID',
  MapDepth = 'MAP_DEPTH',
  MapLevel = 'MAP_LEVEL',
  MonstersSlain = 'MONSTERS_SLAIN',
  PlayerName = 'PLAYER_NAME',
  SeasonId = 'SEASON_ID',
  State = 'STATE'
}

export type S0_Darkshuffle_GameSettings = {
  __typename?: 's0_darkshuffle_GameSettings';
  draft_size?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  max_energy?: Maybe<Scalars['u8']['output']>;
  max_hand_size?: Maybe<Scalars['u8']['output']>;
  max_health?: Maybe<Scalars['u8']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  start_energy?: Maybe<Scalars['u8']['output']>;
  start_hand_size?: Maybe<Scalars['u8']['output']>;
  start_health?: Maybe<Scalars['u8']['output']>;
};

export type S0_Darkshuffle_GameSettingsConnection = {
  __typename?: 's0_darkshuffle_GameSettingsConnection';
  edges?: Maybe<Array<Maybe<S0_Darkshuffle_GameSettingsEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Darkshuffle_GameSettingsEdge = {
  __typename?: 's0_darkshuffle_GameSettingsEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Darkshuffle_GameSettings>;
};

export type S0_Darkshuffle_GameSettingsOrder = {
  direction: OrderDirection;
  field: S0_Darkshuffle_GameSettingsOrderField;
};

export enum S0_Darkshuffle_GameSettingsOrderField {
  DraftSize = 'DRAFT_SIZE',
  MaxEnergy = 'MAX_ENERGY',
  MaxHandSize = 'MAX_HAND_SIZE',
  MaxHealth = 'MAX_HEALTH',
  SettingsId = 'SETTINGS_ID',
  StartEnergy = 'START_ENERGY',
  StartHandSize = 'START_HAND_SIZE',
  StartHealth = 'START_HEALTH'
}

export type S0_Darkshuffle_GameSettingsWhereInput = {
  draft_size?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  draft_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  draft_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  draft_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_energy?: InputMaybe<Scalars['u8']['input']>;
  max_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  max_energyGT?: InputMaybe<Scalars['u8']['input']>;
  max_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  max_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_energyLT?: InputMaybe<Scalars['u8']['input']>;
  max_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  max_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_size?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_hand_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_hand_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_hand_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_health?: InputMaybe<Scalars['u8']['input']>;
  max_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  max_healthGT?: InputMaybe<Scalars['u8']['input']>;
  max_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  max_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_healthLT?: InputMaybe<Scalars['u8']['input']>;
  max_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  max_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  start_energy?: InputMaybe<Scalars['u8']['input']>;
  start_energyEQ?: InputMaybe<Scalars['u8']['input']>;
  start_energyGT?: InputMaybe<Scalars['u8']['input']>;
  start_energyGTE?: InputMaybe<Scalars['u8']['input']>;
  start_energyIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_energyLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_energyLT?: InputMaybe<Scalars['u8']['input']>;
  start_energyLTE?: InputMaybe<Scalars['u8']['input']>;
  start_energyNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_energyNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_energyNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_size?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeEQ?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeGT?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeGTE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_hand_sizeLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeLT?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeLTE?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_hand_sizeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_hand_sizeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_health?: InputMaybe<Scalars['u8']['input']>;
  start_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  start_healthGT?: InputMaybe<Scalars['u8']['input']>;
  start_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  start_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_healthLT?: InputMaybe<Scalars['u8']['input']>;
  start_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  start_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Darkshuffle_GameStartData = {
  __typename?: 's0_darkshuffle_GameStartData';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u128']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  season_id?: Maybe<Scalars['u32']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
};

export type S0_Darkshuffle_GameStartDataConnection = {
  __typename?: 's0_darkshuffle_GameStartDataConnection';
  edges?: Maybe<Array<Maybe<S0_Darkshuffle_GameStartDataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Darkshuffle_GameStartDataEdge = {
  __typename?: 's0_darkshuffle_GameStartDataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Darkshuffle_GameStartData>;
};

export type S0_Darkshuffle_GameStartDataOrder = {
  direction: OrderDirection;
  field: S0_Darkshuffle_GameStartDataOrderField;
};

export enum S0_Darkshuffle_GameStartDataOrderField {
  GameId = 'GAME_ID',
  PlayerName = 'PLAYER_NAME',
  SeasonId = 'SEASON_ID',
  Timestamp = 'TIMESTAMP'
}

export type S0_Darkshuffle_GameStartDataWhereInput = {
  game_id?: InputMaybe<Scalars['u128']['input']>;
  game_idEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idGT?: InputMaybe<Scalars['u128']['input']>;
  game_idGTE?: InputMaybe<Scalars['u128']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u128']['input']>;
  game_idLT?: InputMaybe<Scalars['u128']['input']>;
  game_idLTE?: InputMaybe<Scalars['u128']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  season_id?: InputMaybe<Scalars['u32']['input']>;
  season_idEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idGT?: InputMaybe<Scalars['u32']['input']>;
  season_idGTE?: InputMaybe<Scalars['u32']['input']>;
  season_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  season_idLT?: InputMaybe<Scalars['u32']['input']>;
  season_idLTE?: InputMaybe<Scalars['u32']['input']>;
  season_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Darkshuffle_GameStartEvent = {
  __typename?: 's0_darkshuffle_GameStartEvent';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u128']['output']>;
  player_address?: Maybe<Scalars['ContractAddress']['output']>;
  player_name?: Maybe<Scalars['felt252']['output']>;
  season_id?: Maybe<Scalars['u32']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
};

export type S0_Darkshuffle_GameStartEventConnection = {
  __typename?: 's0_darkshuffle_GameStartEventConnection';
  edges?: Maybe<Array<Maybe<S0_Darkshuffle_GameStartEventEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Darkshuffle_GameStartEventEdge = {
  __typename?: 's0_darkshuffle_GameStartEventEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Darkshuffle_GameStartEvent>;
};

export type S0_Darkshuffle_GameStartEventOrder = {
  direction: OrderDirection;
  field: S0_Darkshuffle_GameStartEventOrderField;
};

export enum S0_Darkshuffle_GameStartEventOrderField {
  GameId = 'GAME_ID',
  PlayerAddress = 'PLAYER_ADDRESS',
  PlayerName = 'PLAYER_NAME',
  SeasonId = 'SEASON_ID',
  Timestamp = 'TIMESTAMP'
}

export type S0_Darkshuffle_GameStartEventWhereInput = {
  game_id?: InputMaybe<Scalars['u128']['input']>;
  game_idEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idGT?: InputMaybe<Scalars['u128']['input']>;
  game_idGTE?: InputMaybe<Scalars['u128']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u128']['input']>;
  game_idLT?: InputMaybe<Scalars['u128']['input']>;
  game_idLTE?: InputMaybe<Scalars['u128']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  player_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  player_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  player_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  season_id?: InputMaybe<Scalars['u32']['input']>;
  season_idEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idGT?: InputMaybe<Scalars['u32']['input']>;
  season_idGTE?: InputMaybe<Scalars['u32']['input']>;
  season_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  season_idLT?: InputMaybe<Scalars['u32']['input']>;
  season_idLTE?: InputMaybe<Scalars['u32']['input']>;
  season_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Darkshuffle_GameWhereInput = {
  game_id?: InputMaybe<Scalars['u128']['input']>;
  game_idEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idGT?: InputMaybe<Scalars['u128']['input']>;
  game_idGTE?: InputMaybe<Scalars['u128']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u128']['input']>;
  game_idLT?: InputMaybe<Scalars['u128']['input']>;
  game_idLTE?: InputMaybe<Scalars['u128']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  hero_health?: InputMaybe<Scalars['u8']['input']>;
  hero_healthEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthGTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLT?: InputMaybe<Scalars['u8']['input']>;
  hero_healthLTE?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNEQ?: InputMaybe<Scalars['u8']['input']>;
  hero_healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hero_healthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  hero_xp?: InputMaybe<Scalars['u16']['input']>;
  hero_xpEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpGTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpLIKE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLT?: InputMaybe<Scalars['u16']['input']>;
  hero_xpLTE?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNEQ?: InputMaybe<Scalars['u16']['input']>;
  hero_xpNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  hero_xpNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  last_node_id?: InputMaybe<Scalars['u8']['input']>;
  last_node_idEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idGTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLT?: InputMaybe<Scalars['u8']['input']>;
  last_node_idLTE?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  last_node_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  last_node_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depth?: InputMaybe<Scalars['u8']['input']>;
  map_depthEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthGT?: InputMaybe<Scalars['u8']['input']>;
  map_depthGTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_depthLT?: InputMaybe<Scalars['u8']['input']>;
  map_depthLTE?: InputMaybe<Scalars['u8']['input']>;
  map_depthNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_depthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_depthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_level?: InputMaybe<Scalars['u8']['input']>;
  map_levelEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelGT?: InputMaybe<Scalars['u8']['input']>;
  map_levelGTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  map_levelLT?: InputMaybe<Scalars['u8']['input']>;
  map_levelLTE?: InputMaybe<Scalars['u8']['input']>;
  map_levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  map_levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  map_levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  monsters_slain?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainGTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainLIKE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLT?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainLTE?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNEQ?: InputMaybe<Scalars['u16']['input']>;
  monsters_slainNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  monsters_slainNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  player_name?: InputMaybe<Scalars['felt252']['input']>;
  player_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  player_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  season_id?: InputMaybe<Scalars['u32']['input']>;
  season_idEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idGT?: InputMaybe<Scalars['u32']['input']>;
  season_idGTE?: InputMaybe<Scalars['u32']['input']>;
  season_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  season_idLT?: InputMaybe<Scalars['u32']['input']>;
  season_idLTE?: InputMaybe<Scalars['u32']['input']>;
  season_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  state?: InputMaybe<Scalars['Enum']['input']>;
};

export type S0_Darkshuffle_Hero = {
  __typename?: 's0_darkshuffle_Hero';
  energy?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
  max_health?: Maybe<Scalars['u8']['output']>;
};

export type S0_Darkshuffle_Leaderboard = {
  __typename?: 's0_darkshuffle_Leaderboard';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u128']['output']>;
  rank?: Maybe<Scalars['u8']['output']>;
  score?: Maybe<Scalars['u16']['output']>;
  season_id?: Maybe<Scalars['u32']['output']>;
};

export type S0_Darkshuffle_LeaderboardConnection = {
  __typename?: 's0_darkshuffle_LeaderboardConnection';
  edges?: Maybe<Array<Maybe<S0_Darkshuffle_LeaderboardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Darkshuffle_LeaderboardEdge = {
  __typename?: 's0_darkshuffle_LeaderboardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Darkshuffle_Leaderboard>;
};

export type S0_Darkshuffle_LeaderboardOrder = {
  direction: OrderDirection;
  field: S0_Darkshuffle_LeaderboardOrderField;
};

export enum S0_Darkshuffle_LeaderboardOrderField {
  GameId = 'GAME_ID',
  Rank = 'RANK',
  Score = 'SCORE',
  SeasonId = 'SEASON_ID'
}

export type S0_Darkshuffle_LeaderboardWhereInput = {
  game_id?: InputMaybe<Scalars['u128']['input']>;
  game_idEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idGT?: InputMaybe<Scalars['u128']['input']>;
  game_idGTE?: InputMaybe<Scalars['u128']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u128']['input']>;
  game_idLT?: InputMaybe<Scalars['u128']['input']>;
  game_idLTE?: InputMaybe<Scalars['u128']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  rank?: InputMaybe<Scalars['u8']['input']>;
  rankEQ?: InputMaybe<Scalars['u8']['input']>;
  rankGT?: InputMaybe<Scalars['u8']['input']>;
  rankGTE?: InputMaybe<Scalars['u8']['input']>;
  rankIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  rankLIKE?: InputMaybe<Scalars['u8']['input']>;
  rankLT?: InputMaybe<Scalars['u8']['input']>;
  rankLTE?: InputMaybe<Scalars['u8']['input']>;
  rankNEQ?: InputMaybe<Scalars['u8']['input']>;
  rankNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  rankNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  score?: InputMaybe<Scalars['u16']['input']>;
  scoreEQ?: InputMaybe<Scalars['u16']['input']>;
  scoreGT?: InputMaybe<Scalars['u16']['input']>;
  scoreGTE?: InputMaybe<Scalars['u16']['input']>;
  scoreIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  scoreLIKE?: InputMaybe<Scalars['u16']['input']>;
  scoreLT?: InputMaybe<Scalars['u16']['input']>;
  scoreLTE?: InputMaybe<Scalars['u16']['input']>;
  scoreNEQ?: InputMaybe<Scalars['u16']['input']>;
  scoreNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  scoreNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  season_id?: InputMaybe<Scalars['u32']['input']>;
  season_idEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idGT?: InputMaybe<Scalars['u32']['input']>;
  season_idGTE?: InputMaybe<Scalars['u32']['input']>;
  season_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  season_idLT?: InputMaybe<Scalars['u32']['input']>;
  season_idLTE?: InputMaybe<Scalars['u32']['input']>;
  season_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Darkshuffle_Map = {
  __typename?: 's0_darkshuffle_Map';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_id?: Maybe<Scalars['u128']['output']>;
  level?: Maybe<Scalars['u8']['output']>;
  seed?: Maybe<Scalars['u128']['output']>;
};

export type S0_Darkshuffle_MapConnection = {
  __typename?: 's0_darkshuffle_MapConnection';
  edges?: Maybe<Array<Maybe<S0_Darkshuffle_MapEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Darkshuffle_MapEdge = {
  __typename?: 's0_darkshuffle_MapEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Darkshuffle_Map>;
};

export type S0_Darkshuffle_MapOrder = {
  direction: OrderDirection;
  field: S0_Darkshuffle_MapOrderField;
};

export enum S0_Darkshuffle_MapOrderField {
  GameId = 'GAME_ID',
  Level = 'LEVEL',
  Seed = 'SEED'
}

export type S0_Darkshuffle_MapWhereInput = {
  game_id?: InputMaybe<Scalars['u128']['input']>;
  game_idEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idGT?: InputMaybe<Scalars['u128']['input']>;
  game_idGTE?: InputMaybe<Scalars['u128']['input']>;
  game_idIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idLIKE?: InputMaybe<Scalars['u128']['input']>;
  game_idLT?: InputMaybe<Scalars['u128']['input']>;
  game_idLTE?: InputMaybe<Scalars['u128']['input']>;
  game_idNEQ?: InputMaybe<Scalars['u128']['input']>;
  game_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  game_idNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  level?: InputMaybe<Scalars['u8']['input']>;
  levelEQ?: InputMaybe<Scalars['u8']['input']>;
  levelGT?: InputMaybe<Scalars['u8']['input']>;
  levelGTE?: InputMaybe<Scalars['u8']['input']>;
  levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  levelLT?: InputMaybe<Scalars['u8']['input']>;
  levelLTE?: InputMaybe<Scalars['u8']['input']>;
  levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  seed?: InputMaybe<Scalars['u128']['input']>;
  seedEQ?: InputMaybe<Scalars['u128']['input']>;
  seedGT?: InputMaybe<Scalars['u128']['input']>;
  seedGTE?: InputMaybe<Scalars['u128']['input']>;
  seedIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedLIKE?: InputMaybe<Scalars['u128']['input']>;
  seedLT?: InputMaybe<Scalars['u128']['input']>;
  seedLTE?: InputMaybe<Scalars['u128']['input']>;
  seedNEQ?: InputMaybe<Scalars['u128']['input']>;
  seedNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  seedNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type S0_Darkshuffle_Monster = {
  __typename?: 's0_darkshuffle_Monster';
  attack?: Maybe<Scalars['u8']['output']>;
  health?: Maybe<Scalars['u8']['output']>;
  monster_id?: Maybe<Scalars['u8']['output']>;
};

export type S0_Darkshuffle_Season = {
  __typename?: 's0_darkshuffle_Season';
  end?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entry_amount?: Maybe<Scalars['u256']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  finalized?: Maybe<Scalars['bool']['output']>;
  reward_pool?: Maybe<Scalars['u256']['output']>;
  season_address?: Maybe<Scalars['ContractAddress']['output']>;
  season_id?: Maybe<Scalars['u32']['output']>;
  settings_id?: Maybe<Scalars['u32']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
};

export type S0_Darkshuffle_SeasonConnection = {
  __typename?: 's0_darkshuffle_SeasonConnection';
  edges?: Maybe<Array<Maybe<S0_Darkshuffle_SeasonEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Darkshuffle_SeasonEdge = {
  __typename?: 's0_darkshuffle_SeasonEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Darkshuffle_Season>;
};

export type S0_Darkshuffle_SeasonOrder = {
  direction: OrderDirection;
  field: S0_Darkshuffle_SeasonOrderField;
};

export enum S0_Darkshuffle_SeasonOrderField {
  End = 'END',
  EntryAmount = 'ENTRY_AMOUNT',
  Finalized = 'FINALIZED',
  RewardPool = 'REWARD_POOL',
  SeasonAddress = 'SEASON_ADDRESS',
  SeasonId = 'SEASON_ID',
  SettingsId = 'SETTINGS_ID',
  Start = 'START'
}

export type S0_Darkshuffle_SeasonWhereInput = {
  end?: InputMaybe<Scalars['u64']['input']>;
  endEQ?: InputMaybe<Scalars['u64']['input']>;
  endGT?: InputMaybe<Scalars['u64']['input']>;
  endGTE?: InputMaybe<Scalars['u64']['input']>;
  endIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endLIKE?: InputMaybe<Scalars['u64']['input']>;
  endLT?: InputMaybe<Scalars['u64']['input']>;
  endLTE?: InputMaybe<Scalars['u64']['input']>;
  endNEQ?: InputMaybe<Scalars['u64']['input']>;
  endNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  entry_amount?: InputMaybe<Scalars['u256']['input']>;
  entry_amountEQ?: InputMaybe<Scalars['u256']['input']>;
  entry_amountGT?: InputMaybe<Scalars['u256']['input']>;
  entry_amountGTE?: InputMaybe<Scalars['u256']['input']>;
  entry_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  entry_amountLIKE?: InputMaybe<Scalars['u256']['input']>;
  entry_amountLT?: InputMaybe<Scalars['u256']['input']>;
  entry_amountLTE?: InputMaybe<Scalars['u256']['input']>;
  entry_amountNEQ?: InputMaybe<Scalars['u256']['input']>;
  entry_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  entry_amountNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  finalized?: InputMaybe<Scalars['bool']['input']>;
  reward_pool?: InputMaybe<Scalars['u256']['input']>;
  reward_poolEQ?: InputMaybe<Scalars['u256']['input']>;
  reward_poolGT?: InputMaybe<Scalars['u256']['input']>;
  reward_poolGTE?: InputMaybe<Scalars['u256']['input']>;
  reward_poolIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  reward_poolLIKE?: InputMaybe<Scalars['u256']['input']>;
  reward_poolLT?: InputMaybe<Scalars['u256']['input']>;
  reward_poolLTE?: InputMaybe<Scalars['u256']['input']>;
  reward_poolNEQ?: InputMaybe<Scalars['u256']['input']>;
  reward_poolNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  reward_poolNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  season_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  season_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  season_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_id?: InputMaybe<Scalars['u32']['input']>;
  season_idEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idGT?: InputMaybe<Scalars['u32']['input']>;
  season_idGTE?: InputMaybe<Scalars['u32']['input']>;
  season_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  season_idLT?: InputMaybe<Scalars['u32']['input']>;
  season_idLTE?: InputMaybe<Scalars['u32']['input']>;
  season_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  season_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  season_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_id?: InputMaybe<Scalars['u32']['input']>;
  settings_idEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idGT?: InputMaybe<Scalars['u32']['input']>;
  settings_idGTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  settings_idLT?: InputMaybe<Scalars['u32']['input']>;
  settings_idLTE?: InputMaybe<Scalars['u32']['input']>;
  settings_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  settings_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  settings_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  start?: InputMaybe<Scalars['u64']['input']>;
  startEQ?: InputMaybe<Scalars['u64']['input']>;
  startGT?: InputMaybe<Scalars['u64']['input']>;
  startGTE?: InputMaybe<Scalars['u64']['input']>;
  startIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startLIKE?: InputMaybe<Scalars['u64']['input']>;
  startLT?: InputMaybe<Scalars['u64']['input']>;
  startLTE?: InputMaybe<Scalars['u64']['input']>;
  startNEQ?: InputMaybe<Scalars['u64']['input']>;
  startNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Darkshuffle_Task = {
  __typename?: 's0_darkshuffle_Task';
  description?: Maybe<Scalars['ByteArray']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  total?: Maybe<Scalars['u32']['output']>;
};

export type S0_Darkshuffle_TrophyCreation = {
  __typename?: 's0_darkshuffle_TrophyCreation';
  data?: Maybe<Scalars['ByteArray']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  end?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  group?: Maybe<Scalars['felt252']['output']>;
  hidden?: Maybe<Scalars['bool']['output']>;
  icon?: Maybe<Scalars['felt252']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  index?: Maybe<Scalars['u8']['output']>;
  points?: Maybe<Scalars['u16']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
  tasks?: Maybe<Array<Maybe<S0_Darkshuffle_Task>>>;
  title?: Maybe<Scalars['felt252']['output']>;
};

export type S0_Darkshuffle_TrophyCreationConnection = {
  __typename?: 's0_darkshuffle_TrophyCreationConnection';
  edges?: Maybe<Array<Maybe<S0_Darkshuffle_TrophyCreationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Darkshuffle_TrophyCreationEdge = {
  __typename?: 's0_darkshuffle_TrophyCreationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Darkshuffle_TrophyCreation>;
};

export type S0_Darkshuffle_TrophyCreationOrder = {
  direction: OrderDirection;
  field: S0_Darkshuffle_TrophyCreationOrderField;
};

export enum S0_Darkshuffle_TrophyCreationOrderField {
  Data = 'DATA',
  Description = 'DESCRIPTION',
  End = 'END',
  Group = 'GROUP',
  Hidden = 'HIDDEN',
  Icon = 'ICON',
  Id = 'ID',
  Index = 'INDEX',
  Points = 'POINTS',
  Start = 'START',
  Tasks = 'TASKS',
  Title = 'TITLE'
}

export type S0_Darkshuffle_TrophyCreationWhereInput = {
  data?: InputMaybe<Scalars['ByteArray']['input']>;
  dataEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  end?: InputMaybe<Scalars['u64']['input']>;
  endEQ?: InputMaybe<Scalars['u64']['input']>;
  endGT?: InputMaybe<Scalars['u64']['input']>;
  endGTE?: InputMaybe<Scalars['u64']['input']>;
  endIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endLIKE?: InputMaybe<Scalars['u64']['input']>;
  endLT?: InputMaybe<Scalars['u64']['input']>;
  endLTE?: InputMaybe<Scalars['u64']['input']>;
  endNEQ?: InputMaybe<Scalars['u64']['input']>;
  endNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  group?: InputMaybe<Scalars['felt252']['input']>;
  groupEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupGT?: InputMaybe<Scalars['felt252']['input']>;
  groupGTE?: InputMaybe<Scalars['felt252']['input']>;
  groupIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupLIKE?: InputMaybe<Scalars['felt252']['input']>;
  groupLT?: InputMaybe<Scalars['felt252']['input']>;
  groupLTE?: InputMaybe<Scalars['felt252']['input']>;
  groupNEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  hidden?: InputMaybe<Scalars['bool']['input']>;
  icon?: InputMaybe<Scalars['felt252']['input']>;
  iconEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconGT?: InputMaybe<Scalars['felt252']['input']>;
  iconGTE?: InputMaybe<Scalars['felt252']['input']>;
  iconIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconLIKE?: InputMaybe<Scalars['felt252']['input']>;
  iconLT?: InputMaybe<Scalars['felt252']['input']>;
  iconLTE?: InputMaybe<Scalars['felt252']['input']>;
  iconNEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  id?: InputMaybe<Scalars['felt252']['input']>;
  idEQ?: InputMaybe<Scalars['felt252']['input']>;
  idGT?: InputMaybe<Scalars['felt252']['input']>;
  idGTE?: InputMaybe<Scalars['felt252']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  idLT?: InputMaybe<Scalars['felt252']['input']>;
  idLTE?: InputMaybe<Scalars['felt252']['input']>;
  idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  index?: InputMaybe<Scalars['u8']['input']>;
  indexEQ?: InputMaybe<Scalars['u8']['input']>;
  indexGT?: InputMaybe<Scalars['u8']['input']>;
  indexGTE?: InputMaybe<Scalars['u8']['input']>;
  indexIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexLIKE?: InputMaybe<Scalars['u8']['input']>;
  indexLT?: InputMaybe<Scalars['u8']['input']>;
  indexLTE?: InputMaybe<Scalars['u8']['input']>;
  indexNEQ?: InputMaybe<Scalars['u8']['input']>;
  indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  points?: InputMaybe<Scalars['u16']['input']>;
  pointsEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsGT?: InputMaybe<Scalars['u16']['input']>;
  pointsGTE?: InputMaybe<Scalars['u16']['input']>;
  pointsIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsLIKE?: InputMaybe<Scalars['u16']['input']>;
  pointsLT?: InputMaybe<Scalars['u16']['input']>;
  pointsLTE?: InputMaybe<Scalars['u16']['input']>;
  pointsNEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  start?: InputMaybe<Scalars['u64']['input']>;
  startEQ?: InputMaybe<Scalars['u64']['input']>;
  startGT?: InputMaybe<Scalars['u64']['input']>;
  startGTE?: InputMaybe<Scalars['u64']['input']>;
  startIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startLIKE?: InputMaybe<Scalars['u64']['input']>;
  startLT?: InputMaybe<Scalars['u64']['input']>;
  startLTE?: InputMaybe<Scalars['u64']['input']>;
  startNEQ?: InputMaybe<Scalars['u64']['input']>;
  startNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  title?: InputMaybe<Scalars['felt252']['input']>;
  titleEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleGT?: InputMaybe<Scalars['felt252']['input']>;
  titleGTE?: InputMaybe<Scalars['felt252']['input']>;
  titleIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleLIKE?: InputMaybe<Scalars['felt252']['input']>;
  titleLT?: InputMaybe<Scalars['felt252']['input']>;
  titleLTE?: InputMaybe<Scalars['felt252']['input']>;
  titleNEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type S0_Darkshuffle_TrophyProgression = {
  __typename?: 's0_darkshuffle_TrophyProgression';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  player_id?: Maybe<Scalars['felt252']['output']>;
  task_id?: Maybe<Scalars['felt252']['output']>;
  time?: Maybe<Scalars['u64']['output']>;
};

export type S0_Darkshuffle_TrophyProgressionConnection = {
  __typename?: 's0_darkshuffle_TrophyProgressionConnection';
  edges?: Maybe<Array<Maybe<S0_Darkshuffle_TrophyProgressionEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Darkshuffle_TrophyProgressionEdge = {
  __typename?: 's0_darkshuffle_TrophyProgressionEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Darkshuffle_TrophyProgression>;
};

export type S0_Darkshuffle_TrophyProgressionOrder = {
  direction: OrderDirection;
  field: S0_Darkshuffle_TrophyProgressionOrderField;
};

export enum S0_Darkshuffle_TrophyProgressionOrderField {
  Count = 'COUNT',
  PlayerId = 'PLAYER_ID',
  TaskId = 'TASK_ID',
  Time = 'TIME'
}

export type S0_Darkshuffle_TrophyProgressionWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  player_id?: InputMaybe<Scalars['felt252']['input']>;
  player_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idGT?: InputMaybe<Scalars['felt252']['input']>;
  player_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_idLT?: InputMaybe<Scalars['felt252']['input']>;
  player_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_id?: InputMaybe<Scalars['felt252']['input']>;
  task_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idGT?: InputMaybe<Scalars['felt252']['input']>;
  task_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_idLT?: InputMaybe<Scalars['felt252']['input']>;
  task_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  time?: InputMaybe<Scalars['u64']['input']>;
  timeEQ?: InputMaybe<Scalars['u64']['input']>;
  timeGT?: InputMaybe<Scalars['u64']['input']>;
  timeGTE?: InputMaybe<Scalars['u64']['input']>;
  timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  timeLT?: InputMaybe<Scalars['u64']['input']>;
  timeLTE?: InputMaybe<Scalars['u64']['input']>;
  timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Darkshuffle_WorldConfig = {
  __typename?: 's0_darkshuffle_WorldConfig';
  config_id?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  game_count?: Maybe<Scalars['u256']['output']>;
  game_token_address?: Maybe<Scalars['ContractAddress']['output']>;
};

export type S0_Darkshuffle_WorldConfigConnection = {
  __typename?: 's0_darkshuffle_WorldConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Darkshuffle_WorldConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Darkshuffle_WorldConfigEdge = {
  __typename?: 's0_darkshuffle_WorldConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Darkshuffle_WorldConfig>;
};

export type S0_Darkshuffle_WorldConfigOrder = {
  direction: OrderDirection;
  field: S0_Darkshuffle_WorldConfigOrderField;
};

export enum S0_Darkshuffle_WorldConfigOrderField {
  ConfigId = 'CONFIG_ID',
  GameCount = 'GAME_COUNT',
  GameTokenAddress = 'GAME_TOKEN_ADDRESS'
}

export type S0_Darkshuffle_WorldConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u8']['input']>;
  config_idEQ?: InputMaybe<Scalars['u8']['input']>;
  config_idGT?: InputMaybe<Scalars['u8']['input']>;
  config_idGTE?: InputMaybe<Scalars['u8']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  config_idLT?: InputMaybe<Scalars['u8']['input']>;
  config_idLTE?: InputMaybe<Scalars['u8']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  game_count?: InputMaybe<Scalars['u256']['input']>;
  game_countEQ?: InputMaybe<Scalars['u256']['input']>;
  game_countGT?: InputMaybe<Scalars['u256']['input']>;
  game_countGTE?: InputMaybe<Scalars['u256']['input']>;
  game_countIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  game_countLIKE?: InputMaybe<Scalars['u256']['input']>;
  game_countLT?: InputMaybe<Scalars['u256']['input']>;
  game_countLTE?: InputMaybe<Scalars['u256']['input']>;
  game_countNEQ?: InputMaybe<Scalars['u256']['input']>;
  game_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  game_countNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
  game_token_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  game_token_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  game_token_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  game_token_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
};

export type S0_Eternum_AcceptOrder = {
  __typename?: 's0_eternum_AcceptOrder';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  maker_id?: Maybe<Scalars['u32']['output']>;
  taker_id?: Maybe<Scalars['u32']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
  trade_id?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_AcceptOrderConnection = {
  __typename?: 's0_eternum_AcceptOrderConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_AcceptOrderEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_AcceptOrderEdge = {
  __typename?: 's0_eternum_AcceptOrderEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_AcceptOrder>;
};

export type S0_Eternum_AcceptOrderOrder = {
  direction: OrderDirection;
  field: S0_Eternum_AcceptOrderOrderField;
};

export enum S0_Eternum_AcceptOrderOrderField {
  Id = 'ID',
  MakerId = 'MAKER_ID',
  TakerId = 'TAKER_ID',
  Timestamp = 'TIMESTAMP',
  TradeId = 'TRADE_ID'
}

export type S0_Eternum_AcceptOrderWhereInput = {
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  maker_id?: InputMaybe<Scalars['u32']['input']>;
  maker_idEQ?: InputMaybe<Scalars['u32']['input']>;
  maker_idGT?: InputMaybe<Scalars['u32']['input']>;
  maker_idGTE?: InputMaybe<Scalars['u32']['input']>;
  maker_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  maker_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  maker_idLT?: InputMaybe<Scalars['u32']['input']>;
  maker_idLTE?: InputMaybe<Scalars['u32']['input']>;
  maker_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  maker_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  maker_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  taker_id?: InputMaybe<Scalars['u32']['input']>;
  taker_idEQ?: InputMaybe<Scalars['u32']['input']>;
  taker_idGT?: InputMaybe<Scalars['u32']['input']>;
  taker_idGTE?: InputMaybe<Scalars['u32']['input']>;
  taker_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  taker_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  taker_idLT?: InputMaybe<Scalars['u32']['input']>;
  taker_idLTE?: InputMaybe<Scalars['u32']['input']>;
  taker_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  taker_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  taker_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  trade_id?: InputMaybe<Scalars['u32']['input']>;
  trade_idEQ?: InputMaybe<Scalars['u32']['input']>;
  trade_idGT?: InputMaybe<Scalars['u32']['input']>;
  trade_idGTE?: InputMaybe<Scalars['u32']['input']>;
  trade_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  trade_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  trade_idLT?: InputMaybe<Scalars['u32']['input']>;
  trade_idLTE?: InputMaybe<Scalars['u32']['input']>;
  trade_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  trade_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  trade_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_AcceptPartialOrder = {
  __typename?: 's0_eternum_AcceptPartialOrder';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  maker_id?: Maybe<Scalars['u32']['output']>;
  taker_id?: Maybe<Scalars['u32']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
  trade_id?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_AcceptPartialOrderConnection = {
  __typename?: 's0_eternum_AcceptPartialOrderConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_AcceptPartialOrderEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_AcceptPartialOrderEdge = {
  __typename?: 's0_eternum_AcceptPartialOrderEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_AcceptPartialOrder>;
};

export type S0_Eternum_AcceptPartialOrderOrder = {
  direction: OrderDirection;
  field: S0_Eternum_AcceptPartialOrderOrderField;
};

export enum S0_Eternum_AcceptPartialOrderOrderField {
  MakerId = 'MAKER_ID',
  TakerId = 'TAKER_ID',
  Timestamp = 'TIMESTAMP',
  TradeId = 'TRADE_ID'
}

export type S0_Eternum_AcceptPartialOrderWhereInput = {
  maker_id?: InputMaybe<Scalars['u32']['input']>;
  maker_idEQ?: InputMaybe<Scalars['u32']['input']>;
  maker_idGT?: InputMaybe<Scalars['u32']['input']>;
  maker_idGTE?: InputMaybe<Scalars['u32']['input']>;
  maker_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  maker_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  maker_idLT?: InputMaybe<Scalars['u32']['input']>;
  maker_idLTE?: InputMaybe<Scalars['u32']['input']>;
  maker_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  maker_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  maker_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  taker_id?: InputMaybe<Scalars['u32']['input']>;
  taker_idEQ?: InputMaybe<Scalars['u32']['input']>;
  taker_idGT?: InputMaybe<Scalars['u32']['input']>;
  taker_idGTE?: InputMaybe<Scalars['u32']['input']>;
  taker_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  taker_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  taker_idLT?: InputMaybe<Scalars['u32']['input']>;
  taker_idLTE?: InputMaybe<Scalars['u32']['input']>;
  taker_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  taker_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  taker_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  trade_id?: InputMaybe<Scalars['u32']['input']>;
  trade_idEQ?: InputMaybe<Scalars['u32']['input']>;
  trade_idGT?: InputMaybe<Scalars['u32']['input']>;
  trade_idGTE?: InputMaybe<Scalars['u32']['input']>;
  trade_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  trade_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  trade_idLT?: InputMaybe<Scalars['u32']['input']>;
  trade_idLTE?: InputMaybe<Scalars['u32']['input']>;
  trade_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  trade_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  trade_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_AddressName = {
  __typename?: 's0_eternum_AddressName';
  address?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type S0_Eternum_AddressNameConnection = {
  __typename?: 's0_eternum_AddressNameConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_AddressNameEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_AddressNameEdge = {
  __typename?: 's0_eternum_AddressNameEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_AddressName>;
};

export type S0_Eternum_AddressNameOrder = {
  direction: OrderDirection;
  field: S0_Eternum_AddressNameOrderField;
};

export enum S0_Eternum_AddressNameOrderField {
  Address = 'ADDRESS',
  Name = 'NAME'
}

export type S0_Eternum_AddressNameWhereInput = {
  address?: InputMaybe<Scalars['felt252']['input']>;
  addressEQ?: InputMaybe<Scalars['felt252']['input']>;
  addressGT?: InputMaybe<Scalars['felt252']['input']>;
  addressGTE?: InputMaybe<Scalars['felt252']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['felt252']['input']>;
  addressLT?: InputMaybe<Scalars['felt252']['input']>;
  addressLTE?: InputMaybe<Scalars['felt252']['input']>;
  addressNEQ?: InputMaybe<Scalars['felt252']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type S0_Eternum_Army = {
  __typename?: 's0_eternum_Army';
  battle_id?: Maybe<Scalars['u32']['output']>;
  battle_side?: Maybe<Scalars['Enum']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  troops?: Maybe<S0_Eternum_Troops>;
};

export type S0_Eternum_ArmyConnection = {
  __typename?: 's0_eternum_ArmyConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ArmyEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ArmyEdge = {
  __typename?: 's0_eternum_ArmyEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Army>;
};

export type S0_Eternum_ArmyOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ArmyOrderField;
};

export enum S0_Eternum_ArmyOrderField {
  BattleId = 'BATTLE_ID',
  BattleSide = 'BATTLE_SIDE',
  EntityId = 'ENTITY_ID',
  Troops = 'TROOPS'
}

export type S0_Eternum_ArmyWhereInput = {
  battle_id?: InputMaybe<Scalars['u32']['input']>;
  battle_idEQ?: InputMaybe<Scalars['u32']['input']>;
  battle_idGT?: InputMaybe<Scalars['u32']['input']>;
  battle_idGTE?: InputMaybe<Scalars['u32']['input']>;
  battle_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  battle_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  battle_idLT?: InputMaybe<Scalars['u32']['input']>;
  battle_idLTE?: InputMaybe<Scalars['u32']['input']>;
  battle_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  battle_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  battle_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  battle_side?: InputMaybe<Scalars['Enum']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_ArrivalTime = {
  __typename?: 's0_eternum_ArrivalTime';
  arrives_at?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
};

export type S0_Eternum_ArrivalTimeConnection = {
  __typename?: 's0_eternum_ArrivalTimeConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ArrivalTimeEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ArrivalTimeEdge = {
  __typename?: 's0_eternum_ArrivalTimeEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_ArrivalTime>;
};

export type S0_Eternum_ArrivalTimeOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ArrivalTimeOrderField;
};

export enum S0_Eternum_ArrivalTimeOrderField {
  ArrivesAt = 'ARRIVES_AT',
  EntityId = 'ENTITY_ID'
}

export type S0_Eternum_ArrivalTimeWhereInput = {
  arrives_at?: InputMaybe<Scalars['u64']['input']>;
  arrives_atEQ?: InputMaybe<Scalars['u64']['input']>;
  arrives_atGT?: InputMaybe<Scalars['u64']['input']>;
  arrives_atGTE?: InputMaybe<Scalars['u64']['input']>;
  arrives_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  arrives_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  arrives_atLT?: InputMaybe<Scalars['u64']['input']>;
  arrives_atLTE?: InputMaybe<Scalars['u64']['input']>;
  arrives_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  arrives_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  arrives_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_Bank = {
  __typename?: 's0_eternum_Bank';
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  exists?: Maybe<Scalars['bool']['output']>;
  owner_bridge_fee_dpt_percent?: Maybe<Scalars['u16']['output']>;
  owner_bridge_fee_wtdr_percent?: Maybe<Scalars['u16']['output']>;
  owner_fee_denom?: Maybe<Scalars['u128']['output']>;
  owner_fee_num?: Maybe<Scalars['u128']['output']>;
};

export type S0_Eternum_BankConfig = {
  __typename?: 's0_eternum_BankConfig';
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lords_cost?: Maybe<Scalars['u128']['output']>;
  lp_fee_denom?: Maybe<Scalars['u128']['output']>;
  lp_fee_num?: Maybe<Scalars['u128']['output']>;
};

export type S0_Eternum_BankConfigConnection = {
  __typename?: 's0_eternum_BankConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_BankConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_BankConfigEdge = {
  __typename?: 's0_eternum_BankConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_BankConfig>;
};

export type S0_Eternum_BankConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_BankConfigOrderField;
};

export enum S0_Eternum_BankConfigOrderField {
  ConfigId = 'CONFIG_ID',
  LordsCost = 'LORDS_COST',
  LpFeeDenom = 'LP_FEE_DENOM',
  LpFeeNum = 'LP_FEE_NUM'
}

export type S0_Eternum_BankConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  lords_cost?: InputMaybe<Scalars['u128']['input']>;
  lords_costEQ?: InputMaybe<Scalars['u128']['input']>;
  lords_costGT?: InputMaybe<Scalars['u128']['input']>;
  lords_costGTE?: InputMaybe<Scalars['u128']['input']>;
  lords_costIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  lords_costLIKE?: InputMaybe<Scalars['u128']['input']>;
  lords_costLT?: InputMaybe<Scalars['u128']['input']>;
  lords_costLTE?: InputMaybe<Scalars['u128']['input']>;
  lords_costNEQ?: InputMaybe<Scalars['u128']['input']>;
  lords_costNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  lords_costNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_denom?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_denomEQ?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_denomGT?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_denomGTE?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_denomIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  lp_fee_denomLIKE?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_denomLT?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_denomLTE?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_denomNEQ?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_denomNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  lp_fee_denomNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_num?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_numEQ?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_numGT?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_numGTE?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_numIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  lp_fee_numLIKE?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_numLT?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_numLTE?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_numNEQ?: InputMaybe<Scalars['u128']['input']>;
  lp_fee_numNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  lp_fee_numNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type S0_Eternum_BankConnection = {
  __typename?: 's0_eternum_BankConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_BankEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_BankEdge = {
  __typename?: 's0_eternum_BankEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Bank>;
};

export type S0_Eternum_BankOrder = {
  direction: OrderDirection;
  field: S0_Eternum_BankOrderField;
};

export enum S0_Eternum_BankOrderField {
  EntityId = 'ENTITY_ID',
  Exists = 'EXISTS',
  OwnerBridgeFeeDptPercent = 'OWNER_BRIDGE_FEE_DPT_PERCENT',
  OwnerBridgeFeeWtdrPercent = 'OWNER_BRIDGE_FEE_WTDR_PERCENT',
  OwnerFeeDenom = 'OWNER_FEE_DENOM',
  OwnerFeeNum = 'OWNER_FEE_NUM'
}

export type S0_Eternum_BankWhereInput = {
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  exists?: InputMaybe<Scalars['bool']['input']>;
  owner_bridge_fee_dpt_percent?: InputMaybe<Scalars['u16']['input']>;
  owner_bridge_fee_dpt_percentEQ?: InputMaybe<Scalars['u16']['input']>;
  owner_bridge_fee_dpt_percentGT?: InputMaybe<Scalars['u16']['input']>;
  owner_bridge_fee_dpt_percentGTE?: InputMaybe<Scalars['u16']['input']>;
  owner_bridge_fee_dpt_percentIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  owner_bridge_fee_dpt_percentLIKE?: InputMaybe<Scalars['u16']['input']>;
  owner_bridge_fee_dpt_percentLT?: InputMaybe<Scalars['u16']['input']>;
  owner_bridge_fee_dpt_percentLTE?: InputMaybe<Scalars['u16']['input']>;
  owner_bridge_fee_dpt_percentNEQ?: InputMaybe<Scalars['u16']['input']>;
  owner_bridge_fee_dpt_percentNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  owner_bridge_fee_dpt_percentNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  owner_bridge_fee_wtdr_percent?: InputMaybe<Scalars['u16']['input']>;
  owner_bridge_fee_wtdr_percentEQ?: InputMaybe<Scalars['u16']['input']>;
  owner_bridge_fee_wtdr_percentGT?: InputMaybe<Scalars['u16']['input']>;
  owner_bridge_fee_wtdr_percentGTE?: InputMaybe<Scalars['u16']['input']>;
  owner_bridge_fee_wtdr_percentIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  owner_bridge_fee_wtdr_percentLIKE?: InputMaybe<Scalars['u16']['input']>;
  owner_bridge_fee_wtdr_percentLT?: InputMaybe<Scalars['u16']['input']>;
  owner_bridge_fee_wtdr_percentLTE?: InputMaybe<Scalars['u16']['input']>;
  owner_bridge_fee_wtdr_percentNEQ?: InputMaybe<Scalars['u16']['input']>;
  owner_bridge_fee_wtdr_percentNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  owner_bridge_fee_wtdr_percentNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  owner_fee_denom?: InputMaybe<Scalars['u128']['input']>;
  owner_fee_denomEQ?: InputMaybe<Scalars['u128']['input']>;
  owner_fee_denomGT?: InputMaybe<Scalars['u128']['input']>;
  owner_fee_denomGTE?: InputMaybe<Scalars['u128']['input']>;
  owner_fee_denomIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  owner_fee_denomLIKE?: InputMaybe<Scalars['u128']['input']>;
  owner_fee_denomLT?: InputMaybe<Scalars['u128']['input']>;
  owner_fee_denomLTE?: InputMaybe<Scalars['u128']['input']>;
  owner_fee_denomNEQ?: InputMaybe<Scalars['u128']['input']>;
  owner_fee_denomNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  owner_fee_denomNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  owner_fee_num?: InputMaybe<Scalars['u128']['input']>;
  owner_fee_numEQ?: InputMaybe<Scalars['u128']['input']>;
  owner_fee_numGT?: InputMaybe<Scalars['u128']['input']>;
  owner_fee_numGTE?: InputMaybe<Scalars['u128']['input']>;
  owner_fee_numIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  owner_fee_numLIKE?: InputMaybe<Scalars['u128']['input']>;
  owner_fee_numLT?: InputMaybe<Scalars['u128']['input']>;
  owner_fee_numLTE?: InputMaybe<Scalars['u128']['input']>;
  owner_fee_numNEQ?: InputMaybe<Scalars['u128']['input']>;
  owner_fee_numNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  owner_fee_numNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type S0_Eternum_Battle = {
  __typename?: 's0_eternum_Battle';
  attack_army?: Maybe<S0_Eternum_BattleArmy>;
  attack_army_health?: Maybe<S0_Eternum_BattleHealth>;
  attack_army_lifetime?: Maybe<S0_Eternum_BattleArmy>;
  attack_delta?: Maybe<Scalars['u64']['output']>;
  attackers_resources_escrow_id?: Maybe<Scalars['u32']['output']>;
  defence_army?: Maybe<S0_Eternum_BattleArmy>;
  defence_army_health?: Maybe<S0_Eternum_BattleHealth>;
  defence_army_lifetime?: Maybe<S0_Eternum_BattleArmy>;
  defence_delta?: Maybe<Scalars['u64']['output']>;
  defenders_resources_escrow_id?: Maybe<Scalars['u32']['output']>;
  duration_left?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  last_updated?: Maybe<Scalars['u64']['output']>;
  start_at?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_BattleArmy = {
  __typename?: 's0_eternum_BattleArmy';
  battle_id?: Maybe<Scalars['u32']['output']>;
  battle_side?: Maybe<Scalars['Enum']['output']>;
  troops?: Maybe<S0_Eternum_Troops>;
};

export type S0_Eternum_BattleClaimData = {
  __typename?: 's0_eternum_BattleClaimData';
  claimee_address?: Maybe<Scalars['ContractAddress']['output']>;
  claimee_name?: Maybe<Scalars['felt252']['output']>;
  claimer?: Maybe<Scalars['ContractAddress']['output']>;
  claimer_army_entity_id?: Maybe<Scalars['u32']['output']>;
  claimer_name?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  event_id?: Maybe<Scalars['Enum']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  structure_entity_id?: Maybe<Scalars['u32']['output']>;
  structure_type?: Maybe<Scalars['Enum']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
  x?: Maybe<Scalars['u32']['output']>;
  y?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_BattleClaimDataConnection = {
  __typename?: 's0_eternum_BattleClaimDataConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_BattleClaimDataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_BattleClaimDataEdge = {
  __typename?: 's0_eternum_BattleClaimDataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_BattleClaimData>;
};

export type S0_Eternum_BattleClaimDataOrder = {
  direction: OrderDirection;
  field: S0_Eternum_BattleClaimDataOrderField;
};

export enum S0_Eternum_BattleClaimDataOrderField {
  ClaimeeAddress = 'CLAIMEE_ADDRESS',
  ClaimeeName = 'CLAIMEE_NAME',
  Claimer = 'CLAIMER',
  ClaimerArmyEntityId = 'CLAIMER_ARMY_ENTITY_ID',
  ClaimerName = 'CLAIMER_NAME',
  EventId = 'EVENT_ID',
  Id = 'ID',
  StructureEntityId = 'STRUCTURE_ENTITY_ID',
  StructureType = 'STRUCTURE_TYPE',
  Timestamp = 'TIMESTAMP',
  X = 'X',
  Y = 'Y'
}

export type S0_Eternum_BattleClaimDataWhereInput = {
  claimee_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimee_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimee_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimee_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimee_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  claimee_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimee_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimee_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimee_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimee_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  claimee_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimee_name?: InputMaybe<Scalars['felt252']['input']>;
  claimee_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  claimee_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  claimee_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  claimee_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  claimee_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  claimee_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  claimee_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  claimee_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  claimee_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  claimee_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  claimer?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimerEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimerGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimerGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimerIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  claimerLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimerLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimerLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimerNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  claimerNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimer_army_entity_id?: InputMaybe<Scalars['u32']['input']>;
  claimer_army_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  claimer_army_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  claimer_army_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  claimer_army_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  claimer_army_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  claimer_army_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  claimer_army_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  claimer_army_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  claimer_army_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  claimer_army_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  claimer_name?: InputMaybe<Scalars['felt252']['input']>;
  claimer_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  claimer_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  claimer_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  claimer_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  claimer_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  claimer_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  claimer_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  claimer_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  claimer_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  claimer_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  event_id?: InputMaybe<Scalars['Enum']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  structure_entity_id?: InputMaybe<Scalars['u32']['input']>;
  structure_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  structure_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  structure_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  structure_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  structure_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  structure_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  structure_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  structure_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  structure_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  structure_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  structure_type?: InputMaybe<Scalars['Enum']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  x?: InputMaybe<Scalars['u32']['input']>;
  xEQ?: InputMaybe<Scalars['u32']['input']>;
  xGT?: InputMaybe<Scalars['u32']['input']>;
  xGTE?: InputMaybe<Scalars['u32']['input']>;
  xIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  xLIKE?: InputMaybe<Scalars['u32']['input']>;
  xLT?: InputMaybe<Scalars['u32']['input']>;
  xLTE?: InputMaybe<Scalars['u32']['input']>;
  xNEQ?: InputMaybe<Scalars['u32']['input']>;
  xNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  xNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  y?: InputMaybe<Scalars['u32']['input']>;
  yEQ?: InputMaybe<Scalars['u32']['input']>;
  yGT?: InputMaybe<Scalars['u32']['input']>;
  yGTE?: InputMaybe<Scalars['u32']['input']>;
  yIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  yLIKE?: InputMaybe<Scalars['u32']['input']>;
  yLT?: InputMaybe<Scalars['u32']['input']>;
  yLTE?: InputMaybe<Scalars['u32']['input']>;
  yNEQ?: InputMaybe<Scalars['u32']['input']>;
  yNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  yNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_BattleConfig = {
  __typename?: 's0_eternum_BattleConfig';
  battle_delay_seconds?: Maybe<Scalars['u64']['output']>;
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  hyperstructure_immunity_ticks?: Maybe<Scalars['u8']['output']>;
  regular_immunity_ticks?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_BattleConfigConnection = {
  __typename?: 's0_eternum_BattleConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_BattleConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_BattleConfigEdge = {
  __typename?: 's0_eternum_BattleConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_BattleConfig>;
};

export type S0_Eternum_BattleConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_BattleConfigOrderField;
};

export enum S0_Eternum_BattleConfigOrderField {
  BattleDelaySeconds = 'BATTLE_DELAY_SECONDS',
  ConfigId = 'CONFIG_ID',
  HyperstructureImmunityTicks = 'HYPERSTRUCTURE_IMMUNITY_TICKS',
  RegularImmunityTicks = 'REGULAR_IMMUNITY_TICKS'
}

export type S0_Eternum_BattleConfigWhereInput = {
  battle_delay_seconds?: InputMaybe<Scalars['u64']['input']>;
  battle_delay_secondsEQ?: InputMaybe<Scalars['u64']['input']>;
  battle_delay_secondsGT?: InputMaybe<Scalars['u64']['input']>;
  battle_delay_secondsGTE?: InputMaybe<Scalars['u64']['input']>;
  battle_delay_secondsIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  battle_delay_secondsLIKE?: InputMaybe<Scalars['u64']['input']>;
  battle_delay_secondsLT?: InputMaybe<Scalars['u64']['input']>;
  battle_delay_secondsLTE?: InputMaybe<Scalars['u64']['input']>;
  battle_delay_secondsNEQ?: InputMaybe<Scalars['u64']['input']>;
  battle_delay_secondsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  battle_delay_secondsNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_immunity_ticks?: InputMaybe<Scalars['u8']['input']>;
  hyperstructure_immunity_ticksEQ?: InputMaybe<Scalars['u8']['input']>;
  hyperstructure_immunity_ticksGT?: InputMaybe<Scalars['u8']['input']>;
  hyperstructure_immunity_ticksGTE?: InputMaybe<Scalars['u8']['input']>;
  hyperstructure_immunity_ticksIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hyperstructure_immunity_ticksLIKE?: InputMaybe<Scalars['u8']['input']>;
  hyperstructure_immunity_ticksLT?: InputMaybe<Scalars['u8']['input']>;
  hyperstructure_immunity_ticksLTE?: InputMaybe<Scalars['u8']['input']>;
  hyperstructure_immunity_ticksNEQ?: InputMaybe<Scalars['u8']['input']>;
  hyperstructure_immunity_ticksNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  hyperstructure_immunity_ticksNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  regular_immunity_ticks?: InputMaybe<Scalars['u8']['input']>;
  regular_immunity_ticksEQ?: InputMaybe<Scalars['u8']['input']>;
  regular_immunity_ticksGT?: InputMaybe<Scalars['u8']['input']>;
  regular_immunity_ticksGTE?: InputMaybe<Scalars['u8']['input']>;
  regular_immunity_ticksIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  regular_immunity_ticksLIKE?: InputMaybe<Scalars['u8']['input']>;
  regular_immunity_ticksLT?: InputMaybe<Scalars['u8']['input']>;
  regular_immunity_ticksLTE?: InputMaybe<Scalars['u8']['input']>;
  regular_immunity_ticksNEQ?: InputMaybe<Scalars['u8']['input']>;
  regular_immunity_ticksNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  regular_immunity_ticksNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_BattleConnection = {
  __typename?: 's0_eternum_BattleConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_BattleEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_BattleEdge = {
  __typename?: 's0_eternum_BattleEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Battle>;
};

export type S0_Eternum_BattleHealth = {
  __typename?: 's0_eternum_BattleHealth';
  current?: Maybe<Scalars['u128']['output']>;
  lifetime?: Maybe<Scalars['u128']['output']>;
};

export type S0_Eternum_BattleJoinData = {
  __typename?: 's0_eternum_BattleJoinData';
  battle_entity_id?: Maybe<Scalars['u32']['output']>;
  duration_left?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  event_id?: Maybe<Scalars['Enum']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  joiner?: Maybe<Scalars['ContractAddress']['output']>;
  joiner_army_entity_id?: Maybe<Scalars['u32']['output']>;
  joiner_name?: Maybe<Scalars['felt252']['output']>;
  joiner_side?: Maybe<Scalars['Enum']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
  x?: Maybe<Scalars['u32']['output']>;
  y?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_BattleJoinDataConnection = {
  __typename?: 's0_eternum_BattleJoinDataConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_BattleJoinDataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_BattleJoinDataEdge = {
  __typename?: 's0_eternum_BattleJoinDataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_BattleJoinData>;
};

export type S0_Eternum_BattleJoinDataOrder = {
  direction: OrderDirection;
  field: S0_Eternum_BattleJoinDataOrderField;
};

export enum S0_Eternum_BattleJoinDataOrderField {
  BattleEntityId = 'BATTLE_ENTITY_ID',
  DurationLeft = 'DURATION_LEFT',
  EventId = 'EVENT_ID',
  Id = 'ID',
  Joiner = 'JOINER',
  JoinerArmyEntityId = 'JOINER_ARMY_ENTITY_ID',
  JoinerName = 'JOINER_NAME',
  JoinerSide = 'JOINER_SIDE',
  Timestamp = 'TIMESTAMP',
  X = 'X',
  Y = 'Y'
}

export type S0_Eternum_BattleJoinDataWhereInput = {
  battle_entity_id?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  battle_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  battle_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  duration_left?: InputMaybe<Scalars['u64']['input']>;
  duration_leftEQ?: InputMaybe<Scalars['u64']['input']>;
  duration_leftGT?: InputMaybe<Scalars['u64']['input']>;
  duration_leftGTE?: InputMaybe<Scalars['u64']['input']>;
  duration_leftIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  duration_leftLIKE?: InputMaybe<Scalars['u64']['input']>;
  duration_leftLT?: InputMaybe<Scalars['u64']['input']>;
  duration_leftLTE?: InputMaybe<Scalars['u64']['input']>;
  duration_leftNEQ?: InputMaybe<Scalars['u64']['input']>;
  duration_leftNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  duration_leftNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  event_id?: InputMaybe<Scalars['Enum']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  joiner?: InputMaybe<Scalars['ContractAddress']['input']>;
  joinerEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  joinerGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  joinerGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  joinerIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  joinerLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  joinerLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  joinerLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  joinerNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  joinerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  joinerNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  joiner_army_entity_id?: InputMaybe<Scalars['u32']['input']>;
  joiner_army_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  joiner_army_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  joiner_army_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  joiner_army_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  joiner_army_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  joiner_army_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  joiner_army_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  joiner_army_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  joiner_army_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  joiner_army_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  joiner_name?: InputMaybe<Scalars['felt252']['input']>;
  joiner_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  joiner_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  joiner_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  joiner_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  joiner_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  joiner_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  joiner_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  joiner_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  joiner_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  joiner_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  joiner_side?: InputMaybe<Scalars['Enum']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  x?: InputMaybe<Scalars['u32']['input']>;
  xEQ?: InputMaybe<Scalars['u32']['input']>;
  xGT?: InputMaybe<Scalars['u32']['input']>;
  xGTE?: InputMaybe<Scalars['u32']['input']>;
  xIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  xLIKE?: InputMaybe<Scalars['u32']['input']>;
  xLT?: InputMaybe<Scalars['u32']['input']>;
  xLTE?: InputMaybe<Scalars['u32']['input']>;
  xNEQ?: InputMaybe<Scalars['u32']['input']>;
  xNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  xNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  y?: InputMaybe<Scalars['u32']['input']>;
  yEQ?: InputMaybe<Scalars['u32']['input']>;
  yGT?: InputMaybe<Scalars['u32']['input']>;
  yGTE?: InputMaybe<Scalars['u32']['input']>;
  yIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  yLIKE?: InputMaybe<Scalars['u32']['input']>;
  yLT?: InputMaybe<Scalars['u32']['input']>;
  yLTE?: InputMaybe<Scalars['u32']['input']>;
  yNEQ?: InputMaybe<Scalars['u32']['input']>;
  yNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  yNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_BattleLeaveData = {
  __typename?: 's0_eternum_BattleLeaveData';
  battle_entity_id?: Maybe<Scalars['u32']['output']>;
  duration_left?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  event_id?: Maybe<Scalars['Enum']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  leaver?: Maybe<Scalars['ContractAddress']['output']>;
  leaver_army_entity_id?: Maybe<Scalars['u32']['output']>;
  leaver_name?: Maybe<Scalars['felt252']['output']>;
  leaver_side?: Maybe<Scalars['Enum']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
  x?: Maybe<Scalars['u32']['output']>;
  y?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_BattleLeaveDataConnection = {
  __typename?: 's0_eternum_BattleLeaveDataConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_BattleLeaveDataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_BattleLeaveDataEdge = {
  __typename?: 's0_eternum_BattleLeaveDataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_BattleLeaveData>;
};

export type S0_Eternum_BattleLeaveDataOrder = {
  direction: OrderDirection;
  field: S0_Eternum_BattleLeaveDataOrderField;
};

export enum S0_Eternum_BattleLeaveDataOrderField {
  BattleEntityId = 'BATTLE_ENTITY_ID',
  DurationLeft = 'DURATION_LEFT',
  EventId = 'EVENT_ID',
  Id = 'ID',
  Leaver = 'LEAVER',
  LeaverArmyEntityId = 'LEAVER_ARMY_ENTITY_ID',
  LeaverName = 'LEAVER_NAME',
  LeaverSide = 'LEAVER_SIDE',
  Timestamp = 'TIMESTAMP',
  X = 'X',
  Y = 'Y'
}

export type S0_Eternum_BattleLeaveDataWhereInput = {
  battle_entity_id?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  battle_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  battle_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  duration_left?: InputMaybe<Scalars['u64']['input']>;
  duration_leftEQ?: InputMaybe<Scalars['u64']['input']>;
  duration_leftGT?: InputMaybe<Scalars['u64']['input']>;
  duration_leftGTE?: InputMaybe<Scalars['u64']['input']>;
  duration_leftIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  duration_leftLIKE?: InputMaybe<Scalars['u64']['input']>;
  duration_leftLT?: InputMaybe<Scalars['u64']['input']>;
  duration_leftLTE?: InputMaybe<Scalars['u64']['input']>;
  duration_leftNEQ?: InputMaybe<Scalars['u64']['input']>;
  duration_leftNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  duration_leftNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  event_id?: InputMaybe<Scalars['Enum']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  leaver?: InputMaybe<Scalars['ContractAddress']['input']>;
  leaverEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  leaverGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  leaverGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  leaverIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  leaverLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  leaverLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  leaverLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  leaverNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  leaverNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  leaverNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  leaver_army_entity_id?: InputMaybe<Scalars['u32']['input']>;
  leaver_army_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  leaver_army_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  leaver_army_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  leaver_army_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  leaver_army_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  leaver_army_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  leaver_army_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  leaver_army_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  leaver_army_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  leaver_army_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  leaver_name?: InputMaybe<Scalars['felt252']['input']>;
  leaver_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  leaver_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  leaver_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  leaver_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  leaver_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  leaver_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  leaver_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  leaver_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  leaver_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  leaver_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  leaver_side?: InputMaybe<Scalars['Enum']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  x?: InputMaybe<Scalars['u32']['input']>;
  xEQ?: InputMaybe<Scalars['u32']['input']>;
  xGT?: InputMaybe<Scalars['u32']['input']>;
  xGTE?: InputMaybe<Scalars['u32']['input']>;
  xIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  xLIKE?: InputMaybe<Scalars['u32']['input']>;
  xLT?: InputMaybe<Scalars['u32']['input']>;
  xLTE?: InputMaybe<Scalars['u32']['input']>;
  xNEQ?: InputMaybe<Scalars['u32']['input']>;
  xNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  xNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  y?: InputMaybe<Scalars['u32']['input']>;
  yEQ?: InputMaybe<Scalars['u32']['input']>;
  yGT?: InputMaybe<Scalars['u32']['input']>;
  yGTE?: InputMaybe<Scalars['u32']['input']>;
  yIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  yLIKE?: InputMaybe<Scalars['u32']['input']>;
  yLT?: InputMaybe<Scalars['u32']['input']>;
  yLTE?: InputMaybe<Scalars['u32']['input']>;
  yNEQ?: InputMaybe<Scalars['u32']['input']>;
  yNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  yNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_BattleOrder = {
  direction: OrderDirection;
  field: S0_Eternum_BattleOrderField;
};

export enum S0_Eternum_BattleOrderField {
  AttackersResourcesEscrowId = 'ATTACKERS_RESOURCES_ESCROW_ID',
  AttackArmy = 'ATTACK_ARMY',
  AttackArmyHealth = 'ATTACK_ARMY_HEALTH',
  AttackArmyLifetime = 'ATTACK_ARMY_LIFETIME',
  AttackDelta = 'ATTACK_DELTA',
  DefenceArmy = 'DEFENCE_ARMY',
  DefenceArmyHealth = 'DEFENCE_ARMY_HEALTH',
  DefenceArmyLifetime = 'DEFENCE_ARMY_LIFETIME',
  DefenceDelta = 'DEFENCE_DELTA',
  DefendersResourcesEscrowId = 'DEFENDERS_RESOURCES_ESCROW_ID',
  DurationLeft = 'DURATION_LEFT',
  EntityId = 'ENTITY_ID',
  LastUpdated = 'LAST_UPDATED',
  StartAt = 'START_AT'
}

export type S0_Eternum_BattlePillageData = {
  __typename?: 's0_eternum_BattlePillageData';
  attacker_lost_troops?: Maybe<S0_Eternum_Troops>;
  destroyed_building_category?: Maybe<Scalars['Enum']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  event_id?: Maybe<Scalars['Enum']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  pillaged_resources?: Maybe<Array<Maybe<S0_Eternum_U8u128>>>;
  pillaged_structure_entity_id?: Maybe<Scalars['u32']['output']>;
  pillaged_structure_owner?: Maybe<Scalars['ContractAddress']['output']>;
  pillaged_structure_owner_name?: Maybe<Scalars['felt252']['output']>;
  pillager?: Maybe<Scalars['ContractAddress']['output']>;
  pillager_army_entity_id?: Maybe<Scalars['u32']['output']>;
  pillager_name?: Maybe<Scalars['felt252']['output']>;
  pillager_realm_entity_id?: Maybe<Scalars['u32']['output']>;
  structure_lost_troops?: Maybe<S0_Eternum_Troops>;
  structure_type?: Maybe<Scalars['Enum']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
  winner?: Maybe<Scalars['Enum']['output']>;
  x?: Maybe<Scalars['u32']['output']>;
  y?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_BattlePillageDataConnection = {
  __typename?: 's0_eternum_BattlePillageDataConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_BattlePillageDataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_BattlePillageDataEdge = {
  __typename?: 's0_eternum_BattlePillageDataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_BattlePillageData>;
};

export type S0_Eternum_BattlePillageDataOrder = {
  direction: OrderDirection;
  field: S0_Eternum_BattlePillageDataOrderField;
};

export enum S0_Eternum_BattlePillageDataOrderField {
  AttackerLostTroops = 'ATTACKER_LOST_TROOPS',
  DestroyedBuildingCategory = 'DESTROYED_BUILDING_CATEGORY',
  EventId = 'EVENT_ID',
  Id = 'ID',
  PillagedResources = 'PILLAGED_RESOURCES',
  PillagedStructureEntityId = 'PILLAGED_STRUCTURE_ENTITY_ID',
  PillagedStructureOwner = 'PILLAGED_STRUCTURE_OWNER',
  PillagedStructureOwnerName = 'PILLAGED_STRUCTURE_OWNER_NAME',
  Pillager = 'PILLAGER',
  PillagerArmyEntityId = 'PILLAGER_ARMY_ENTITY_ID',
  PillagerName = 'PILLAGER_NAME',
  PillagerRealmEntityId = 'PILLAGER_REALM_ENTITY_ID',
  StructureLostTroops = 'STRUCTURE_LOST_TROOPS',
  StructureType = 'STRUCTURE_TYPE',
  Timestamp = 'TIMESTAMP',
  Winner = 'WINNER',
  X = 'X',
  Y = 'Y'
}

export type S0_Eternum_BattlePillageDataWhereInput = {
  destroyed_building_category?: InputMaybe<Scalars['Enum']['input']>;
  event_id?: InputMaybe<Scalars['Enum']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  pillaged_structure_entity_id?: InputMaybe<Scalars['u32']['input']>;
  pillaged_structure_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  pillaged_structure_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  pillaged_structure_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  pillaged_structure_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  pillaged_structure_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  pillaged_structure_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  pillaged_structure_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  pillaged_structure_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  pillaged_structure_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  pillaged_structure_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  pillaged_structure_owner?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillaged_structure_ownerEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillaged_structure_ownerGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillaged_structure_ownerGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillaged_structure_ownerIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  pillaged_structure_ownerLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillaged_structure_ownerLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillaged_structure_ownerLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillaged_structure_ownerNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillaged_structure_ownerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  pillaged_structure_ownerNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillaged_structure_owner_name?: InputMaybe<Scalars['felt252']['input']>;
  pillaged_structure_owner_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  pillaged_structure_owner_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  pillaged_structure_owner_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  pillaged_structure_owner_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  pillaged_structure_owner_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  pillaged_structure_owner_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  pillaged_structure_owner_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  pillaged_structure_owner_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  pillaged_structure_owner_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  pillaged_structure_owner_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  pillager?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillagerEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillagerGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillagerGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillagerIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  pillagerLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillagerLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillagerLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillagerNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillagerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  pillagerNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  pillager_army_entity_id?: InputMaybe<Scalars['u32']['input']>;
  pillager_army_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  pillager_army_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  pillager_army_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  pillager_army_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  pillager_army_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  pillager_army_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  pillager_army_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  pillager_army_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  pillager_army_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  pillager_army_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  pillager_name?: InputMaybe<Scalars['felt252']['input']>;
  pillager_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  pillager_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  pillager_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  pillager_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  pillager_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  pillager_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  pillager_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  pillager_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  pillager_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  pillager_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  pillager_realm_entity_id?: InputMaybe<Scalars['u32']['input']>;
  pillager_realm_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  pillager_realm_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  pillager_realm_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  pillager_realm_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  pillager_realm_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  pillager_realm_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  pillager_realm_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  pillager_realm_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  pillager_realm_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  pillager_realm_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  structure_type?: InputMaybe<Scalars['Enum']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  winner?: InputMaybe<Scalars['Enum']['input']>;
  x?: InputMaybe<Scalars['u32']['input']>;
  xEQ?: InputMaybe<Scalars['u32']['input']>;
  xGT?: InputMaybe<Scalars['u32']['input']>;
  xGTE?: InputMaybe<Scalars['u32']['input']>;
  xIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  xLIKE?: InputMaybe<Scalars['u32']['input']>;
  xLT?: InputMaybe<Scalars['u32']['input']>;
  xLTE?: InputMaybe<Scalars['u32']['input']>;
  xNEQ?: InputMaybe<Scalars['u32']['input']>;
  xNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  xNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  y?: InputMaybe<Scalars['u32']['input']>;
  yEQ?: InputMaybe<Scalars['u32']['input']>;
  yGT?: InputMaybe<Scalars['u32']['input']>;
  yGTE?: InputMaybe<Scalars['u32']['input']>;
  yIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  yLIKE?: InputMaybe<Scalars['u32']['input']>;
  yLT?: InputMaybe<Scalars['u32']['input']>;
  yLTE?: InputMaybe<Scalars['u32']['input']>;
  yNEQ?: InputMaybe<Scalars['u32']['input']>;
  yNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  yNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_BattleStartData = {
  __typename?: 's0_eternum_BattleStartData';
  attacker?: Maybe<Scalars['ContractAddress']['output']>;
  attacker_army_entity_id?: Maybe<Scalars['u32']['output']>;
  attacker_name?: Maybe<Scalars['felt252']['output']>;
  battle_entity_id?: Maybe<Scalars['u32']['output']>;
  defender?: Maybe<Scalars['ContractAddress']['output']>;
  defender_army_entity_id?: Maybe<Scalars['u32']['output']>;
  defender_name?: Maybe<Scalars['felt252']['output']>;
  duration_left?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  event_id?: Maybe<Scalars['Enum']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  structure_type?: Maybe<Scalars['Enum']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
  x?: Maybe<Scalars['u32']['output']>;
  y?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_BattleStartDataConnection = {
  __typename?: 's0_eternum_BattleStartDataConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_BattleStartDataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_BattleStartDataEdge = {
  __typename?: 's0_eternum_BattleStartDataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_BattleStartData>;
};

export type S0_Eternum_BattleStartDataOrder = {
  direction: OrderDirection;
  field: S0_Eternum_BattleStartDataOrderField;
};

export enum S0_Eternum_BattleStartDataOrderField {
  Attacker = 'ATTACKER',
  AttackerArmyEntityId = 'ATTACKER_ARMY_ENTITY_ID',
  AttackerName = 'ATTACKER_NAME',
  BattleEntityId = 'BATTLE_ENTITY_ID',
  Defender = 'DEFENDER',
  DefenderArmyEntityId = 'DEFENDER_ARMY_ENTITY_ID',
  DefenderName = 'DEFENDER_NAME',
  DurationLeft = 'DURATION_LEFT',
  EventId = 'EVENT_ID',
  Id = 'ID',
  StructureType = 'STRUCTURE_TYPE',
  Timestamp = 'TIMESTAMP',
  X = 'X',
  Y = 'Y'
}

export type S0_Eternum_BattleStartDataWhereInput = {
  attacker?: InputMaybe<Scalars['ContractAddress']['input']>;
  attackerEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  attackerGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  attackerGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  attackerIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  attackerLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  attackerLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  attackerLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  attackerNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  attackerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  attackerNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  attacker_army_entity_id?: InputMaybe<Scalars['u32']['input']>;
  attacker_army_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  attacker_army_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  attacker_army_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  attacker_army_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  attacker_army_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  attacker_army_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  attacker_army_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  attacker_army_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  attacker_army_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  attacker_army_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  attacker_name?: InputMaybe<Scalars['felt252']['input']>;
  attacker_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  attacker_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  attacker_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  attacker_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  attacker_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  attacker_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  attacker_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  attacker_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  attacker_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  attacker_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  battle_entity_id?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  battle_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  battle_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  battle_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  defender?: InputMaybe<Scalars['ContractAddress']['input']>;
  defenderEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  defenderGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  defenderGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  defenderIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  defenderLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  defenderLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  defenderLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  defenderNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  defenderNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  defenderNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  defender_army_entity_id?: InputMaybe<Scalars['u32']['input']>;
  defender_army_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  defender_army_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  defender_army_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  defender_army_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  defender_army_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  defender_army_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  defender_army_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  defender_army_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  defender_army_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  defender_army_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  defender_name?: InputMaybe<Scalars['felt252']['input']>;
  defender_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  defender_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  defender_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  defender_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  defender_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  defender_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  defender_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  defender_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  defender_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  defender_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  duration_left?: InputMaybe<Scalars['u64']['input']>;
  duration_leftEQ?: InputMaybe<Scalars['u64']['input']>;
  duration_leftGT?: InputMaybe<Scalars['u64']['input']>;
  duration_leftGTE?: InputMaybe<Scalars['u64']['input']>;
  duration_leftIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  duration_leftLIKE?: InputMaybe<Scalars['u64']['input']>;
  duration_leftLT?: InputMaybe<Scalars['u64']['input']>;
  duration_leftLTE?: InputMaybe<Scalars['u64']['input']>;
  duration_leftNEQ?: InputMaybe<Scalars['u64']['input']>;
  duration_leftNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  duration_leftNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  event_id?: InputMaybe<Scalars['Enum']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  structure_type?: InputMaybe<Scalars['Enum']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  x?: InputMaybe<Scalars['u32']['input']>;
  xEQ?: InputMaybe<Scalars['u32']['input']>;
  xGT?: InputMaybe<Scalars['u32']['input']>;
  xGTE?: InputMaybe<Scalars['u32']['input']>;
  xIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  xLIKE?: InputMaybe<Scalars['u32']['input']>;
  xLT?: InputMaybe<Scalars['u32']['input']>;
  xLTE?: InputMaybe<Scalars['u32']['input']>;
  xNEQ?: InputMaybe<Scalars['u32']['input']>;
  xNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  xNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  y?: InputMaybe<Scalars['u32']['input']>;
  yEQ?: InputMaybe<Scalars['u32']['input']>;
  yGT?: InputMaybe<Scalars['u32']['input']>;
  yGTE?: InputMaybe<Scalars['u32']['input']>;
  yIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  yLIKE?: InputMaybe<Scalars['u32']['input']>;
  yLT?: InputMaybe<Scalars['u32']['input']>;
  yLTE?: InputMaybe<Scalars['u32']['input']>;
  yNEQ?: InputMaybe<Scalars['u32']['input']>;
  yNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  yNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_BattleWhereInput = {
  attack_delta?: InputMaybe<Scalars['u64']['input']>;
  attack_deltaEQ?: InputMaybe<Scalars['u64']['input']>;
  attack_deltaGT?: InputMaybe<Scalars['u64']['input']>;
  attack_deltaGTE?: InputMaybe<Scalars['u64']['input']>;
  attack_deltaIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  attack_deltaLIKE?: InputMaybe<Scalars['u64']['input']>;
  attack_deltaLT?: InputMaybe<Scalars['u64']['input']>;
  attack_deltaLTE?: InputMaybe<Scalars['u64']['input']>;
  attack_deltaNEQ?: InputMaybe<Scalars['u64']['input']>;
  attack_deltaNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  attack_deltaNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  attackers_resources_escrow_id?: InputMaybe<Scalars['u32']['input']>;
  attackers_resources_escrow_idEQ?: InputMaybe<Scalars['u32']['input']>;
  attackers_resources_escrow_idGT?: InputMaybe<Scalars['u32']['input']>;
  attackers_resources_escrow_idGTE?: InputMaybe<Scalars['u32']['input']>;
  attackers_resources_escrow_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  attackers_resources_escrow_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  attackers_resources_escrow_idLT?: InputMaybe<Scalars['u32']['input']>;
  attackers_resources_escrow_idLTE?: InputMaybe<Scalars['u32']['input']>;
  attackers_resources_escrow_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  attackers_resources_escrow_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  attackers_resources_escrow_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  defence_delta?: InputMaybe<Scalars['u64']['input']>;
  defence_deltaEQ?: InputMaybe<Scalars['u64']['input']>;
  defence_deltaGT?: InputMaybe<Scalars['u64']['input']>;
  defence_deltaGTE?: InputMaybe<Scalars['u64']['input']>;
  defence_deltaIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  defence_deltaLIKE?: InputMaybe<Scalars['u64']['input']>;
  defence_deltaLT?: InputMaybe<Scalars['u64']['input']>;
  defence_deltaLTE?: InputMaybe<Scalars['u64']['input']>;
  defence_deltaNEQ?: InputMaybe<Scalars['u64']['input']>;
  defence_deltaNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  defence_deltaNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  defenders_resources_escrow_id?: InputMaybe<Scalars['u32']['input']>;
  defenders_resources_escrow_idEQ?: InputMaybe<Scalars['u32']['input']>;
  defenders_resources_escrow_idGT?: InputMaybe<Scalars['u32']['input']>;
  defenders_resources_escrow_idGTE?: InputMaybe<Scalars['u32']['input']>;
  defenders_resources_escrow_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  defenders_resources_escrow_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  defenders_resources_escrow_idLT?: InputMaybe<Scalars['u32']['input']>;
  defenders_resources_escrow_idLTE?: InputMaybe<Scalars['u32']['input']>;
  defenders_resources_escrow_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  defenders_resources_escrow_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  defenders_resources_escrow_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  duration_left?: InputMaybe<Scalars['u64']['input']>;
  duration_leftEQ?: InputMaybe<Scalars['u64']['input']>;
  duration_leftGT?: InputMaybe<Scalars['u64']['input']>;
  duration_leftGTE?: InputMaybe<Scalars['u64']['input']>;
  duration_leftIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  duration_leftLIKE?: InputMaybe<Scalars['u64']['input']>;
  duration_leftLT?: InputMaybe<Scalars['u64']['input']>;
  duration_leftLTE?: InputMaybe<Scalars['u64']['input']>;
  duration_leftNEQ?: InputMaybe<Scalars['u64']['input']>;
  duration_leftNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  duration_leftNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  last_updated?: InputMaybe<Scalars['u64']['input']>;
  last_updatedEQ?: InputMaybe<Scalars['u64']['input']>;
  last_updatedGT?: InputMaybe<Scalars['u64']['input']>;
  last_updatedGTE?: InputMaybe<Scalars['u64']['input']>;
  last_updatedIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  last_updatedLIKE?: InputMaybe<Scalars['u64']['input']>;
  last_updatedLT?: InputMaybe<Scalars['u64']['input']>;
  last_updatedLTE?: InputMaybe<Scalars['u64']['input']>;
  last_updatedNEQ?: InputMaybe<Scalars['u64']['input']>;
  last_updatedNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  last_updatedNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  start_at?: InputMaybe<Scalars['u64']['input']>;
  start_atEQ?: InputMaybe<Scalars['u64']['input']>;
  start_atGT?: InputMaybe<Scalars['u64']['input']>;
  start_atGTE?: InputMaybe<Scalars['u64']['input']>;
  start_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  start_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  start_atLT?: InputMaybe<Scalars['u64']['input']>;
  start_atLTE?: InputMaybe<Scalars['u64']['input']>;
  start_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  start_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  start_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_Building = {
  __typename?: 's0_eternum_Building';
  bonus_percent?: Maybe<Scalars['u32']['output']>;
  category?: Maybe<Scalars['Enum']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  inner_col?: Maybe<Scalars['u32']['output']>;
  inner_row?: Maybe<Scalars['u32']['output']>;
  outer_col?: Maybe<Scalars['u32']['output']>;
  outer_entity_id?: Maybe<Scalars['u32']['output']>;
  outer_row?: Maybe<Scalars['u32']['output']>;
  paused?: Maybe<Scalars['bool']['output']>;
  produced_resource_type?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_BuildingCategoryPopConfig = {
  __typename?: 's0_eternum_BuildingCategoryPopConfig';
  building_category?: Maybe<Scalars['Enum']['output']>;
  capacity?: Maybe<Scalars['u32']['output']>;
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  population?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_BuildingCategoryPopConfigConnection = {
  __typename?: 's0_eternum_BuildingCategoryPopConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_BuildingCategoryPopConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_BuildingCategoryPopConfigEdge = {
  __typename?: 's0_eternum_BuildingCategoryPopConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_BuildingCategoryPopConfig>;
};

export type S0_Eternum_BuildingCategoryPopConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_BuildingCategoryPopConfigOrderField;
};

export enum S0_Eternum_BuildingCategoryPopConfigOrderField {
  BuildingCategory = 'BUILDING_CATEGORY',
  Capacity = 'CAPACITY',
  ConfigId = 'CONFIG_ID',
  Population = 'POPULATION'
}

export type S0_Eternum_BuildingCategoryPopConfigWhereInput = {
  building_category?: InputMaybe<Scalars['Enum']['input']>;
  capacity?: InputMaybe<Scalars['u32']['input']>;
  capacityEQ?: InputMaybe<Scalars['u32']['input']>;
  capacityGT?: InputMaybe<Scalars['u32']['input']>;
  capacityGTE?: InputMaybe<Scalars['u32']['input']>;
  capacityIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  capacityLIKE?: InputMaybe<Scalars['u32']['input']>;
  capacityLT?: InputMaybe<Scalars['u32']['input']>;
  capacityLTE?: InputMaybe<Scalars['u32']['input']>;
  capacityNEQ?: InputMaybe<Scalars['u32']['input']>;
  capacityNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  capacityNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  population?: InputMaybe<Scalars['u32']['input']>;
  populationEQ?: InputMaybe<Scalars['u32']['input']>;
  populationGT?: InputMaybe<Scalars['u32']['input']>;
  populationGTE?: InputMaybe<Scalars['u32']['input']>;
  populationIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  populationLIKE?: InputMaybe<Scalars['u32']['input']>;
  populationLT?: InputMaybe<Scalars['u32']['input']>;
  populationLTE?: InputMaybe<Scalars['u32']['input']>;
  populationNEQ?: InputMaybe<Scalars['u32']['input']>;
  populationNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  populationNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_BuildingConfig = {
  __typename?: 's0_eternum_BuildingConfig';
  category?: Maybe<Scalars['Enum']['output']>;
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  resource_cost_count?: Maybe<Scalars['u32']['output']>;
  resource_cost_id?: Maybe<Scalars['u32']['output']>;
  resource_type?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_BuildingConfigConnection = {
  __typename?: 's0_eternum_BuildingConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_BuildingConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_BuildingConfigEdge = {
  __typename?: 's0_eternum_BuildingConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_BuildingConfig>;
};

export type S0_Eternum_BuildingConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_BuildingConfigOrderField;
};

export enum S0_Eternum_BuildingConfigOrderField {
  Category = 'CATEGORY',
  ConfigId = 'CONFIG_ID',
  ResourceCostCount = 'RESOURCE_COST_COUNT',
  ResourceCostId = 'RESOURCE_COST_ID',
  ResourceType = 'RESOURCE_TYPE'
}

export type S0_Eternum_BuildingConfigWhereInput = {
  category?: InputMaybe<Scalars['Enum']['input']>;
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_count?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_countEQ?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_countGT?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_countGTE?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  resource_cost_countLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_countLT?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_countLTE?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_countNEQ?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  resource_cost_countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_id?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_idEQ?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_idGT?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_idGTE?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  resource_cost_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_idLT?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_idLTE?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  resource_cost_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  resource_cost_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_type?: InputMaybe<Scalars['u8']['input']>;
  resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_BuildingConnection = {
  __typename?: 's0_eternum_BuildingConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_BuildingEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_BuildingEdge = {
  __typename?: 's0_eternum_BuildingEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Building>;
};

export type S0_Eternum_BuildingGeneralConfig = {
  __typename?: 's0_eternum_BuildingGeneralConfig';
  base_cost_percent_increase?: Maybe<Scalars['u16']['output']>;
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
};

export type S0_Eternum_BuildingGeneralConfigConnection = {
  __typename?: 's0_eternum_BuildingGeneralConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_BuildingGeneralConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_BuildingGeneralConfigEdge = {
  __typename?: 's0_eternum_BuildingGeneralConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_BuildingGeneralConfig>;
};

export type S0_Eternum_BuildingGeneralConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_BuildingGeneralConfigOrderField;
};

export enum S0_Eternum_BuildingGeneralConfigOrderField {
  BaseCostPercentIncrease = 'BASE_COST_PERCENT_INCREASE',
  ConfigId = 'CONFIG_ID'
}

export type S0_Eternum_BuildingGeneralConfigWhereInput = {
  base_cost_percent_increase?: InputMaybe<Scalars['u16']['input']>;
  base_cost_percent_increaseEQ?: InputMaybe<Scalars['u16']['input']>;
  base_cost_percent_increaseGT?: InputMaybe<Scalars['u16']['input']>;
  base_cost_percent_increaseGTE?: InputMaybe<Scalars['u16']['input']>;
  base_cost_percent_increaseIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  base_cost_percent_increaseLIKE?: InputMaybe<Scalars['u16']['input']>;
  base_cost_percent_increaseLT?: InputMaybe<Scalars['u16']['input']>;
  base_cost_percent_increaseLTE?: InputMaybe<Scalars['u16']['input']>;
  base_cost_percent_increaseNEQ?: InputMaybe<Scalars['u16']['input']>;
  base_cost_percent_increaseNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  base_cost_percent_increaseNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_BuildingOrder = {
  direction: OrderDirection;
  field: S0_Eternum_BuildingOrderField;
};

export enum S0_Eternum_BuildingOrderField {
  BonusPercent = 'BONUS_PERCENT',
  Category = 'CATEGORY',
  EntityId = 'ENTITY_ID',
  InnerCol = 'INNER_COL',
  InnerRow = 'INNER_ROW',
  OuterCol = 'OUTER_COL',
  OuterEntityId = 'OUTER_ENTITY_ID',
  OuterRow = 'OUTER_ROW',
  Paused = 'PAUSED',
  ProducedResourceType = 'PRODUCED_RESOURCE_TYPE'
}

export type S0_Eternum_BuildingQuantityv2 = {
  __typename?: 's0_eternum_BuildingQuantityv2';
  category?: Maybe<Scalars['Enum']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  value?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_BuildingQuantityv2Connection = {
  __typename?: 's0_eternum_BuildingQuantityv2Connection';
  edges?: Maybe<Array<Maybe<S0_Eternum_BuildingQuantityv2Edge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_BuildingQuantityv2Edge = {
  __typename?: 's0_eternum_BuildingQuantityv2Edge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_BuildingQuantityv2>;
};

export type S0_Eternum_BuildingQuantityv2Order = {
  direction: OrderDirection;
  field: S0_Eternum_BuildingQuantityv2OrderField;
};

export enum S0_Eternum_BuildingQuantityv2OrderField {
  Category = 'CATEGORY',
  EntityId = 'ENTITY_ID',
  Value = 'VALUE'
}

export type S0_Eternum_BuildingQuantityv2WhereInput = {
  category?: InputMaybe<Scalars['Enum']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  value?: InputMaybe<Scalars['u8']['input']>;
  valueEQ?: InputMaybe<Scalars['u8']['input']>;
  valueGT?: InputMaybe<Scalars['u8']['input']>;
  valueGTE?: InputMaybe<Scalars['u8']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['u8']['input']>;
  valueLT?: InputMaybe<Scalars['u8']['input']>;
  valueLTE?: InputMaybe<Scalars['u8']['input']>;
  valueNEQ?: InputMaybe<Scalars['u8']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_BuildingWhereInput = {
  bonus_percent?: InputMaybe<Scalars['u32']['input']>;
  bonus_percentEQ?: InputMaybe<Scalars['u32']['input']>;
  bonus_percentGT?: InputMaybe<Scalars['u32']['input']>;
  bonus_percentGTE?: InputMaybe<Scalars['u32']['input']>;
  bonus_percentIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  bonus_percentLIKE?: InputMaybe<Scalars['u32']['input']>;
  bonus_percentLT?: InputMaybe<Scalars['u32']['input']>;
  bonus_percentLTE?: InputMaybe<Scalars['u32']['input']>;
  bonus_percentNEQ?: InputMaybe<Scalars['u32']['input']>;
  bonus_percentNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  bonus_percentNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  category?: InputMaybe<Scalars['Enum']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  inner_col?: InputMaybe<Scalars['u32']['input']>;
  inner_colEQ?: InputMaybe<Scalars['u32']['input']>;
  inner_colGT?: InputMaybe<Scalars['u32']['input']>;
  inner_colGTE?: InputMaybe<Scalars['u32']['input']>;
  inner_colIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  inner_colLIKE?: InputMaybe<Scalars['u32']['input']>;
  inner_colLT?: InputMaybe<Scalars['u32']['input']>;
  inner_colLTE?: InputMaybe<Scalars['u32']['input']>;
  inner_colNEQ?: InputMaybe<Scalars['u32']['input']>;
  inner_colNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  inner_colNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  inner_row?: InputMaybe<Scalars['u32']['input']>;
  inner_rowEQ?: InputMaybe<Scalars['u32']['input']>;
  inner_rowGT?: InputMaybe<Scalars['u32']['input']>;
  inner_rowGTE?: InputMaybe<Scalars['u32']['input']>;
  inner_rowIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  inner_rowLIKE?: InputMaybe<Scalars['u32']['input']>;
  inner_rowLT?: InputMaybe<Scalars['u32']['input']>;
  inner_rowLTE?: InputMaybe<Scalars['u32']['input']>;
  inner_rowNEQ?: InputMaybe<Scalars['u32']['input']>;
  inner_rowNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  inner_rowNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  outer_col?: InputMaybe<Scalars['u32']['input']>;
  outer_colEQ?: InputMaybe<Scalars['u32']['input']>;
  outer_colGT?: InputMaybe<Scalars['u32']['input']>;
  outer_colGTE?: InputMaybe<Scalars['u32']['input']>;
  outer_colIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  outer_colLIKE?: InputMaybe<Scalars['u32']['input']>;
  outer_colLT?: InputMaybe<Scalars['u32']['input']>;
  outer_colLTE?: InputMaybe<Scalars['u32']['input']>;
  outer_colNEQ?: InputMaybe<Scalars['u32']['input']>;
  outer_colNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  outer_colNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  outer_entity_id?: InputMaybe<Scalars['u32']['input']>;
  outer_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  outer_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  outer_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  outer_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  outer_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  outer_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  outer_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  outer_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  outer_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  outer_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  outer_row?: InputMaybe<Scalars['u32']['input']>;
  outer_rowEQ?: InputMaybe<Scalars['u32']['input']>;
  outer_rowGT?: InputMaybe<Scalars['u32']['input']>;
  outer_rowGTE?: InputMaybe<Scalars['u32']['input']>;
  outer_rowIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  outer_rowLIKE?: InputMaybe<Scalars['u32']['input']>;
  outer_rowLT?: InputMaybe<Scalars['u32']['input']>;
  outer_rowLTE?: InputMaybe<Scalars['u32']['input']>;
  outer_rowNEQ?: InputMaybe<Scalars['u32']['input']>;
  outer_rowNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  outer_rowNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  paused?: InputMaybe<Scalars['bool']['input']>;
  produced_resource_type?: InputMaybe<Scalars['u8']['input']>;
  produced_resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  produced_resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  produced_resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  produced_resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  produced_resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  produced_resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  produced_resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  produced_resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  produced_resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  produced_resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_BurnDonkey = {
  __typename?: 's0_eternum_BurnDonkey';
  amount?: Maybe<Scalars['u128']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  player_address?: Maybe<Scalars['ContractAddress']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_BurnDonkeyConnection = {
  __typename?: 's0_eternum_BurnDonkeyConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_BurnDonkeyEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_BurnDonkeyEdge = {
  __typename?: 's0_eternum_BurnDonkeyEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_BurnDonkey>;
};

export type S0_Eternum_BurnDonkeyOrder = {
  direction: OrderDirection;
  field: S0_Eternum_BurnDonkeyOrderField;
};

export enum S0_Eternum_BurnDonkeyOrderField {
  Amount = 'AMOUNT',
  EntityId = 'ENTITY_ID',
  PlayerAddress = 'PLAYER_ADDRESS',
  Timestamp = 'TIMESTAMP'
}

export type S0_Eternum_BurnDonkeyWhereInput = {
  amount?: InputMaybe<Scalars['u128']['input']>;
  amountEQ?: InputMaybe<Scalars['u128']['input']>;
  amountGT?: InputMaybe<Scalars['u128']['input']>;
  amountGTE?: InputMaybe<Scalars['u128']['input']>;
  amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  amountLT?: InputMaybe<Scalars['u128']['input']>;
  amountLTE?: InputMaybe<Scalars['u128']['input']>;
  amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  player_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  player_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  player_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_CancelOrder = {
  __typename?: 's0_eternum_CancelOrder';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  maker_id?: Maybe<Scalars['u32']['output']>;
  taker_id?: Maybe<Scalars['u32']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
  trade_id?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_CancelOrderConnection = {
  __typename?: 's0_eternum_CancelOrderConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_CancelOrderEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_CancelOrderEdge = {
  __typename?: 's0_eternum_CancelOrderEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_CancelOrder>;
};

export type S0_Eternum_CancelOrderOrder = {
  direction: OrderDirection;
  field: S0_Eternum_CancelOrderOrderField;
};

export enum S0_Eternum_CancelOrderOrderField {
  MakerId = 'MAKER_ID',
  TakerId = 'TAKER_ID',
  Timestamp = 'TIMESTAMP',
  TradeId = 'TRADE_ID'
}

export type S0_Eternum_CancelOrderWhereInput = {
  maker_id?: InputMaybe<Scalars['u32']['input']>;
  maker_idEQ?: InputMaybe<Scalars['u32']['input']>;
  maker_idGT?: InputMaybe<Scalars['u32']['input']>;
  maker_idGTE?: InputMaybe<Scalars['u32']['input']>;
  maker_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  maker_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  maker_idLT?: InputMaybe<Scalars['u32']['input']>;
  maker_idLTE?: InputMaybe<Scalars['u32']['input']>;
  maker_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  maker_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  maker_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  taker_id?: InputMaybe<Scalars['u32']['input']>;
  taker_idEQ?: InputMaybe<Scalars['u32']['input']>;
  taker_idGT?: InputMaybe<Scalars['u32']['input']>;
  taker_idGTE?: InputMaybe<Scalars['u32']['input']>;
  taker_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  taker_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  taker_idLT?: InputMaybe<Scalars['u32']['input']>;
  taker_idLTE?: InputMaybe<Scalars['u32']['input']>;
  taker_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  taker_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  taker_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  trade_id?: InputMaybe<Scalars['u32']['input']>;
  trade_idEQ?: InputMaybe<Scalars['u32']['input']>;
  trade_idGT?: InputMaybe<Scalars['u32']['input']>;
  trade_idGTE?: InputMaybe<Scalars['u32']['input']>;
  trade_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  trade_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  trade_idLT?: InputMaybe<Scalars['u32']['input']>;
  trade_idLTE?: InputMaybe<Scalars['u32']['input']>;
  trade_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  trade_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  trade_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_CapacityCategory = {
  __typename?: 's0_eternum_CapacityCategory';
  category?: Maybe<Scalars['Enum']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
};

export type S0_Eternum_CapacityCategoryConnection = {
  __typename?: 's0_eternum_CapacityCategoryConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_CapacityCategoryEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_CapacityCategoryEdge = {
  __typename?: 's0_eternum_CapacityCategoryEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_CapacityCategory>;
};

export type S0_Eternum_CapacityCategoryOrder = {
  direction: OrderDirection;
  field: S0_Eternum_CapacityCategoryOrderField;
};

export enum S0_Eternum_CapacityCategoryOrderField {
  Category = 'CATEGORY',
  EntityId = 'ENTITY_ID'
}

export type S0_Eternum_CapacityCategoryWhereInput = {
  category?: InputMaybe<Scalars['Enum']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_CapacityConfig = {
  __typename?: 's0_eternum_CapacityConfig';
  category?: Maybe<Scalars['Enum']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  weight_gram?: Maybe<Scalars['u128']['output']>;
};

export type S0_Eternum_CapacityConfigConnection = {
  __typename?: 's0_eternum_CapacityConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_CapacityConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_CapacityConfigEdge = {
  __typename?: 's0_eternum_CapacityConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_CapacityConfig>;
};

export type S0_Eternum_CapacityConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_CapacityConfigOrderField;
};

export enum S0_Eternum_CapacityConfigOrderField {
  Category = 'CATEGORY',
  WeightGram = 'WEIGHT_GRAM'
}

export type S0_Eternum_CapacityConfigWhereInput = {
  category?: InputMaybe<Scalars['Enum']['input']>;
  weight_gram?: InputMaybe<Scalars['u128']['input']>;
  weight_gramEQ?: InputMaybe<Scalars['u128']['input']>;
  weight_gramGT?: InputMaybe<Scalars['u128']['input']>;
  weight_gramGTE?: InputMaybe<Scalars['u128']['input']>;
  weight_gramIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  weight_gramLIKE?: InputMaybe<Scalars['u128']['input']>;
  weight_gramLT?: InputMaybe<Scalars['u128']['input']>;
  weight_gramLTE?: InputMaybe<Scalars['u128']['input']>;
  weight_gramNEQ?: InputMaybe<Scalars['u128']['input']>;
  weight_gramNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  weight_gramNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type S0_Eternum_ContractAddressu16 = {
  __typename?: 's0_eternum_ContractAddressu16';
  _0?: Maybe<Scalars['ContractAddress']['output']>;
  _1?: Maybe<Scalars['u16']['output']>;
};

export type S0_Eternum_Contribution = {
  __typename?: 's0_eternum_Contribution';
  amount?: Maybe<Scalars['u128']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  hyperstructure_entity_id?: Maybe<Scalars['u32']['output']>;
  player_address?: Maybe<Scalars['ContractAddress']['output']>;
  resource_type?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_ContributionConnection = {
  __typename?: 's0_eternum_ContributionConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ContributionEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ContributionEdge = {
  __typename?: 's0_eternum_ContributionEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Contribution>;
};

export type S0_Eternum_ContributionOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ContributionOrderField;
};

export enum S0_Eternum_ContributionOrderField {
  Amount = 'AMOUNT',
  HyperstructureEntityId = 'HYPERSTRUCTURE_ENTITY_ID',
  PlayerAddress = 'PLAYER_ADDRESS',
  ResourceType = 'RESOURCE_TYPE'
}

export type S0_Eternum_ContributionWhereInput = {
  amount?: InputMaybe<Scalars['u128']['input']>;
  amountEQ?: InputMaybe<Scalars['u128']['input']>;
  amountGT?: InputMaybe<Scalars['u128']['input']>;
  amountGTE?: InputMaybe<Scalars['u128']['input']>;
  amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  amountLT?: InputMaybe<Scalars['u128']['input']>;
  amountLTE?: InputMaybe<Scalars['u128']['input']>;
  amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  hyperstructure_entity_id?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  player_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  player_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  player_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  player_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  resource_type?: InputMaybe<Scalars['u8']['input']>;
  resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_Coord = {
  __typename?: 's0_eternum_Coord';
  x?: Maybe<Scalars['u32']['output']>;
  y?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_CreateGuild = {
  __typename?: 's0_eternum_CreateGuild';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  guild_entity_id?: Maybe<Scalars['u32']['output']>;
  guild_name?: Maybe<Scalars['felt252']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_CreateGuildConnection = {
  __typename?: 's0_eternum_CreateGuildConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_CreateGuildEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_CreateGuildEdge = {
  __typename?: 's0_eternum_CreateGuildEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_CreateGuild>;
};

export type S0_Eternum_CreateGuildOrder = {
  direction: OrderDirection;
  field: S0_Eternum_CreateGuildOrderField;
};

export enum S0_Eternum_CreateGuildOrderField {
  GuildEntityId = 'GUILD_ENTITY_ID',
  GuildName = 'GUILD_NAME',
  Timestamp = 'TIMESTAMP'
}

export type S0_Eternum_CreateGuildWhereInput = {
  guild_entity_id?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  guild_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  guild_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  guild_name?: InputMaybe<Scalars['felt252']['input']>;
  guild_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  guild_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  guild_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  guild_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  guild_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  guild_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  guild_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  guild_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  guild_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  guild_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_CreateOrder = {
  __typename?: 's0_eternum_CreateOrder';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  maker_id?: Maybe<Scalars['u32']['output']>;
  taker_id?: Maybe<Scalars['u32']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
  trade_id?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_CreateOrderConnection = {
  __typename?: 's0_eternum_CreateOrderConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_CreateOrderEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_CreateOrderEdge = {
  __typename?: 's0_eternum_CreateOrderEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_CreateOrder>;
};

export type S0_Eternum_CreateOrderOrder = {
  direction: OrderDirection;
  field: S0_Eternum_CreateOrderOrderField;
};

export enum S0_Eternum_CreateOrderOrderField {
  MakerId = 'MAKER_ID',
  TakerId = 'TAKER_ID',
  Timestamp = 'TIMESTAMP',
  TradeId = 'TRADE_ID'
}

export type S0_Eternum_CreateOrderWhereInput = {
  maker_id?: InputMaybe<Scalars['u32']['input']>;
  maker_idEQ?: InputMaybe<Scalars['u32']['input']>;
  maker_idGT?: InputMaybe<Scalars['u32']['input']>;
  maker_idGTE?: InputMaybe<Scalars['u32']['input']>;
  maker_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  maker_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  maker_idLT?: InputMaybe<Scalars['u32']['input']>;
  maker_idLTE?: InputMaybe<Scalars['u32']['input']>;
  maker_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  maker_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  maker_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  taker_id?: InputMaybe<Scalars['u32']['input']>;
  taker_idEQ?: InputMaybe<Scalars['u32']['input']>;
  taker_idGT?: InputMaybe<Scalars['u32']['input']>;
  taker_idGTE?: InputMaybe<Scalars['u32']['input']>;
  taker_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  taker_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  taker_idLT?: InputMaybe<Scalars['u32']['input']>;
  taker_idLTE?: InputMaybe<Scalars['u32']['input']>;
  taker_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  taker_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  taker_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  trade_id?: InputMaybe<Scalars['u32']['input']>;
  trade_idEQ?: InputMaybe<Scalars['u32']['input']>;
  trade_idGT?: InputMaybe<Scalars['u32']['input']>;
  trade_idGTE?: InputMaybe<Scalars['u32']['input']>;
  trade_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  trade_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  trade_idLT?: InputMaybe<Scalars['u32']['input']>;
  trade_idLTE?: InputMaybe<Scalars['u32']['input']>;
  trade_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  trade_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  trade_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_DetachedResource = {
  __typename?: 's0_eternum_DetachedResource';
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  index?: Maybe<Scalars['u32']['output']>;
  resource_amount?: Maybe<Scalars['u128']['output']>;
  resource_type?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_DetachedResourceConnection = {
  __typename?: 's0_eternum_DetachedResourceConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_DetachedResourceEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_DetachedResourceEdge = {
  __typename?: 's0_eternum_DetachedResourceEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_DetachedResource>;
};

export type S0_Eternum_DetachedResourceOrder = {
  direction: OrderDirection;
  field: S0_Eternum_DetachedResourceOrderField;
};

export enum S0_Eternum_DetachedResourceOrderField {
  EntityId = 'ENTITY_ID',
  Index = 'INDEX',
  ResourceAmount = 'RESOURCE_AMOUNT',
  ResourceType = 'RESOURCE_TYPE'
}

export type S0_Eternum_DetachedResourceWhereInput = {
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  index?: InputMaybe<Scalars['u32']['input']>;
  indexEQ?: InputMaybe<Scalars['u32']['input']>;
  indexGT?: InputMaybe<Scalars['u32']['input']>;
  indexGTE?: InputMaybe<Scalars['u32']['input']>;
  indexIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  indexLIKE?: InputMaybe<Scalars['u32']['input']>;
  indexLT?: InputMaybe<Scalars['u32']['input']>;
  indexLTE?: InputMaybe<Scalars['u32']['input']>;
  indexNEQ?: InputMaybe<Scalars['u32']['input']>;
  indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  indexNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_amount?: InputMaybe<Scalars['u128']['input']>;
  resource_amountEQ?: InputMaybe<Scalars['u128']['input']>;
  resource_amountGT?: InputMaybe<Scalars['u128']['input']>;
  resource_amountGTE?: InputMaybe<Scalars['u128']['input']>;
  resource_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  resource_amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_amountLT?: InputMaybe<Scalars['u128']['input']>;
  resource_amountLTE?: InputMaybe<Scalars['u128']['input']>;
  resource_amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  resource_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  resource_amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_type?: InputMaybe<Scalars['u8']['input']>;
  resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_EntityName = {
  __typename?: 's0_eternum_EntityName';
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  name?: Maybe<Scalars['felt252']['output']>;
};

export type S0_Eternum_EntityNameConnection = {
  __typename?: 's0_eternum_EntityNameConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_EntityNameEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_EntityNameEdge = {
  __typename?: 's0_eternum_EntityNameEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_EntityName>;
};

export type S0_Eternum_EntityNameOrder = {
  direction: OrderDirection;
  field: S0_Eternum_EntityNameOrderField;
};

export enum S0_Eternum_EntityNameOrderField {
  EntityId = 'ENTITY_ID',
  Name = 'NAME'
}

export type S0_Eternum_EntityNameWhereInput = {
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  name?: InputMaybe<Scalars['felt252']['input']>;
  nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameGT?: InputMaybe<Scalars['felt252']['input']>;
  nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  nameLT?: InputMaybe<Scalars['felt252']['input']>;
  nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type S0_Eternum_EntityOwner = {
  __typename?: 's0_eternum_EntityOwner';
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  entity_owner_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
};

export type S0_Eternum_EntityOwnerConnection = {
  __typename?: 's0_eternum_EntityOwnerConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_EntityOwnerEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_EntityOwnerEdge = {
  __typename?: 's0_eternum_EntityOwnerEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_EntityOwner>;
};

export type S0_Eternum_EntityOwnerOrder = {
  direction: OrderDirection;
  field: S0_Eternum_EntityOwnerOrderField;
};

export enum S0_Eternum_EntityOwnerOrderField {
  EntityId = 'ENTITY_ID',
  EntityOwnerId = 'ENTITY_OWNER_ID'
}

export type S0_Eternum_EntityOwnerWhereInput = {
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_id?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_owner_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_owner_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_Epoch = {
  __typename?: 's0_eternum_Epoch';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  hyperstructure_entity_id?: Maybe<Scalars['u32']['output']>;
  index?: Maybe<Scalars['u16']['output']>;
  owners?: Maybe<Array<Maybe<S0_Eternum_ContractAddressu16>>>;
  start_timestamp?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_EpochConnection = {
  __typename?: 's0_eternum_EpochConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_EpochEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_EpochEdge = {
  __typename?: 's0_eternum_EpochEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Epoch>;
};

export type S0_Eternum_EpochOrder = {
  direction: OrderDirection;
  field: S0_Eternum_EpochOrderField;
};

export enum S0_Eternum_EpochOrderField {
  HyperstructureEntityId = 'HYPERSTRUCTURE_ENTITY_ID',
  Index = 'INDEX',
  Owners = 'OWNERS',
  StartTimestamp = 'START_TIMESTAMP'
}

export type S0_Eternum_EpochWhereInput = {
  hyperstructure_entity_id?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  index?: InputMaybe<Scalars['u16']['input']>;
  indexEQ?: InputMaybe<Scalars['u16']['input']>;
  indexGT?: InputMaybe<Scalars['u16']['input']>;
  indexGTE?: InputMaybe<Scalars['u16']['input']>;
  indexIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  indexLIKE?: InputMaybe<Scalars['u16']['input']>;
  indexLT?: InputMaybe<Scalars['u16']['input']>;
  indexLTE?: InputMaybe<Scalars['u16']['input']>;
  indexNEQ?: InputMaybe<Scalars['u16']['input']>;
  indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  indexNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  start_timestamp?: InputMaybe<Scalars['u64']['input']>;
  start_timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  start_timestampGT?: InputMaybe<Scalars['u64']['input']>;
  start_timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  start_timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  start_timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  start_timestampLT?: InputMaybe<Scalars['u64']['input']>;
  start_timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  start_timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  start_timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  start_timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_Fixed = {
  __typename?: 's0_eternum_Fixed';
  mag?: Maybe<Scalars['u128']['output']>;
  sign?: Maybe<Scalars['bool']['output']>;
};

export type S0_Eternum_FragmentMineDiscovered = {
  __typename?: 's0_eternum_FragmentMineDiscovered';
  discovered_at?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entity_owner_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  mine_entity_id?: Maybe<Scalars['u32']['output']>;
  production_deadline_tick?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_FragmentMineDiscoveredConnection = {
  __typename?: 's0_eternum_FragmentMineDiscoveredConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_FragmentMineDiscoveredEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_FragmentMineDiscoveredEdge = {
  __typename?: 's0_eternum_FragmentMineDiscoveredEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_FragmentMineDiscovered>;
};

export type S0_Eternum_FragmentMineDiscoveredOrder = {
  direction: OrderDirection;
  field: S0_Eternum_FragmentMineDiscoveredOrderField;
};

export enum S0_Eternum_FragmentMineDiscoveredOrderField {
  DiscoveredAt = 'DISCOVERED_AT',
  EntityOwnerId = 'ENTITY_OWNER_ID',
  MineEntityId = 'MINE_ENTITY_ID',
  ProductionDeadlineTick = 'PRODUCTION_DEADLINE_TICK'
}

export type S0_Eternum_FragmentMineDiscoveredWhereInput = {
  discovered_at?: InputMaybe<Scalars['u64']['input']>;
  discovered_atEQ?: InputMaybe<Scalars['u64']['input']>;
  discovered_atGT?: InputMaybe<Scalars['u64']['input']>;
  discovered_atGTE?: InputMaybe<Scalars['u64']['input']>;
  discovered_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  discovered_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  discovered_atLT?: InputMaybe<Scalars['u64']['input']>;
  discovered_atLTE?: InputMaybe<Scalars['u64']['input']>;
  discovered_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  discovered_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  discovered_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  entity_owner_id?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_owner_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_owner_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  mine_entity_id?: InputMaybe<Scalars['u32']['input']>;
  mine_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  mine_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  mine_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  mine_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  mine_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  mine_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  mine_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  mine_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  mine_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  mine_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  production_deadline_tick?: InputMaybe<Scalars['u64']['input']>;
  production_deadline_tickEQ?: InputMaybe<Scalars['u64']['input']>;
  production_deadline_tickGT?: InputMaybe<Scalars['u64']['input']>;
  production_deadline_tickGTE?: InputMaybe<Scalars['u64']['input']>;
  production_deadline_tickIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  production_deadline_tickLIKE?: InputMaybe<Scalars['u64']['input']>;
  production_deadline_tickLT?: InputMaybe<Scalars['u64']['input']>;
  production_deadline_tickLTE?: InputMaybe<Scalars['u64']['input']>;
  production_deadline_tickNEQ?: InputMaybe<Scalars['u64']['input']>;
  production_deadline_tickNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  production_deadline_tickNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_GameEnded = {
  __typename?: 's0_eternum_GameEnded';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  timestamp?: Maybe<Scalars['u64']['output']>;
  winner_address?: Maybe<Scalars['ContractAddress']['output']>;
};

export type S0_Eternum_GameEndedConnection = {
  __typename?: 's0_eternum_GameEndedConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_GameEndedEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_GameEndedEdge = {
  __typename?: 's0_eternum_GameEndedEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_GameEnded>;
};

export type S0_Eternum_GameEndedOrder = {
  direction: OrderDirection;
  field: S0_Eternum_GameEndedOrderField;
};

export enum S0_Eternum_GameEndedOrderField {
  Timestamp = 'TIMESTAMP',
  WinnerAddress = 'WINNER_ADDRESS'
}

export type S0_Eternum_GameEndedWhereInput = {
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  winner_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  winner_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  winner_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  winner_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  winner_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  winner_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  winner_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  winner_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  winner_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  winner_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  winner_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
};

export type S0_Eternum_Guild = {
  __typename?: 's0_eternum_Guild';
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  is_public?: Maybe<Scalars['bool']['output']>;
  member_count?: Maybe<Scalars['u16']['output']>;
};

export type S0_Eternum_GuildConnection = {
  __typename?: 's0_eternum_GuildConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_GuildEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_GuildEdge = {
  __typename?: 's0_eternum_GuildEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Guild>;
};

export type S0_Eternum_GuildMember = {
  __typename?: 's0_eternum_GuildMember';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  guild_entity_id?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_GuildMemberConnection = {
  __typename?: 's0_eternum_GuildMemberConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_GuildMemberEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_GuildMemberEdge = {
  __typename?: 's0_eternum_GuildMemberEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_GuildMember>;
};

export type S0_Eternum_GuildMemberOrder = {
  direction: OrderDirection;
  field: S0_Eternum_GuildMemberOrderField;
};

export enum S0_Eternum_GuildMemberOrderField {
  Address = 'ADDRESS',
  GuildEntityId = 'GUILD_ENTITY_ID'
}

export type S0_Eternum_GuildMemberWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  guild_entity_id?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  guild_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  guild_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_GuildOrder = {
  direction: OrderDirection;
  field: S0_Eternum_GuildOrderField;
};

export enum S0_Eternum_GuildOrderField {
  EntityId = 'ENTITY_ID',
  IsPublic = 'IS_PUBLIC',
  MemberCount = 'MEMBER_COUNT'
}

export type S0_Eternum_GuildWhereInput = {
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  is_public?: InputMaybe<Scalars['bool']['input']>;
  member_count?: InputMaybe<Scalars['u16']['input']>;
  member_countEQ?: InputMaybe<Scalars['u16']['input']>;
  member_countGT?: InputMaybe<Scalars['u16']['input']>;
  member_countGTE?: InputMaybe<Scalars['u16']['input']>;
  member_countIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  member_countLIKE?: InputMaybe<Scalars['u16']['input']>;
  member_countLT?: InputMaybe<Scalars['u16']['input']>;
  member_countLTE?: InputMaybe<Scalars['u16']['input']>;
  member_countNEQ?: InputMaybe<Scalars['u16']['input']>;
  member_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  member_countNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
};

export type S0_Eternum_GuildWhitelist = {
  __typename?: 's0_eternum_GuildWhitelist';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  guild_entity_id?: Maybe<Scalars['u32']['output']>;
  is_whitelisted?: Maybe<Scalars['bool']['output']>;
};

export type S0_Eternum_GuildWhitelistConnection = {
  __typename?: 's0_eternum_GuildWhitelistConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_GuildWhitelistEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_GuildWhitelistEdge = {
  __typename?: 's0_eternum_GuildWhitelistEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_GuildWhitelist>;
};

export type S0_Eternum_GuildWhitelistOrder = {
  direction: OrderDirection;
  field: S0_Eternum_GuildWhitelistOrderField;
};

export enum S0_Eternum_GuildWhitelistOrderField {
  Address = 'ADDRESS',
  GuildEntityId = 'GUILD_ENTITY_ID',
  IsWhitelisted = 'IS_WHITELISTED'
}

export type S0_Eternum_GuildWhitelistWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  guild_entity_id?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  guild_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  guild_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  is_whitelisted?: InputMaybe<Scalars['bool']['input']>;
};

export type S0_Eternum_Health = {
  __typename?: 's0_eternum_Health';
  current?: Maybe<Scalars['u128']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  lifetime?: Maybe<Scalars['u128']['output']>;
};

export type S0_Eternum_HealthConnection = {
  __typename?: 's0_eternum_HealthConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_HealthEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_HealthEdge = {
  __typename?: 's0_eternum_HealthEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Health>;
};

export type S0_Eternum_HealthOrder = {
  direction: OrderDirection;
  field: S0_Eternum_HealthOrderField;
};

export enum S0_Eternum_HealthOrderField {
  Current = 'CURRENT',
  EntityId = 'ENTITY_ID',
  Lifetime = 'LIFETIME'
}

export type S0_Eternum_HealthWhereInput = {
  current?: InputMaybe<Scalars['u128']['input']>;
  currentEQ?: InputMaybe<Scalars['u128']['input']>;
  currentGT?: InputMaybe<Scalars['u128']['input']>;
  currentGTE?: InputMaybe<Scalars['u128']['input']>;
  currentIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  currentLIKE?: InputMaybe<Scalars['u128']['input']>;
  currentLT?: InputMaybe<Scalars['u128']['input']>;
  currentLTE?: InputMaybe<Scalars['u128']['input']>;
  currentNEQ?: InputMaybe<Scalars['u128']['input']>;
  currentNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  currentNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  lifetime?: InputMaybe<Scalars['u128']['input']>;
  lifetimeEQ?: InputMaybe<Scalars['u128']['input']>;
  lifetimeGT?: InputMaybe<Scalars['u128']['input']>;
  lifetimeGTE?: InputMaybe<Scalars['u128']['input']>;
  lifetimeIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  lifetimeLIKE?: InputMaybe<Scalars['u128']['input']>;
  lifetimeLT?: InputMaybe<Scalars['u128']['input']>;
  lifetimeLTE?: InputMaybe<Scalars['u128']['input']>;
  lifetimeNEQ?: InputMaybe<Scalars['u128']['input']>;
  lifetimeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  lifetimeNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type S0_Eternum_Hyperstructure = {
  __typename?: 's0_eternum_Hyperstructure';
  access?: Maybe<Scalars['Enum']['output']>;
  completed?: Maybe<Scalars['bool']['output']>;
  current_epoch?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  last_updated_by?: Maybe<Scalars['ContractAddress']['output']>;
  last_updated_timestamp?: Maybe<Scalars['u64']['output']>;
  randomness?: Maybe<Scalars['felt252']['output']>;
};

export type S0_Eternum_HyperstructureCoOwnersChange = {
  __typename?: 's0_eternum_HyperstructureCoOwnersChange';
  co_owners?: Maybe<Array<Maybe<S0_Eternum_ContractAddressu16>>>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  hyperstructure_entity_id?: Maybe<Scalars['u32']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_HyperstructureCoOwnersChangeConnection = {
  __typename?: 's0_eternum_HyperstructureCoOwnersChangeConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_HyperstructureCoOwnersChangeEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_HyperstructureCoOwnersChangeEdge = {
  __typename?: 's0_eternum_HyperstructureCoOwnersChangeEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_HyperstructureCoOwnersChange>;
};

export type S0_Eternum_HyperstructureCoOwnersChangeOrder = {
  direction: OrderDirection;
  field: S0_Eternum_HyperstructureCoOwnersChangeOrderField;
};

export enum S0_Eternum_HyperstructureCoOwnersChangeOrderField {
  CoOwners = 'CO_OWNERS',
  HyperstructureEntityId = 'HYPERSTRUCTURE_ENTITY_ID',
  Id = 'ID',
  Timestamp = 'TIMESTAMP'
}

export type S0_Eternum_HyperstructureCoOwnersChangeWhereInput = {
  hyperstructure_entity_id?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_HyperstructureConfig = {
  __typename?: 's0_eternum_HyperstructureConfig';
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  points_for_win?: Maybe<Scalars['u128']['output']>;
  points_on_completion?: Maybe<Scalars['u128']['output']>;
  points_per_cycle?: Maybe<Scalars['u128']['output']>;
  time_between_shares_change?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_HyperstructureConfigConnection = {
  __typename?: 's0_eternum_HyperstructureConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_HyperstructureConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_HyperstructureConfigEdge = {
  __typename?: 's0_eternum_HyperstructureConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_HyperstructureConfig>;
};

export type S0_Eternum_HyperstructureConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_HyperstructureConfigOrderField;
};

export enum S0_Eternum_HyperstructureConfigOrderField {
  ConfigId = 'CONFIG_ID',
  PointsForWin = 'POINTS_FOR_WIN',
  PointsOnCompletion = 'POINTS_ON_COMPLETION',
  PointsPerCycle = 'POINTS_PER_CYCLE',
  TimeBetweenSharesChange = 'TIME_BETWEEN_SHARES_CHANGE'
}

export type S0_Eternum_HyperstructureConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  points_for_win?: InputMaybe<Scalars['u128']['input']>;
  points_for_winEQ?: InputMaybe<Scalars['u128']['input']>;
  points_for_winGT?: InputMaybe<Scalars['u128']['input']>;
  points_for_winGTE?: InputMaybe<Scalars['u128']['input']>;
  points_for_winIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  points_for_winLIKE?: InputMaybe<Scalars['u128']['input']>;
  points_for_winLT?: InputMaybe<Scalars['u128']['input']>;
  points_for_winLTE?: InputMaybe<Scalars['u128']['input']>;
  points_for_winNEQ?: InputMaybe<Scalars['u128']['input']>;
  points_for_winNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  points_for_winNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  points_on_completion?: InputMaybe<Scalars['u128']['input']>;
  points_on_completionEQ?: InputMaybe<Scalars['u128']['input']>;
  points_on_completionGT?: InputMaybe<Scalars['u128']['input']>;
  points_on_completionGTE?: InputMaybe<Scalars['u128']['input']>;
  points_on_completionIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  points_on_completionLIKE?: InputMaybe<Scalars['u128']['input']>;
  points_on_completionLT?: InputMaybe<Scalars['u128']['input']>;
  points_on_completionLTE?: InputMaybe<Scalars['u128']['input']>;
  points_on_completionNEQ?: InputMaybe<Scalars['u128']['input']>;
  points_on_completionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  points_on_completionNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  points_per_cycle?: InputMaybe<Scalars['u128']['input']>;
  points_per_cycleEQ?: InputMaybe<Scalars['u128']['input']>;
  points_per_cycleGT?: InputMaybe<Scalars['u128']['input']>;
  points_per_cycleGTE?: InputMaybe<Scalars['u128']['input']>;
  points_per_cycleIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  points_per_cycleLIKE?: InputMaybe<Scalars['u128']['input']>;
  points_per_cycleLT?: InputMaybe<Scalars['u128']['input']>;
  points_per_cycleLTE?: InputMaybe<Scalars['u128']['input']>;
  points_per_cycleNEQ?: InputMaybe<Scalars['u128']['input']>;
  points_per_cycleNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  points_per_cycleNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  time_between_shares_change?: InputMaybe<Scalars['u64']['input']>;
  time_between_shares_changeEQ?: InputMaybe<Scalars['u64']['input']>;
  time_between_shares_changeGT?: InputMaybe<Scalars['u64']['input']>;
  time_between_shares_changeGTE?: InputMaybe<Scalars['u64']['input']>;
  time_between_shares_changeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  time_between_shares_changeLIKE?: InputMaybe<Scalars['u64']['input']>;
  time_between_shares_changeLT?: InputMaybe<Scalars['u64']['input']>;
  time_between_shares_changeLTE?: InputMaybe<Scalars['u64']['input']>;
  time_between_shares_changeNEQ?: InputMaybe<Scalars['u64']['input']>;
  time_between_shares_changeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  time_between_shares_changeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_HyperstructureConnection = {
  __typename?: 's0_eternum_HyperstructureConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_HyperstructureEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_HyperstructureContribution = {
  __typename?: 's0_eternum_HyperstructureContribution';
  contributions?: Maybe<Array<Maybe<S0_Eternum_U8u128>>>;
  contributor_entity_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  hyperstructure_entity_id?: Maybe<Scalars['u32']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_HyperstructureContributionConnection = {
  __typename?: 's0_eternum_HyperstructureContributionConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_HyperstructureContributionEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_HyperstructureContributionEdge = {
  __typename?: 's0_eternum_HyperstructureContributionEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_HyperstructureContribution>;
};

export type S0_Eternum_HyperstructureContributionOrder = {
  direction: OrderDirection;
  field: S0_Eternum_HyperstructureContributionOrderField;
};

export enum S0_Eternum_HyperstructureContributionOrderField {
  Contributions = 'CONTRIBUTIONS',
  ContributorEntityId = 'CONTRIBUTOR_ENTITY_ID',
  HyperstructureEntityId = 'HYPERSTRUCTURE_ENTITY_ID',
  Id = 'ID',
  Timestamp = 'TIMESTAMP'
}

export type S0_Eternum_HyperstructureContributionWhereInput = {
  contributor_entity_id?: InputMaybe<Scalars['u32']['input']>;
  contributor_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  contributor_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  contributor_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  contributor_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  contributor_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  contributor_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  contributor_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  contributor_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  contributor_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  contributor_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_id?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_HyperstructureEdge = {
  __typename?: 's0_eternum_HyperstructureEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Hyperstructure>;
};

export type S0_Eternum_HyperstructureFinished = {
  __typename?: 's0_eternum_HyperstructureFinished';
  contributor_entity_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  hyperstructure_entity_id?: Maybe<Scalars['u32']['output']>;
  hyperstructure_owner_name?: Maybe<Scalars['felt252']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_HyperstructureFinishedConnection = {
  __typename?: 's0_eternum_HyperstructureFinishedConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_HyperstructureFinishedEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_HyperstructureFinishedEdge = {
  __typename?: 's0_eternum_HyperstructureFinishedEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_HyperstructureFinished>;
};

export type S0_Eternum_HyperstructureFinishedOrder = {
  direction: OrderDirection;
  field: S0_Eternum_HyperstructureFinishedOrderField;
};

export enum S0_Eternum_HyperstructureFinishedOrderField {
  ContributorEntityId = 'CONTRIBUTOR_ENTITY_ID',
  HyperstructureEntityId = 'HYPERSTRUCTURE_ENTITY_ID',
  HyperstructureOwnerName = 'HYPERSTRUCTURE_OWNER_NAME',
  Id = 'ID',
  Timestamp = 'TIMESTAMP'
}

export type S0_Eternum_HyperstructureFinishedWhereInput = {
  contributor_entity_id?: InputMaybe<Scalars['u32']['input']>;
  contributor_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  contributor_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  contributor_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  contributor_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  contributor_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  contributor_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  contributor_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  contributor_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  contributor_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  contributor_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_id?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_owner_name?: InputMaybe<Scalars['felt252']['input']>;
  hyperstructure_owner_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  hyperstructure_owner_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  hyperstructure_owner_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  hyperstructure_owner_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  hyperstructure_owner_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  hyperstructure_owner_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  hyperstructure_owner_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  hyperstructure_owner_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  hyperstructure_owner_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  hyperstructure_owner_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_HyperstructureOrder = {
  direction: OrderDirection;
  field: S0_Eternum_HyperstructureOrderField;
};

export enum S0_Eternum_HyperstructureOrderField {
  Access = 'ACCESS',
  Completed = 'COMPLETED',
  CurrentEpoch = 'CURRENT_EPOCH',
  EntityId = 'ENTITY_ID',
  LastUpdatedBy = 'LAST_UPDATED_BY',
  LastUpdatedTimestamp = 'LAST_UPDATED_TIMESTAMP',
  Randomness = 'RANDOMNESS'
}

export type S0_Eternum_HyperstructureResourceConfig = {
  __typename?: 's0_eternum_HyperstructureResourceConfig';
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  max_amount?: Maybe<Scalars['u128']['output']>;
  min_amount?: Maybe<Scalars['u128']['output']>;
  resource_tier?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_HyperstructureResourceConfigConnection = {
  __typename?: 's0_eternum_HyperstructureResourceConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_HyperstructureResourceConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_HyperstructureResourceConfigEdge = {
  __typename?: 's0_eternum_HyperstructureResourceConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_HyperstructureResourceConfig>;
};

export type S0_Eternum_HyperstructureResourceConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_HyperstructureResourceConfigOrderField;
};

export enum S0_Eternum_HyperstructureResourceConfigOrderField {
  ConfigId = 'CONFIG_ID',
  MaxAmount = 'MAX_AMOUNT',
  MinAmount = 'MIN_AMOUNT',
  ResourceTier = 'RESOURCE_TIER'
}

export type S0_Eternum_HyperstructureResourceConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  max_amount?: InputMaybe<Scalars['u128']['input']>;
  max_amountEQ?: InputMaybe<Scalars['u128']['input']>;
  max_amountGT?: InputMaybe<Scalars['u128']['input']>;
  max_amountGTE?: InputMaybe<Scalars['u128']['input']>;
  max_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  max_amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  max_amountLT?: InputMaybe<Scalars['u128']['input']>;
  max_amountLTE?: InputMaybe<Scalars['u128']['input']>;
  max_amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  max_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  max_amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  min_amount?: InputMaybe<Scalars['u128']['input']>;
  min_amountEQ?: InputMaybe<Scalars['u128']['input']>;
  min_amountGT?: InputMaybe<Scalars['u128']['input']>;
  min_amountGTE?: InputMaybe<Scalars['u128']['input']>;
  min_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  min_amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  min_amountLT?: InputMaybe<Scalars['u128']['input']>;
  min_amountLTE?: InputMaybe<Scalars['u128']['input']>;
  min_amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  min_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  min_amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_tier?: InputMaybe<Scalars['u8']['input']>;
  resource_tierEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_tierGT?: InputMaybe<Scalars['u8']['input']>;
  resource_tierGTE?: InputMaybe<Scalars['u8']['input']>;
  resource_tierIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_tierLIKE?: InputMaybe<Scalars['u8']['input']>;
  resource_tierLT?: InputMaybe<Scalars['u8']['input']>;
  resource_tierLTE?: InputMaybe<Scalars['u8']['input']>;
  resource_tierNEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_tierNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_tierNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_HyperstructureStarted = {
  __typename?: 's0_eternum_HyperstructureStarted';
  creator_address_name?: Maybe<Scalars['felt252']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  hyperstructure_entity_id?: Maybe<Scalars['u32']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_HyperstructureStartedConnection = {
  __typename?: 's0_eternum_HyperstructureStartedConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_HyperstructureStartedEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_HyperstructureStartedEdge = {
  __typename?: 's0_eternum_HyperstructureStartedEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_HyperstructureStarted>;
};

export type S0_Eternum_HyperstructureStartedOrder = {
  direction: OrderDirection;
  field: S0_Eternum_HyperstructureStartedOrderField;
};

export enum S0_Eternum_HyperstructureStartedOrderField {
  CreatorAddressName = 'CREATOR_ADDRESS_NAME',
  HyperstructureEntityId = 'HYPERSTRUCTURE_ENTITY_ID',
  Id = 'ID',
  Timestamp = 'TIMESTAMP'
}

export type S0_Eternum_HyperstructureStartedWhereInput = {
  creator_address_name?: InputMaybe<Scalars['felt252']['input']>;
  creator_address_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  creator_address_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  creator_address_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  creator_address_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  creator_address_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  creator_address_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  creator_address_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  creator_address_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  creator_address_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  creator_address_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  hyperstructure_entity_id?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_HyperstructureWhereInput = {
  access?: InputMaybe<Scalars['Enum']['input']>;
  completed?: InputMaybe<Scalars['bool']['input']>;
  current_epoch?: InputMaybe<Scalars['u16']['input']>;
  current_epochEQ?: InputMaybe<Scalars['u16']['input']>;
  current_epochGT?: InputMaybe<Scalars['u16']['input']>;
  current_epochGTE?: InputMaybe<Scalars['u16']['input']>;
  current_epochIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  current_epochLIKE?: InputMaybe<Scalars['u16']['input']>;
  current_epochLT?: InputMaybe<Scalars['u16']['input']>;
  current_epochLTE?: InputMaybe<Scalars['u16']['input']>;
  current_epochNEQ?: InputMaybe<Scalars['u16']['input']>;
  current_epochNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  current_epochNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  last_updated_by?: InputMaybe<Scalars['ContractAddress']['input']>;
  last_updated_byEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  last_updated_byGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  last_updated_byGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  last_updated_byIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  last_updated_byLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  last_updated_byLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  last_updated_byLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  last_updated_byNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  last_updated_byNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  last_updated_byNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  last_updated_timestamp?: InputMaybe<Scalars['u64']['input']>;
  last_updated_timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  last_updated_timestampGT?: InputMaybe<Scalars['u64']['input']>;
  last_updated_timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  last_updated_timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  last_updated_timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  last_updated_timestampLT?: InputMaybe<Scalars['u64']['input']>;
  last_updated_timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  last_updated_timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  last_updated_timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  last_updated_timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  randomness?: InputMaybe<Scalars['felt252']['input']>;
  randomnessEQ?: InputMaybe<Scalars['felt252']['input']>;
  randomnessGT?: InputMaybe<Scalars['felt252']['input']>;
  randomnessGTE?: InputMaybe<Scalars['felt252']['input']>;
  randomnessIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  randomnessLIKE?: InputMaybe<Scalars['felt252']['input']>;
  randomnessLT?: InputMaybe<Scalars['felt252']['input']>;
  randomnessLTE?: InputMaybe<Scalars['felt252']['input']>;
  randomnessNEQ?: InputMaybe<Scalars['felt252']['input']>;
  randomnessNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  randomnessNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type S0_Eternum_JoinGuild = {
  __typename?: 's0_eternum_JoinGuild';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  guild_entity_id?: Maybe<Scalars['u32']['output']>;
  guild_name?: Maybe<Scalars['felt252']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_JoinGuildConnection = {
  __typename?: 's0_eternum_JoinGuildConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_JoinGuildEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_JoinGuildEdge = {
  __typename?: 's0_eternum_JoinGuildEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_JoinGuild>;
};

export type S0_Eternum_JoinGuildOrder = {
  direction: OrderDirection;
  field: S0_Eternum_JoinGuildOrderField;
};

export enum S0_Eternum_JoinGuildOrderField {
  Address = 'ADDRESS',
  GuildEntityId = 'GUILD_ENTITY_ID',
  GuildName = 'GUILD_NAME',
  Timestamp = 'TIMESTAMP'
}

export type S0_Eternum_JoinGuildWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  guild_entity_id?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  guild_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  guild_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  guild_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  guild_name?: InputMaybe<Scalars['felt252']['input']>;
  guild_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  guild_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  guild_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  guild_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  guild_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  guild_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  guild_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  guild_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  guild_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  guild_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_Leaderboard = {
  __typename?: 's0_eternum_Leaderboard';
  config_id?: Maybe<Scalars['u32']['output']>;
  distribution_started?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  registration_end_timestamp?: Maybe<Scalars['u64']['output']>;
  total_points?: Maybe<Scalars['u128']['output']>;
  total_price_pool?: Maybe<S0_Eternum_Optionu256>;
};

export type S0_Eternum_LeaderboardConnection = {
  __typename?: 's0_eternum_LeaderboardConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_LeaderboardEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_LeaderboardEdge = {
  __typename?: 's0_eternum_LeaderboardEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Leaderboard>;
};

export type S0_Eternum_LeaderboardEntry = {
  __typename?: 's0_eternum_LeaderboardEntry';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  points?: Maybe<Scalars['u128']['output']>;
};

export type S0_Eternum_LeaderboardEntryConnection = {
  __typename?: 's0_eternum_LeaderboardEntryConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_LeaderboardEntryEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_LeaderboardEntryEdge = {
  __typename?: 's0_eternum_LeaderboardEntryEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_LeaderboardEntry>;
};

export type S0_Eternum_LeaderboardEntryOrder = {
  direction: OrderDirection;
  field: S0_Eternum_LeaderboardEntryOrderField;
};

export enum S0_Eternum_LeaderboardEntryOrderField {
  Address = 'ADDRESS',
  Points = 'POINTS'
}

export type S0_Eternum_LeaderboardEntryWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  points?: InputMaybe<Scalars['u128']['input']>;
  pointsEQ?: InputMaybe<Scalars['u128']['input']>;
  pointsGT?: InputMaybe<Scalars['u128']['input']>;
  pointsGTE?: InputMaybe<Scalars['u128']['input']>;
  pointsIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  pointsLIKE?: InputMaybe<Scalars['u128']['input']>;
  pointsLT?: InputMaybe<Scalars['u128']['input']>;
  pointsLTE?: InputMaybe<Scalars['u128']['input']>;
  pointsNEQ?: InputMaybe<Scalars['u128']['input']>;
  pointsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  pointsNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type S0_Eternum_LeaderboardOrder = {
  direction: OrderDirection;
  field: S0_Eternum_LeaderboardOrderField;
};

export enum S0_Eternum_LeaderboardOrderField {
  ConfigId = 'CONFIG_ID',
  DistributionStarted = 'DISTRIBUTION_STARTED',
  RegistrationEndTimestamp = 'REGISTRATION_END_TIMESTAMP',
  TotalPoints = 'TOTAL_POINTS',
  TotalPricePool = 'TOTAL_PRICE_POOL'
}

export type S0_Eternum_LeaderboardRegisterContribution = {
  __typename?: 's0_eternum_LeaderboardRegisterContribution';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  hyperstructure_entity_id?: Maybe<Scalars['u32']['output']>;
  registered?: Maybe<Scalars['bool']['output']>;
};

export type S0_Eternum_LeaderboardRegisterContributionConnection = {
  __typename?: 's0_eternum_LeaderboardRegisterContributionConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_LeaderboardRegisterContributionEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_LeaderboardRegisterContributionEdge = {
  __typename?: 's0_eternum_LeaderboardRegisterContributionEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_LeaderboardRegisterContribution>;
};

export type S0_Eternum_LeaderboardRegisterContributionOrder = {
  direction: OrderDirection;
  field: S0_Eternum_LeaderboardRegisterContributionOrderField;
};

export enum S0_Eternum_LeaderboardRegisterContributionOrderField {
  Address = 'ADDRESS',
  HyperstructureEntityId = 'HYPERSTRUCTURE_ENTITY_ID',
  Registered = 'REGISTERED'
}

export type S0_Eternum_LeaderboardRegisterContributionWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  hyperstructure_entity_id?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  registered?: InputMaybe<Scalars['bool']['input']>;
};

export type S0_Eternum_LeaderboardRegisterShare = {
  __typename?: 's0_eternum_LeaderboardRegisterShare';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  epoch?: Maybe<Scalars['u16']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  hyperstructure_entity_id?: Maybe<Scalars['u32']['output']>;
  registered?: Maybe<Scalars['bool']['output']>;
};

export type S0_Eternum_LeaderboardRegisterShareConnection = {
  __typename?: 's0_eternum_LeaderboardRegisterShareConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_LeaderboardRegisterShareEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_LeaderboardRegisterShareEdge = {
  __typename?: 's0_eternum_LeaderboardRegisterShareEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_LeaderboardRegisterShare>;
};

export type S0_Eternum_LeaderboardRegisterShareOrder = {
  direction: OrderDirection;
  field: S0_Eternum_LeaderboardRegisterShareOrderField;
};

export enum S0_Eternum_LeaderboardRegisterShareOrderField {
  Address = 'ADDRESS',
  Epoch = 'EPOCH',
  HyperstructureEntityId = 'HYPERSTRUCTURE_ENTITY_ID',
  Registered = 'REGISTERED'
}

export type S0_Eternum_LeaderboardRegisterShareWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  epoch?: InputMaybe<Scalars['u16']['input']>;
  epochEQ?: InputMaybe<Scalars['u16']['input']>;
  epochGT?: InputMaybe<Scalars['u16']['input']>;
  epochGTE?: InputMaybe<Scalars['u16']['input']>;
  epochIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  epochLIKE?: InputMaybe<Scalars['u16']['input']>;
  epochLT?: InputMaybe<Scalars['u16']['input']>;
  epochLTE?: InputMaybe<Scalars['u16']['input']>;
  epochNEQ?: InputMaybe<Scalars['u16']['input']>;
  epochNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  epochNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  hyperstructure_entity_id?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  registered?: InputMaybe<Scalars['bool']['input']>;
};

export type S0_Eternum_LeaderboardRegistered = {
  __typename?: 's0_eternum_LeaderboardRegistered';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  registered?: Maybe<Scalars['bool']['output']>;
};

export type S0_Eternum_LeaderboardRegisteredConnection = {
  __typename?: 's0_eternum_LeaderboardRegisteredConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_LeaderboardRegisteredEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_LeaderboardRegisteredEdge = {
  __typename?: 's0_eternum_LeaderboardRegisteredEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_LeaderboardRegistered>;
};

export type S0_Eternum_LeaderboardRegisteredOrder = {
  direction: OrderDirection;
  field: S0_Eternum_LeaderboardRegisteredOrderField;
};

export enum S0_Eternum_LeaderboardRegisteredOrderField {
  Address = 'ADDRESS',
  Registered = 'REGISTERED'
}

export type S0_Eternum_LeaderboardRegisteredWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  registered?: InputMaybe<Scalars['bool']['input']>;
};

export type S0_Eternum_LeaderboardRewardClaimed = {
  __typename?: 's0_eternum_LeaderboardRewardClaimed';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  claimed?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
};

export type S0_Eternum_LeaderboardRewardClaimedConnection = {
  __typename?: 's0_eternum_LeaderboardRewardClaimedConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_LeaderboardRewardClaimedEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_LeaderboardRewardClaimedEdge = {
  __typename?: 's0_eternum_LeaderboardRewardClaimedEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_LeaderboardRewardClaimed>;
};

export type S0_Eternum_LeaderboardRewardClaimedOrder = {
  direction: OrderDirection;
  field: S0_Eternum_LeaderboardRewardClaimedOrderField;
};

export enum S0_Eternum_LeaderboardRewardClaimedOrderField {
  Address = 'ADDRESS',
  Claimed = 'CLAIMED'
}

export type S0_Eternum_LeaderboardRewardClaimedWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  claimed?: InputMaybe<Scalars['bool']['input']>;
};

export type S0_Eternum_LeaderboardWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  distribution_started?: InputMaybe<Scalars['bool']['input']>;
  registration_end_timestamp?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timestampGT?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  registration_end_timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timestampLT?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  registration_end_timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  registration_end_timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  total_points?: InputMaybe<Scalars['u128']['input']>;
  total_pointsEQ?: InputMaybe<Scalars['u128']['input']>;
  total_pointsGT?: InputMaybe<Scalars['u128']['input']>;
  total_pointsGTE?: InputMaybe<Scalars['u128']['input']>;
  total_pointsIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  total_pointsLIKE?: InputMaybe<Scalars['u128']['input']>;
  total_pointsLT?: InputMaybe<Scalars['u128']['input']>;
  total_pointsLTE?: InputMaybe<Scalars['u128']['input']>;
  total_pointsNEQ?: InputMaybe<Scalars['u128']['input']>;
  total_pointsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  total_pointsNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type S0_Eternum_LevelingConfig = {
  __typename?: 's0_eternum_LevelingConfig';
  base_multiplier?: Maybe<Scalars['u128']['output']>;
  config_id?: Maybe<Scalars['u32']['output']>;
  cost_percentage_scaled?: Maybe<Scalars['u128']['output']>;
  decay_interval?: Maybe<Scalars['u64']['output']>;
  decay_scaled?: Maybe<Scalars['u128']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  fish_base_amount?: Maybe<Scalars['u128']['output']>;
  max_level?: Maybe<Scalars['u64']['output']>;
  resource_1_cost_count?: Maybe<Scalars['u32']['output']>;
  resource_1_cost_id?: Maybe<Scalars['u32']['output']>;
  resource_2_cost_count?: Maybe<Scalars['u32']['output']>;
  resource_2_cost_id?: Maybe<Scalars['u32']['output']>;
  resource_3_cost_count?: Maybe<Scalars['u32']['output']>;
  resource_3_cost_id?: Maybe<Scalars['u32']['output']>;
  wheat_base_amount?: Maybe<Scalars['u128']['output']>;
};

export type S0_Eternum_LevelingConfigConnection = {
  __typename?: 's0_eternum_LevelingConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_LevelingConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_LevelingConfigEdge = {
  __typename?: 's0_eternum_LevelingConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_LevelingConfig>;
};

export type S0_Eternum_LevelingConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_LevelingConfigOrderField;
};

export enum S0_Eternum_LevelingConfigOrderField {
  BaseMultiplier = 'BASE_MULTIPLIER',
  ConfigId = 'CONFIG_ID',
  CostPercentageScaled = 'COST_PERCENTAGE_SCALED',
  DecayInterval = 'DECAY_INTERVAL',
  DecayScaled = 'DECAY_SCALED',
  FishBaseAmount = 'FISH_BASE_AMOUNT',
  MaxLevel = 'MAX_LEVEL',
  Resource_1CostCount = 'RESOURCE_1_COST_COUNT',
  Resource_1CostId = 'RESOURCE_1_COST_ID',
  Resource_2CostCount = 'RESOURCE_2_COST_COUNT',
  Resource_2CostId = 'RESOURCE_2_COST_ID',
  Resource_3CostCount = 'RESOURCE_3_COST_COUNT',
  Resource_3CostId = 'RESOURCE_3_COST_ID',
  WheatBaseAmount = 'WHEAT_BASE_AMOUNT'
}

export type S0_Eternum_LevelingConfigWhereInput = {
  base_multiplier?: InputMaybe<Scalars['u128']['input']>;
  base_multiplierEQ?: InputMaybe<Scalars['u128']['input']>;
  base_multiplierGT?: InputMaybe<Scalars['u128']['input']>;
  base_multiplierGTE?: InputMaybe<Scalars['u128']['input']>;
  base_multiplierIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  base_multiplierLIKE?: InputMaybe<Scalars['u128']['input']>;
  base_multiplierLT?: InputMaybe<Scalars['u128']['input']>;
  base_multiplierLTE?: InputMaybe<Scalars['u128']['input']>;
  base_multiplierNEQ?: InputMaybe<Scalars['u128']['input']>;
  base_multiplierNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  base_multiplierNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  cost_percentage_scaled?: InputMaybe<Scalars['u128']['input']>;
  cost_percentage_scaledEQ?: InputMaybe<Scalars['u128']['input']>;
  cost_percentage_scaledGT?: InputMaybe<Scalars['u128']['input']>;
  cost_percentage_scaledGTE?: InputMaybe<Scalars['u128']['input']>;
  cost_percentage_scaledIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  cost_percentage_scaledLIKE?: InputMaybe<Scalars['u128']['input']>;
  cost_percentage_scaledLT?: InputMaybe<Scalars['u128']['input']>;
  cost_percentage_scaledLTE?: InputMaybe<Scalars['u128']['input']>;
  cost_percentage_scaledNEQ?: InputMaybe<Scalars['u128']['input']>;
  cost_percentage_scaledNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  cost_percentage_scaledNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  decay_interval?: InputMaybe<Scalars['u64']['input']>;
  decay_intervalEQ?: InputMaybe<Scalars['u64']['input']>;
  decay_intervalGT?: InputMaybe<Scalars['u64']['input']>;
  decay_intervalGTE?: InputMaybe<Scalars['u64']['input']>;
  decay_intervalIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  decay_intervalLIKE?: InputMaybe<Scalars['u64']['input']>;
  decay_intervalLT?: InputMaybe<Scalars['u64']['input']>;
  decay_intervalLTE?: InputMaybe<Scalars['u64']['input']>;
  decay_intervalNEQ?: InputMaybe<Scalars['u64']['input']>;
  decay_intervalNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  decay_intervalNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  decay_scaled?: InputMaybe<Scalars['u128']['input']>;
  decay_scaledEQ?: InputMaybe<Scalars['u128']['input']>;
  decay_scaledGT?: InputMaybe<Scalars['u128']['input']>;
  decay_scaledGTE?: InputMaybe<Scalars['u128']['input']>;
  decay_scaledIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  decay_scaledLIKE?: InputMaybe<Scalars['u128']['input']>;
  decay_scaledLT?: InputMaybe<Scalars['u128']['input']>;
  decay_scaledLTE?: InputMaybe<Scalars['u128']['input']>;
  decay_scaledNEQ?: InputMaybe<Scalars['u128']['input']>;
  decay_scaledNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  decay_scaledNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  fish_base_amount?: InputMaybe<Scalars['u128']['input']>;
  fish_base_amountEQ?: InputMaybe<Scalars['u128']['input']>;
  fish_base_amountGT?: InputMaybe<Scalars['u128']['input']>;
  fish_base_amountGTE?: InputMaybe<Scalars['u128']['input']>;
  fish_base_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  fish_base_amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  fish_base_amountLT?: InputMaybe<Scalars['u128']['input']>;
  fish_base_amountLTE?: InputMaybe<Scalars['u128']['input']>;
  fish_base_amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  fish_base_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  fish_base_amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  max_level?: InputMaybe<Scalars['u64']['input']>;
  max_levelEQ?: InputMaybe<Scalars['u64']['input']>;
  max_levelGT?: InputMaybe<Scalars['u64']['input']>;
  max_levelGTE?: InputMaybe<Scalars['u64']['input']>;
  max_levelIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  max_levelLIKE?: InputMaybe<Scalars['u64']['input']>;
  max_levelLT?: InputMaybe<Scalars['u64']['input']>;
  max_levelLTE?: InputMaybe<Scalars['u64']['input']>;
  max_levelNEQ?: InputMaybe<Scalars['u64']['input']>;
  max_levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  max_levelNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  resource_1_cost_count?: InputMaybe<Scalars['u32']['input']>;
  resource_1_cost_countEQ?: InputMaybe<Scalars['u32']['input']>;
  resource_1_cost_countGT?: InputMaybe<Scalars['u32']['input']>;
  resource_1_cost_countGTE?: InputMaybe<Scalars['u32']['input']>;
  resource_1_cost_countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  resource_1_cost_countLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_1_cost_countLT?: InputMaybe<Scalars['u32']['input']>;
  resource_1_cost_countLTE?: InputMaybe<Scalars['u32']['input']>;
  resource_1_cost_countNEQ?: InputMaybe<Scalars['u32']['input']>;
  resource_1_cost_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  resource_1_cost_countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_1_cost_id?: InputMaybe<Scalars['u32']['input']>;
  resource_1_cost_idEQ?: InputMaybe<Scalars['u32']['input']>;
  resource_1_cost_idGT?: InputMaybe<Scalars['u32']['input']>;
  resource_1_cost_idGTE?: InputMaybe<Scalars['u32']['input']>;
  resource_1_cost_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  resource_1_cost_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_1_cost_idLT?: InputMaybe<Scalars['u32']['input']>;
  resource_1_cost_idLTE?: InputMaybe<Scalars['u32']['input']>;
  resource_1_cost_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  resource_1_cost_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  resource_1_cost_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_count?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_countEQ?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_countGT?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_countGTE?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  resource_2_cost_countLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_countLT?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_countLTE?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_countNEQ?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  resource_2_cost_countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_id?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_idEQ?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_idGT?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_idGTE?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  resource_2_cost_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_idLT?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_idLTE?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  resource_2_cost_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  resource_2_cost_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_count?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_countEQ?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_countGT?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_countGTE?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  resource_3_cost_countLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_countLT?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_countLTE?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_countNEQ?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  resource_3_cost_countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_id?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_idEQ?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_idGT?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_idGTE?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  resource_3_cost_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_idLT?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_idLTE?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  resource_3_cost_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  resource_3_cost_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  wheat_base_amount?: InputMaybe<Scalars['u128']['input']>;
  wheat_base_amountEQ?: InputMaybe<Scalars['u128']['input']>;
  wheat_base_amountGT?: InputMaybe<Scalars['u128']['input']>;
  wheat_base_amountGTE?: InputMaybe<Scalars['u128']['input']>;
  wheat_base_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  wheat_base_amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  wheat_base_amountLT?: InputMaybe<Scalars['u128']['input']>;
  wheat_base_amountLTE?: InputMaybe<Scalars['u128']['input']>;
  wheat_base_amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  wheat_base_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  wheat_base_amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type S0_Eternum_Liquidity = {
  __typename?: 's0_eternum_Liquidity';
  bank_entity_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  player?: Maybe<Scalars['ContractAddress']['output']>;
  resource_type?: Maybe<Scalars['u8']['output']>;
  shares?: Maybe<S0_Eternum_Fixed>;
};

export type S0_Eternum_LiquidityConnection = {
  __typename?: 's0_eternum_LiquidityConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_LiquidityEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_LiquidityEdge = {
  __typename?: 's0_eternum_LiquidityEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Liquidity>;
};

export type S0_Eternum_LiquidityEvent = {
  __typename?: 's0_eternum_LiquidityEvent';
  add?: Maybe<Scalars['bool']['output']>;
  bank_entity_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  lords_amount?: Maybe<Scalars['u128']['output']>;
  resource_amount?: Maybe<Scalars['u128']['output']>;
  resource_price?: Maybe<Scalars['u128']['output']>;
  resource_type?: Maybe<Scalars['u8']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_LiquidityEventConnection = {
  __typename?: 's0_eternum_LiquidityEventConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_LiquidityEventEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_LiquidityEventEdge = {
  __typename?: 's0_eternum_LiquidityEventEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_LiquidityEvent>;
};

export type S0_Eternum_LiquidityEventOrder = {
  direction: OrderDirection;
  field: S0_Eternum_LiquidityEventOrderField;
};

export enum S0_Eternum_LiquidityEventOrderField {
  Add = 'ADD',
  BankEntityId = 'BANK_ENTITY_ID',
  EntityId = 'ENTITY_ID',
  LordsAmount = 'LORDS_AMOUNT',
  ResourceAmount = 'RESOURCE_AMOUNT',
  ResourcePrice = 'RESOURCE_PRICE',
  ResourceType = 'RESOURCE_TYPE',
  Timestamp = 'TIMESTAMP'
}

export type S0_Eternum_LiquidityEventWhereInput = {
  add?: InputMaybe<Scalars['bool']['input']>;
  bank_entity_id?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  bank_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  bank_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  lords_amount?: InputMaybe<Scalars['u128']['input']>;
  lords_amountEQ?: InputMaybe<Scalars['u128']['input']>;
  lords_amountGT?: InputMaybe<Scalars['u128']['input']>;
  lords_amountGTE?: InputMaybe<Scalars['u128']['input']>;
  lords_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  lords_amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  lords_amountLT?: InputMaybe<Scalars['u128']['input']>;
  lords_amountLTE?: InputMaybe<Scalars['u128']['input']>;
  lords_amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  lords_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  lords_amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_amount?: InputMaybe<Scalars['u128']['input']>;
  resource_amountEQ?: InputMaybe<Scalars['u128']['input']>;
  resource_amountGT?: InputMaybe<Scalars['u128']['input']>;
  resource_amountGTE?: InputMaybe<Scalars['u128']['input']>;
  resource_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  resource_amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_amountLT?: InputMaybe<Scalars['u128']['input']>;
  resource_amountLTE?: InputMaybe<Scalars['u128']['input']>;
  resource_amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  resource_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  resource_amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_price?: InputMaybe<Scalars['u128']['input']>;
  resource_priceEQ?: InputMaybe<Scalars['u128']['input']>;
  resource_priceGT?: InputMaybe<Scalars['u128']['input']>;
  resource_priceGTE?: InputMaybe<Scalars['u128']['input']>;
  resource_priceIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  resource_priceLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_priceLT?: InputMaybe<Scalars['u128']['input']>;
  resource_priceLTE?: InputMaybe<Scalars['u128']['input']>;
  resource_priceNEQ?: InputMaybe<Scalars['u128']['input']>;
  resource_priceNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  resource_priceNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_type?: InputMaybe<Scalars['u8']['input']>;
  resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_LiquidityOrder = {
  direction: OrderDirection;
  field: S0_Eternum_LiquidityOrderField;
};

export enum S0_Eternum_LiquidityOrderField {
  BankEntityId = 'BANK_ENTITY_ID',
  Player = 'PLAYER',
  ResourceType = 'RESOURCE_TYPE',
  Shares = 'SHARES'
}

export type S0_Eternum_LiquidityWhereInput = {
  bank_entity_id?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  bank_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  bank_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  player?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  playerLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  playerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  playerNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  resource_type?: InputMaybe<Scalars['u8']['input']>;
  resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_MapConfig = {
  __typename?: 's0_eternum_MapConfig';
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  reward_resource_amount?: Maybe<Scalars['u128']['output']>;
  shards_mines_fail_probability?: Maybe<Scalars['u128']['output']>;
};

export type S0_Eternum_MapConfigConnection = {
  __typename?: 's0_eternum_MapConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_MapConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_MapConfigEdge = {
  __typename?: 's0_eternum_MapConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_MapConfig>;
};

export type S0_Eternum_MapConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_MapConfigOrderField;
};

export enum S0_Eternum_MapConfigOrderField {
  ConfigId = 'CONFIG_ID',
  RewardResourceAmount = 'REWARD_RESOURCE_AMOUNT',
  ShardsMinesFailProbability = 'SHARDS_MINES_FAIL_PROBABILITY'
}

export type S0_Eternum_MapConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  reward_resource_amount?: InputMaybe<Scalars['u128']['input']>;
  reward_resource_amountEQ?: InputMaybe<Scalars['u128']['input']>;
  reward_resource_amountGT?: InputMaybe<Scalars['u128']['input']>;
  reward_resource_amountGTE?: InputMaybe<Scalars['u128']['input']>;
  reward_resource_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  reward_resource_amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  reward_resource_amountLT?: InputMaybe<Scalars['u128']['input']>;
  reward_resource_amountLTE?: InputMaybe<Scalars['u128']['input']>;
  reward_resource_amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  reward_resource_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  reward_resource_amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  shards_mines_fail_probability?: InputMaybe<Scalars['u128']['input']>;
  shards_mines_fail_probabilityEQ?: InputMaybe<Scalars['u128']['input']>;
  shards_mines_fail_probabilityGT?: InputMaybe<Scalars['u128']['input']>;
  shards_mines_fail_probabilityGTE?: InputMaybe<Scalars['u128']['input']>;
  shards_mines_fail_probabilityIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  shards_mines_fail_probabilityLIKE?: InputMaybe<Scalars['u128']['input']>;
  shards_mines_fail_probabilityLT?: InputMaybe<Scalars['u128']['input']>;
  shards_mines_fail_probabilityLTE?: InputMaybe<Scalars['u128']['input']>;
  shards_mines_fail_probabilityNEQ?: InputMaybe<Scalars['u128']['input']>;
  shards_mines_fail_probabilityNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  shards_mines_fail_probabilityNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type S0_Eternum_MapExplored = {
  __typename?: 's0_eternum_MapExplored';
  biome?: Maybe<Scalars['Enum']['output']>;
  col?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  entity_owner_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  reward?: Maybe<Array<Maybe<S0_Eternum_U8u128>>>;
  row?: Maybe<Scalars['u32']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_MapExploredConnection = {
  __typename?: 's0_eternum_MapExploredConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_MapExploredEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_MapExploredEdge = {
  __typename?: 's0_eternum_MapExploredEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_MapExplored>;
};

export type S0_Eternum_MapExploredOrder = {
  direction: OrderDirection;
  field: S0_Eternum_MapExploredOrderField;
};

export enum S0_Eternum_MapExploredOrderField {
  Biome = 'BIOME',
  Col = 'COL',
  EntityId = 'ENTITY_ID',
  EntityOwnerId = 'ENTITY_OWNER_ID',
  Id = 'ID',
  Reward = 'REWARD',
  Row = 'ROW',
  Timestamp = 'TIMESTAMP'
}

export type S0_Eternum_MapExploredWhereInput = {
  biome?: InputMaybe<Scalars['Enum']['input']>;
  col?: InputMaybe<Scalars['u32']['input']>;
  colEQ?: InputMaybe<Scalars['u32']['input']>;
  colGT?: InputMaybe<Scalars['u32']['input']>;
  colGTE?: InputMaybe<Scalars['u32']['input']>;
  colIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  colLIKE?: InputMaybe<Scalars['u32']['input']>;
  colLT?: InputMaybe<Scalars['u32']['input']>;
  colLTE?: InputMaybe<Scalars['u32']['input']>;
  colNEQ?: InputMaybe<Scalars['u32']['input']>;
  colNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  colNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_id?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_owner_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_owner_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_owner_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  row?: InputMaybe<Scalars['u32']['input']>;
  rowEQ?: InputMaybe<Scalars['u32']['input']>;
  rowGT?: InputMaybe<Scalars['u32']['input']>;
  rowGTE?: InputMaybe<Scalars['u32']['input']>;
  rowIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  rowLIKE?: InputMaybe<Scalars['u32']['input']>;
  rowLT?: InputMaybe<Scalars['u32']['input']>;
  rowLTE?: InputMaybe<Scalars['u32']['input']>;
  rowNEQ?: InputMaybe<Scalars['u32']['input']>;
  rowNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  rowNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_Market = {
  __typename?: 's0_eternum_Market';
  bank_entity_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lords_amount?: Maybe<Scalars['u128']['output']>;
  resource_amount?: Maybe<Scalars['u128']['output']>;
  resource_type?: Maybe<Scalars['u8']['output']>;
  total_shares?: Maybe<S0_Eternum_Fixed>;
};

export type S0_Eternum_MarketConnection = {
  __typename?: 's0_eternum_MarketConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_MarketEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_MarketEdge = {
  __typename?: 's0_eternum_MarketEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Market>;
};

export type S0_Eternum_MarketOrder = {
  direction: OrderDirection;
  field: S0_Eternum_MarketOrderField;
};

export enum S0_Eternum_MarketOrderField {
  BankEntityId = 'BANK_ENTITY_ID',
  LordsAmount = 'LORDS_AMOUNT',
  ResourceAmount = 'RESOURCE_AMOUNT',
  ResourceType = 'RESOURCE_TYPE',
  TotalShares = 'TOTAL_SHARES'
}

export type S0_Eternum_MarketWhereInput = {
  bank_entity_id?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  bank_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  bank_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  lords_amount?: InputMaybe<Scalars['u128']['input']>;
  lords_amountEQ?: InputMaybe<Scalars['u128']['input']>;
  lords_amountGT?: InputMaybe<Scalars['u128']['input']>;
  lords_amountGTE?: InputMaybe<Scalars['u128']['input']>;
  lords_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  lords_amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  lords_amountLT?: InputMaybe<Scalars['u128']['input']>;
  lords_amountLTE?: InputMaybe<Scalars['u128']['input']>;
  lords_amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  lords_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  lords_amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_amount?: InputMaybe<Scalars['u128']['input']>;
  resource_amountEQ?: InputMaybe<Scalars['u128']['input']>;
  resource_amountGT?: InputMaybe<Scalars['u128']['input']>;
  resource_amountGTE?: InputMaybe<Scalars['u128']['input']>;
  resource_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  resource_amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_amountLT?: InputMaybe<Scalars['u128']['input']>;
  resource_amountLTE?: InputMaybe<Scalars['u128']['input']>;
  resource_amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  resource_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  resource_amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_type?: InputMaybe<Scalars['u8']['input']>;
  resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_MercenariesConfig = {
  __typename?: 's0_eternum_MercenariesConfig';
  config_id?: Maybe<Scalars['u32']['output']>;
  crossbowmen_lower_bound?: Maybe<Scalars['u64']['output']>;
  crossbowmen_upper_bound?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  knights_lower_bound?: Maybe<Scalars['u64']['output']>;
  knights_upper_bound?: Maybe<Scalars['u64']['output']>;
  paladins_lower_bound?: Maybe<Scalars['u64']['output']>;
  paladins_upper_bound?: Maybe<Scalars['u64']['output']>;
  rewards?: Maybe<Array<Maybe<S0_Eternum_U8u128>>>;
};

export type S0_Eternum_MercenariesConfigConnection = {
  __typename?: 's0_eternum_MercenariesConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_MercenariesConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_MercenariesConfigEdge = {
  __typename?: 's0_eternum_MercenariesConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_MercenariesConfig>;
};

export type S0_Eternum_MercenariesConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_MercenariesConfigOrderField;
};

export enum S0_Eternum_MercenariesConfigOrderField {
  ConfigId = 'CONFIG_ID',
  CrossbowmenLowerBound = 'CROSSBOWMEN_LOWER_BOUND',
  CrossbowmenUpperBound = 'CROSSBOWMEN_UPPER_BOUND',
  KnightsLowerBound = 'KNIGHTS_LOWER_BOUND',
  KnightsUpperBound = 'KNIGHTS_UPPER_BOUND',
  PaladinsLowerBound = 'PALADINS_LOWER_BOUND',
  PaladinsUpperBound = 'PALADINS_UPPER_BOUND',
  Rewards = 'REWARDS'
}

export type S0_Eternum_MercenariesConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  crossbowmen_lower_bound?: InputMaybe<Scalars['u64']['input']>;
  crossbowmen_lower_boundEQ?: InputMaybe<Scalars['u64']['input']>;
  crossbowmen_lower_boundGT?: InputMaybe<Scalars['u64']['input']>;
  crossbowmen_lower_boundGTE?: InputMaybe<Scalars['u64']['input']>;
  crossbowmen_lower_boundIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  crossbowmen_lower_boundLIKE?: InputMaybe<Scalars['u64']['input']>;
  crossbowmen_lower_boundLT?: InputMaybe<Scalars['u64']['input']>;
  crossbowmen_lower_boundLTE?: InputMaybe<Scalars['u64']['input']>;
  crossbowmen_lower_boundNEQ?: InputMaybe<Scalars['u64']['input']>;
  crossbowmen_lower_boundNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  crossbowmen_lower_boundNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  crossbowmen_upper_bound?: InputMaybe<Scalars['u64']['input']>;
  crossbowmen_upper_boundEQ?: InputMaybe<Scalars['u64']['input']>;
  crossbowmen_upper_boundGT?: InputMaybe<Scalars['u64']['input']>;
  crossbowmen_upper_boundGTE?: InputMaybe<Scalars['u64']['input']>;
  crossbowmen_upper_boundIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  crossbowmen_upper_boundLIKE?: InputMaybe<Scalars['u64']['input']>;
  crossbowmen_upper_boundLT?: InputMaybe<Scalars['u64']['input']>;
  crossbowmen_upper_boundLTE?: InputMaybe<Scalars['u64']['input']>;
  crossbowmen_upper_boundNEQ?: InputMaybe<Scalars['u64']['input']>;
  crossbowmen_upper_boundNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  crossbowmen_upper_boundNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  knights_lower_bound?: InputMaybe<Scalars['u64']['input']>;
  knights_lower_boundEQ?: InputMaybe<Scalars['u64']['input']>;
  knights_lower_boundGT?: InputMaybe<Scalars['u64']['input']>;
  knights_lower_boundGTE?: InputMaybe<Scalars['u64']['input']>;
  knights_lower_boundIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  knights_lower_boundLIKE?: InputMaybe<Scalars['u64']['input']>;
  knights_lower_boundLT?: InputMaybe<Scalars['u64']['input']>;
  knights_lower_boundLTE?: InputMaybe<Scalars['u64']['input']>;
  knights_lower_boundNEQ?: InputMaybe<Scalars['u64']['input']>;
  knights_lower_boundNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  knights_lower_boundNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  knights_upper_bound?: InputMaybe<Scalars['u64']['input']>;
  knights_upper_boundEQ?: InputMaybe<Scalars['u64']['input']>;
  knights_upper_boundGT?: InputMaybe<Scalars['u64']['input']>;
  knights_upper_boundGTE?: InputMaybe<Scalars['u64']['input']>;
  knights_upper_boundIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  knights_upper_boundLIKE?: InputMaybe<Scalars['u64']['input']>;
  knights_upper_boundLT?: InputMaybe<Scalars['u64']['input']>;
  knights_upper_boundLTE?: InputMaybe<Scalars['u64']['input']>;
  knights_upper_boundNEQ?: InputMaybe<Scalars['u64']['input']>;
  knights_upper_boundNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  knights_upper_boundNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  paladins_lower_bound?: InputMaybe<Scalars['u64']['input']>;
  paladins_lower_boundEQ?: InputMaybe<Scalars['u64']['input']>;
  paladins_lower_boundGT?: InputMaybe<Scalars['u64']['input']>;
  paladins_lower_boundGTE?: InputMaybe<Scalars['u64']['input']>;
  paladins_lower_boundIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  paladins_lower_boundLIKE?: InputMaybe<Scalars['u64']['input']>;
  paladins_lower_boundLT?: InputMaybe<Scalars['u64']['input']>;
  paladins_lower_boundLTE?: InputMaybe<Scalars['u64']['input']>;
  paladins_lower_boundNEQ?: InputMaybe<Scalars['u64']['input']>;
  paladins_lower_boundNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  paladins_lower_boundNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  paladins_upper_bound?: InputMaybe<Scalars['u64']['input']>;
  paladins_upper_boundEQ?: InputMaybe<Scalars['u64']['input']>;
  paladins_upper_boundGT?: InputMaybe<Scalars['u64']['input']>;
  paladins_upper_boundGTE?: InputMaybe<Scalars['u64']['input']>;
  paladins_upper_boundIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  paladins_upper_boundLIKE?: InputMaybe<Scalars['u64']['input']>;
  paladins_upper_boundLT?: InputMaybe<Scalars['u64']['input']>;
  paladins_upper_boundLTE?: InputMaybe<Scalars['u64']['input']>;
  paladins_upper_boundNEQ?: InputMaybe<Scalars['u64']['input']>;
  paladins_upper_boundNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  paladins_upper_boundNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_Message = {
  __typename?: 's0_eternum_Message';
  channel?: Maybe<Scalars['felt252']['output']>;
  content?: Maybe<Scalars['ByteArray']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  identity?: Maybe<Scalars['ContractAddress']['output']>;
  salt?: Maybe<Scalars['felt252']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_MessageConnection = {
  __typename?: 's0_eternum_MessageConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_MessageEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_MessageEdge = {
  __typename?: 's0_eternum_MessageEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Message>;
};

export type S0_Eternum_MessageOrder = {
  direction: OrderDirection;
  field: S0_Eternum_MessageOrderField;
};

export enum S0_Eternum_MessageOrderField {
  Channel = 'CHANNEL',
  Content = 'CONTENT',
  Identity = 'IDENTITY',
  Salt = 'SALT',
  Timestamp = 'TIMESTAMP'
}

export type S0_Eternum_MessageWhereInput = {
  channel?: InputMaybe<Scalars['felt252']['input']>;
  channelEQ?: InputMaybe<Scalars['felt252']['input']>;
  channelGT?: InputMaybe<Scalars['felt252']['input']>;
  channelGTE?: InputMaybe<Scalars['felt252']['input']>;
  channelIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  channelLIKE?: InputMaybe<Scalars['felt252']['input']>;
  channelLT?: InputMaybe<Scalars['felt252']['input']>;
  channelLTE?: InputMaybe<Scalars['felt252']['input']>;
  channelNEQ?: InputMaybe<Scalars['felt252']['input']>;
  channelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  channelNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  content?: InputMaybe<Scalars['ByteArray']['input']>;
  contentEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  contentGT?: InputMaybe<Scalars['ByteArray']['input']>;
  contentGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  contentIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  contentLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  contentLT?: InputMaybe<Scalars['ByteArray']['input']>;
  contentLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  contentNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  contentNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  contentNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  identity?: InputMaybe<Scalars['ContractAddress']['input']>;
  identityEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  identityGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  identityGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  identityIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  identityLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  identityLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  identityLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  identityNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  identityNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  identityNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  salt?: InputMaybe<Scalars['felt252']['input']>;
  saltEQ?: InputMaybe<Scalars['felt252']['input']>;
  saltGT?: InputMaybe<Scalars['felt252']['input']>;
  saltGTE?: InputMaybe<Scalars['felt252']['input']>;
  saltIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  saltLIKE?: InputMaybe<Scalars['felt252']['input']>;
  saltLT?: InputMaybe<Scalars['felt252']['input']>;
  saltLTE?: InputMaybe<Scalars['felt252']['input']>;
  saltNEQ?: InputMaybe<Scalars['felt252']['input']>;
  saltNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  saltNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_Movable = {
  __typename?: 's0_eternum_Movable';
  blocked?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  intermediate_coord_x?: Maybe<Scalars['u32']['output']>;
  intermediate_coord_y?: Maybe<Scalars['u32']['output']>;
  round_trip?: Maybe<Scalars['bool']['output']>;
  sec_per_km?: Maybe<Scalars['u16']['output']>;
  start_coord_x?: Maybe<Scalars['u32']['output']>;
  start_coord_y?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_MovableConnection = {
  __typename?: 's0_eternum_MovableConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_MovableEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_MovableEdge = {
  __typename?: 's0_eternum_MovableEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Movable>;
};

export type S0_Eternum_MovableOrder = {
  direction: OrderDirection;
  field: S0_Eternum_MovableOrderField;
};

export enum S0_Eternum_MovableOrderField {
  Blocked = 'BLOCKED',
  EntityId = 'ENTITY_ID',
  IntermediateCoordX = 'INTERMEDIATE_COORD_X',
  IntermediateCoordY = 'INTERMEDIATE_COORD_Y',
  RoundTrip = 'ROUND_TRIP',
  SecPerKm = 'SEC_PER_KM',
  StartCoordX = 'START_COORD_X',
  StartCoordY = 'START_COORD_Y'
}

export type S0_Eternum_MovableWhereInput = {
  blocked?: InputMaybe<Scalars['bool']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_x?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_xEQ?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_xGT?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_xGTE?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_xIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  intermediate_coord_xLIKE?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_xLT?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_xLTE?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_xNEQ?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_xNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  intermediate_coord_xNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_y?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_yEQ?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_yGT?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_yGTE?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_yIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  intermediate_coord_yLIKE?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_yLT?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_yLTE?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_yNEQ?: InputMaybe<Scalars['u32']['input']>;
  intermediate_coord_yNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  intermediate_coord_yNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  round_trip?: InputMaybe<Scalars['bool']['input']>;
  sec_per_km?: InputMaybe<Scalars['u16']['input']>;
  sec_per_kmEQ?: InputMaybe<Scalars['u16']['input']>;
  sec_per_kmGT?: InputMaybe<Scalars['u16']['input']>;
  sec_per_kmGTE?: InputMaybe<Scalars['u16']['input']>;
  sec_per_kmIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  sec_per_kmLIKE?: InputMaybe<Scalars['u16']['input']>;
  sec_per_kmLT?: InputMaybe<Scalars['u16']['input']>;
  sec_per_kmLTE?: InputMaybe<Scalars['u16']['input']>;
  sec_per_kmNEQ?: InputMaybe<Scalars['u16']['input']>;
  sec_per_kmNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  sec_per_kmNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  start_coord_x?: InputMaybe<Scalars['u32']['input']>;
  start_coord_xEQ?: InputMaybe<Scalars['u32']['input']>;
  start_coord_xGT?: InputMaybe<Scalars['u32']['input']>;
  start_coord_xGTE?: InputMaybe<Scalars['u32']['input']>;
  start_coord_xIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  start_coord_xLIKE?: InputMaybe<Scalars['u32']['input']>;
  start_coord_xLT?: InputMaybe<Scalars['u32']['input']>;
  start_coord_xLTE?: InputMaybe<Scalars['u32']['input']>;
  start_coord_xNEQ?: InputMaybe<Scalars['u32']['input']>;
  start_coord_xNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  start_coord_xNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  start_coord_y?: InputMaybe<Scalars['u32']['input']>;
  start_coord_yEQ?: InputMaybe<Scalars['u32']['input']>;
  start_coord_yGT?: InputMaybe<Scalars['u32']['input']>;
  start_coord_yGTE?: InputMaybe<Scalars['u32']['input']>;
  start_coord_yIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  start_coord_yLIKE?: InputMaybe<Scalars['u32']['input']>;
  start_coord_yLT?: InputMaybe<Scalars['u32']['input']>;
  start_coord_yLTE?: InputMaybe<Scalars['u32']['input']>;
  start_coord_yNEQ?: InputMaybe<Scalars['u32']['input']>;
  start_coord_yNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  start_coord_yNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_Optionu256 = {
  __typename?: 's0_eternum_Optionu256';
  Some?: Maybe<Scalars['u256']['output']>;
  option?: Maybe<Scalars['Enum']['output']>;
};

export type S0_Eternum_Orders = {
  __typename?: 's0_eternum_Orders';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  hyperstructure_count?: Maybe<Scalars['u32']['output']>;
  order_id?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_OrdersConnection = {
  __typename?: 's0_eternum_OrdersConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_OrdersEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_OrdersEdge = {
  __typename?: 's0_eternum_OrdersEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Orders>;
};

export type S0_Eternum_OrdersOrder = {
  direction: OrderDirection;
  field: S0_Eternum_OrdersOrderField;
};

export enum S0_Eternum_OrdersOrderField {
  HyperstructureCount = 'HYPERSTRUCTURE_COUNT',
  OrderId = 'ORDER_ID'
}

export type S0_Eternum_OrdersWhereInput = {
  hyperstructure_count?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_countEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_countGT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_countGTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_countLIKE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_countLT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_countLTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_countNEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  order_id?: InputMaybe<Scalars['u32']['input']>;
  order_idEQ?: InputMaybe<Scalars['u32']['input']>;
  order_idGT?: InputMaybe<Scalars['u32']['input']>;
  order_idGTE?: InputMaybe<Scalars['u32']['input']>;
  order_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  order_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  order_idLT?: InputMaybe<Scalars['u32']['input']>;
  order_idLTE?: InputMaybe<Scalars['u32']['input']>;
  order_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  order_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  order_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_OwnedResourcesTracker = {
  __typename?: 's0_eternum_OwnedResourcesTracker';
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  resource_types?: Maybe<Scalars['u256']['output']>;
};

export type S0_Eternum_OwnedResourcesTrackerConnection = {
  __typename?: 's0_eternum_OwnedResourcesTrackerConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_OwnedResourcesTrackerEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_OwnedResourcesTrackerEdge = {
  __typename?: 's0_eternum_OwnedResourcesTrackerEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_OwnedResourcesTracker>;
};

export type S0_Eternum_OwnedResourcesTrackerOrder = {
  direction: OrderDirection;
  field: S0_Eternum_OwnedResourcesTrackerOrderField;
};

export enum S0_Eternum_OwnedResourcesTrackerOrderField {
  EntityId = 'ENTITY_ID',
  ResourceTypes = 'RESOURCE_TYPES'
}

export type S0_Eternum_OwnedResourcesTrackerWhereInput = {
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_types?: InputMaybe<Scalars['u256']['input']>;
  resource_typesEQ?: InputMaybe<Scalars['u256']['input']>;
  resource_typesGT?: InputMaybe<Scalars['u256']['input']>;
  resource_typesGTE?: InputMaybe<Scalars['u256']['input']>;
  resource_typesIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  resource_typesLIKE?: InputMaybe<Scalars['u256']['input']>;
  resource_typesLT?: InputMaybe<Scalars['u256']['input']>;
  resource_typesLTE?: InputMaybe<Scalars['u256']['input']>;
  resource_typesNEQ?: InputMaybe<Scalars['u256']['input']>;
  resource_typesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u256']['input']>>>;
  resource_typesNOTLIKE?: InputMaybe<Scalars['u256']['input']>;
};

export type S0_Eternum_Owner = {
  __typename?: 's0_eternum_Owner';
  address?: Maybe<Scalars['ContractAddress']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
};

export type S0_Eternum_OwnerConnection = {
  __typename?: 's0_eternum_OwnerConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_OwnerEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_OwnerEdge = {
  __typename?: 's0_eternum_OwnerEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Owner>;
};

export type S0_Eternum_OwnerOrder = {
  direction: OrderDirection;
  field: S0_Eternum_OwnerOrderField;
};

export enum S0_Eternum_OwnerOrderField {
  Address = 'ADDRESS',
  EntityId = 'ENTITY_ID'
}

export type S0_Eternum_OwnerWhereInput = {
  address?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_Population = {
  __typename?: 's0_eternum_Population';
  capacity?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  population?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_PopulationConfig = {
  __typename?: 's0_eternum_PopulationConfig';
  base_population?: Maybe<Scalars['u32']['output']>;
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
};

export type S0_Eternum_PopulationConfigConnection = {
  __typename?: 's0_eternum_PopulationConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_PopulationConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_PopulationConfigEdge = {
  __typename?: 's0_eternum_PopulationConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_PopulationConfig>;
};

export type S0_Eternum_PopulationConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_PopulationConfigOrderField;
};

export enum S0_Eternum_PopulationConfigOrderField {
  BasePopulation = 'BASE_POPULATION',
  ConfigId = 'CONFIG_ID'
}

export type S0_Eternum_PopulationConfigWhereInput = {
  base_population?: InputMaybe<Scalars['u32']['input']>;
  base_populationEQ?: InputMaybe<Scalars['u32']['input']>;
  base_populationGT?: InputMaybe<Scalars['u32']['input']>;
  base_populationGTE?: InputMaybe<Scalars['u32']['input']>;
  base_populationIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  base_populationLIKE?: InputMaybe<Scalars['u32']['input']>;
  base_populationLT?: InputMaybe<Scalars['u32']['input']>;
  base_populationLTE?: InputMaybe<Scalars['u32']['input']>;
  base_populationNEQ?: InputMaybe<Scalars['u32']['input']>;
  base_populationNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  base_populationNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_PopulationConnection = {
  __typename?: 's0_eternum_PopulationConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_PopulationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_PopulationEdge = {
  __typename?: 's0_eternum_PopulationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Population>;
};

export type S0_Eternum_PopulationOrder = {
  direction: OrderDirection;
  field: S0_Eternum_PopulationOrderField;
};

export enum S0_Eternum_PopulationOrderField {
  Capacity = 'CAPACITY',
  EntityId = 'ENTITY_ID',
  Population = 'POPULATION'
}

export type S0_Eternum_PopulationWhereInput = {
  capacity?: InputMaybe<Scalars['u32']['input']>;
  capacityEQ?: InputMaybe<Scalars['u32']['input']>;
  capacityGT?: InputMaybe<Scalars['u32']['input']>;
  capacityGTE?: InputMaybe<Scalars['u32']['input']>;
  capacityIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  capacityLIKE?: InputMaybe<Scalars['u32']['input']>;
  capacityLT?: InputMaybe<Scalars['u32']['input']>;
  capacityLTE?: InputMaybe<Scalars['u32']['input']>;
  capacityNEQ?: InputMaybe<Scalars['u32']['input']>;
  capacityNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  capacityNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  population?: InputMaybe<Scalars['u32']['input']>;
  populationEQ?: InputMaybe<Scalars['u32']['input']>;
  populationGT?: InputMaybe<Scalars['u32']['input']>;
  populationGTE?: InputMaybe<Scalars['u32']['input']>;
  populationIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  populationLIKE?: InputMaybe<Scalars['u32']['input']>;
  populationLT?: InputMaybe<Scalars['u32']['input']>;
  populationLTE?: InputMaybe<Scalars['u32']['input']>;
  populationNEQ?: InputMaybe<Scalars['u32']['input']>;
  populationNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  populationNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_Position = {
  __typename?: 's0_eternum_Position';
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  x?: Maybe<Scalars['u32']['output']>;
  y?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_PositionConnection = {
  __typename?: 's0_eternum_PositionConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_PositionEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_PositionEdge = {
  __typename?: 's0_eternum_PositionEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Position>;
};

export type S0_Eternum_PositionOrder = {
  direction: OrderDirection;
  field: S0_Eternum_PositionOrderField;
};

export enum S0_Eternum_PositionOrderField {
  EntityId = 'ENTITY_ID',
  X = 'X',
  Y = 'Y'
}

export type S0_Eternum_PositionWhereInput = {
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  x?: InputMaybe<Scalars['u32']['input']>;
  xEQ?: InputMaybe<Scalars['u32']['input']>;
  xGT?: InputMaybe<Scalars['u32']['input']>;
  xGTE?: InputMaybe<Scalars['u32']['input']>;
  xIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  xLIKE?: InputMaybe<Scalars['u32']['input']>;
  xLT?: InputMaybe<Scalars['u32']['input']>;
  xLTE?: InputMaybe<Scalars['u32']['input']>;
  xNEQ?: InputMaybe<Scalars['u32']['input']>;
  xNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  xNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  y?: InputMaybe<Scalars['u32']['input']>;
  yEQ?: InputMaybe<Scalars['u32']['input']>;
  yGT?: InputMaybe<Scalars['u32']['input']>;
  yGTE?: InputMaybe<Scalars['u32']['input']>;
  yIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  yLIKE?: InputMaybe<Scalars['u32']['input']>;
  yLT?: InputMaybe<Scalars['u32']['input']>;
  yLTE?: InputMaybe<Scalars['u32']['input']>;
  yNEQ?: InputMaybe<Scalars['u32']['input']>;
  yNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  yNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_Production = {
  __typename?: 's0_eternum_Production';
  building_count?: Maybe<Scalars['u8']['output']>;
  consumption_rate?: Maybe<Scalars['u128']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  input_finish_tick?: Maybe<Scalars['u64']['output']>;
  last_updated_tick?: Maybe<Scalars['u64']['output']>;
  production_rate?: Maybe<Scalars['u128']['output']>;
  resource_type?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_ProductionConfig = {
  __typename?: 's0_eternum_ProductionConfig';
  amount?: Maybe<Scalars['u128']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  input_count?: Maybe<Scalars['u128']['output']>;
  output_count?: Maybe<Scalars['u128']['output']>;
  resource_type?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_ProductionConfigConnection = {
  __typename?: 's0_eternum_ProductionConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ProductionConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ProductionConfigEdge = {
  __typename?: 's0_eternum_ProductionConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_ProductionConfig>;
};

export type S0_Eternum_ProductionConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ProductionConfigOrderField;
};

export enum S0_Eternum_ProductionConfigOrderField {
  Amount = 'AMOUNT',
  InputCount = 'INPUT_COUNT',
  OutputCount = 'OUTPUT_COUNT',
  ResourceType = 'RESOURCE_TYPE'
}

export type S0_Eternum_ProductionConfigWhereInput = {
  amount?: InputMaybe<Scalars['u128']['input']>;
  amountEQ?: InputMaybe<Scalars['u128']['input']>;
  amountGT?: InputMaybe<Scalars['u128']['input']>;
  amountGTE?: InputMaybe<Scalars['u128']['input']>;
  amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  amountLT?: InputMaybe<Scalars['u128']['input']>;
  amountLTE?: InputMaybe<Scalars['u128']['input']>;
  amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  input_count?: InputMaybe<Scalars['u128']['input']>;
  input_countEQ?: InputMaybe<Scalars['u128']['input']>;
  input_countGT?: InputMaybe<Scalars['u128']['input']>;
  input_countGTE?: InputMaybe<Scalars['u128']['input']>;
  input_countIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  input_countLIKE?: InputMaybe<Scalars['u128']['input']>;
  input_countLT?: InputMaybe<Scalars['u128']['input']>;
  input_countLTE?: InputMaybe<Scalars['u128']['input']>;
  input_countNEQ?: InputMaybe<Scalars['u128']['input']>;
  input_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  input_countNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  output_count?: InputMaybe<Scalars['u128']['input']>;
  output_countEQ?: InputMaybe<Scalars['u128']['input']>;
  output_countGT?: InputMaybe<Scalars['u128']['input']>;
  output_countGTE?: InputMaybe<Scalars['u128']['input']>;
  output_countIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  output_countLIKE?: InputMaybe<Scalars['u128']['input']>;
  output_countLT?: InputMaybe<Scalars['u128']['input']>;
  output_countLTE?: InputMaybe<Scalars['u128']['input']>;
  output_countNEQ?: InputMaybe<Scalars['u128']['input']>;
  output_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  output_countNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_type?: InputMaybe<Scalars['u8']['input']>;
  resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_ProductionConnection = {
  __typename?: 's0_eternum_ProductionConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ProductionEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ProductionDeadline = {
  __typename?: 's0_eternum_ProductionDeadline';
  deadline_tick?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
};

export type S0_Eternum_ProductionDeadlineConnection = {
  __typename?: 's0_eternum_ProductionDeadlineConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ProductionDeadlineEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ProductionDeadlineEdge = {
  __typename?: 's0_eternum_ProductionDeadlineEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_ProductionDeadline>;
};

export type S0_Eternum_ProductionDeadlineOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ProductionDeadlineOrderField;
};

export enum S0_Eternum_ProductionDeadlineOrderField {
  DeadlineTick = 'DEADLINE_TICK',
  EntityId = 'ENTITY_ID'
}

export type S0_Eternum_ProductionDeadlineWhereInput = {
  deadline_tick?: InputMaybe<Scalars['u64']['input']>;
  deadline_tickEQ?: InputMaybe<Scalars['u64']['input']>;
  deadline_tickGT?: InputMaybe<Scalars['u64']['input']>;
  deadline_tickGTE?: InputMaybe<Scalars['u64']['input']>;
  deadline_tickIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  deadline_tickLIKE?: InputMaybe<Scalars['u64']['input']>;
  deadline_tickLT?: InputMaybe<Scalars['u64']['input']>;
  deadline_tickLTE?: InputMaybe<Scalars['u64']['input']>;
  deadline_tickNEQ?: InputMaybe<Scalars['u64']['input']>;
  deadline_tickNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  deadline_tickNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_ProductionEdge = {
  __typename?: 's0_eternum_ProductionEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Production>;
};

export type S0_Eternum_ProductionInput = {
  __typename?: 's0_eternum_ProductionInput';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  index?: Maybe<Scalars['u8']['output']>;
  input_resource_amount?: Maybe<Scalars['u128']['output']>;
  input_resource_type?: Maybe<Scalars['u8']['output']>;
  output_resource_type?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_ProductionInputConnection = {
  __typename?: 's0_eternum_ProductionInputConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ProductionInputEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ProductionInputEdge = {
  __typename?: 's0_eternum_ProductionInputEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_ProductionInput>;
};

export type S0_Eternum_ProductionInputOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ProductionInputOrderField;
};

export enum S0_Eternum_ProductionInputOrderField {
  Index = 'INDEX',
  InputResourceAmount = 'INPUT_RESOURCE_AMOUNT',
  InputResourceType = 'INPUT_RESOURCE_TYPE',
  OutputResourceType = 'OUTPUT_RESOURCE_TYPE'
}

export type S0_Eternum_ProductionInputWhereInput = {
  index?: InputMaybe<Scalars['u8']['input']>;
  indexEQ?: InputMaybe<Scalars['u8']['input']>;
  indexGT?: InputMaybe<Scalars['u8']['input']>;
  indexGTE?: InputMaybe<Scalars['u8']['input']>;
  indexIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexLIKE?: InputMaybe<Scalars['u8']['input']>;
  indexLT?: InputMaybe<Scalars['u8']['input']>;
  indexLTE?: InputMaybe<Scalars['u8']['input']>;
  indexNEQ?: InputMaybe<Scalars['u8']['input']>;
  indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  input_resource_amount?: InputMaybe<Scalars['u128']['input']>;
  input_resource_amountEQ?: InputMaybe<Scalars['u128']['input']>;
  input_resource_amountGT?: InputMaybe<Scalars['u128']['input']>;
  input_resource_amountGTE?: InputMaybe<Scalars['u128']['input']>;
  input_resource_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  input_resource_amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  input_resource_amountLT?: InputMaybe<Scalars['u128']['input']>;
  input_resource_amountLTE?: InputMaybe<Scalars['u128']['input']>;
  input_resource_amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  input_resource_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  input_resource_amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  input_resource_type?: InputMaybe<Scalars['u8']['input']>;
  input_resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  input_resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  input_resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  input_resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  input_resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  input_resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  input_resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  input_resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  input_resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  input_resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  output_resource_type?: InputMaybe<Scalars['u8']['input']>;
  output_resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  output_resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  output_resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  output_resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  output_resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  output_resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  output_resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  output_resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  output_resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  output_resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_ProductionOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ProductionOrderField;
};

export enum S0_Eternum_ProductionOrderField {
  BuildingCount = 'BUILDING_COUNT',
  ConsumptionRate = 'CONSUMPTION_RATE',
  EntityId = 'ENTITY_ID',
  InputFinishTick = 'INPUT_FINISH_TICK',
  LastUpdatedTick = 'LAST_UPDATED_TICK',
  ProductionRate = 'PRODUCTION_RATE',
  ResourceType = 'RESOURCE_TYPE'
}

export type S0_Eternum_ProductionOutput = {
  __typename?: 's0_eternum_ProductionOutput';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  index?: Maybe<Scalars['u8']['output']>;
  input_resource_type?: Maybe<Scalars['u8']['output']>;
  output_resource_type?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_ProductionOutputConnection = {
  __typename?: 's0_eternum_ProductionOutputConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ProductionOutputEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ProductionOutputEdge = {
  __typename?: 's0_eternum_ProductionOutputEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_ProductionOutput>;
};

export type S0_Eternum_ProductionOutputOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ProductionOutputOrderField;
};

export enum S0_Eternum_ProductionOutputOrderField {
  Index = 'INDEX',
  InputResourceType = 'INPUT_RESOURCE_TYPE',
  OutputResourceType = 'OUTPUT_RESOURCE_TYPE'
}

export type S0_Eternum_ProductionOutputWhereInput = {
  index?: InputMaybe<Scalars['u8']['input']>;
  indexEQ?: InputMaybe<Scalars['u8']['input']>;
  indexGT?: InputMaybe<Scalars['u8']['input']>;
  indexGTE?: InputMaybe<Scalars['u8']['input']>;
  indexIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexLIKE?: InputMaybe<Scalars['u8']['input']>;
  indexLT?: InputMaybe<Scalars['u8']['input']>;
  indexLTE?: InputMaybe<Scalars['u8']['input']>;
  indexNEQ?: InputMaybe<Scalars['u8']['input']>;
  indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  input_resource_type?: InputMaybe<Scalars['u8']['input']>;
  input_resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  input_resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  input_resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  input_resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  input_resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  input_resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  input_resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  input_resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  input_resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  input_resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  output_resource_type?: InputMaybe<Scalars['u8']['input']>;
  output_resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  output_resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  output_resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  output_resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  output_resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  output_resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  output_resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  output_resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  output_resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  output_resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_ProductionWhereInput = {
  building_count?: InputMaybe<Scalars['u8']['input']>;
  building_countEQ?: InputMaybe<Scalars['u8']['input']>;
  building_countGT?: InputMaybe<Scalars['u8']['input']>;
  building_countGTE?: InputMaybe<Scalars['u8']['input']>;
  building_countIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  building_countLIKE?: InputMaybe<Scalars['u8']['input']>;
  building_countLT?: InputMaybe<Scalars['u8']['input']>;
  building_countLTE?: InputMaybe<Scalars['u8']['input']>;
  building_countNEQ?: InputMaybe<Scalars['u8']['input']>;
  building_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  building_countNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  consumption_rate?: InputMaybe<Scalars['u128']['input']>;
  consumption_rateEQ?: InputMaybe<Scalars['u128']['input']>;
  consumption_rateGT?: InputMaybe<Scalars['u128']['input']>;
  consumption_rateGTE?: InputMaybe<Scalars['u128']['input']>;
  consumption_rateIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  consumption_rateLIKE?: InputMaybe<Scalars['u128']['input']>;
  consumption_rateLT?: InputMaybe<Scalars['u128']['input']>;
  consumption_rateLTE?: InputMaybe<Scalars['u128']['input']>;
  consumption_rateNEQ?: InputMaybe<Scalars['u128']['input']>;
  consumption_rateNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  consumption_rateNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  input_finish_tick?: InputMaybe<Scalars['u64']['input']>;
  input_finish_tickEQ?: InputMaybe<Scalars['u64']['input']>;
  input_finish_tickGT?: InputMaybe<Scalars['u64']['input']>;
  input_finish_tickGTE?: InputMaybe<Scalars['u64']['input']>;
  input_finish_tickIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  input_finish_tickLIKE?: InputMaybe<Scalars['u64']['input']>;
  input_finish_tickLT?: InputMaybe<Scalars['u64']['input']>;
  input_finish_tickLTE?: InputMaybe<Scalars['u64']['input']>;
  input_finish_tickNEQ?: InputMaybe<Scalars['u64']['input']>;
  input_finish_tickNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  input_finish_tickNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  last_updated_tick?: InputMaybe<Scalars['u64']['input']>;
  last_updated_tickEQ?: InputMaybe<Scalars['u64']['input']>;
  last_updated_tickGT?: InputMaybe<Scalars['u64']['input']>;
  last_updated_tickGTE?: InputMaybe<Scalars['u64']['input']>;
  last_updated_tickIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  last_updated_tickLIKE?: InputMaybe<Scalars['u64']['input']>;
  last_updated_tickLT?: InputMaybe<Scalars['u64']['input']>;
  last_updated_tickLTE?: InputMaybe<Scalars['u64']['input']>;
  last_updated_tickNEQ?: InputMaybe<Scalars['u64']['input']>;
  last_updated_tickNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  last_updated_tickNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  production_rate?: InputMaybe<Scalars['u128']['input']>;
  production_rateEQ?: InputMaybe<Scalars['u128']['input']>;
  production_rateGT?: InputMaybe<Scalars['u128']['input']>;
  production_rateGTE?: InputMaybe<Scalars['u128']['input']>;
  production_rateIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  production_rateLIKE?: InputMaybe<Scalars['u128']['input']>;
  production_rateLT?: InputMaybe<Scalars['u128']['input']>;
  production_rateLTE?: InputMaybe<Scalars['u128']['input']>;
  production_rateNEQ?: InputMaybe<Scalars['u128']['input']>;
  production_rateNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  production_rateNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_type?: InputMaybe<Scalars['u8']['input']>;
  resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_Progress = {
  __typename?: 's0_eternum_Progress';
  amount?: Maybe<Scalars['u128']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  hyperstructure_entity_id?: Maybe<Scalars['u32']['output']>;
  resource_type?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_ProgressConnection = {
  __typename?: 's0_eternum_ProgressConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ProgressEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ProgressEdge = {
  __typename?: 's0_eternum_ProgressEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Progress>;
};

export type S0_Eternum_ProgressOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ProgressOrderField;
};

export enum S0_Eternum_ProgressOrderField {
  Amount = 'AMOUNT',
  HyperstructureEntityId = 'HYPERSTRUCTURE_ENTITY_ID',
  ResourceType = 'RESOURCE_TYPE'
}

export type S0_Eternum_ProgressWhereInput = {
  amount?: InputMaybe<Scalars['u128']['input']>;
  amountEQ?: InputMaybe<Scalars['u128']['input']>;
  amountGT?: InputMaybe<Scalars['u128']['input']>;
  amountGTE?: InputMaybe<Scalars['u128']['input']>;
  amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  amountLT?: InputMaybe<Scalars['u128']['input']>;
  amountLTE?: InputMaybe<Scalars['u128']['input']>;
  amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  hyperstructure_entity_id?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  hyperstructure_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  hyperstructure_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_type?: InputMaybe<Scalars['u8']['input']>;
  resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_Protectee = {
  __typename?: 's0_eternum_Protectee';
  army_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  protectee_id?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_ProtecteeConnection = {
  __typename?: 's0_eternum_ProtecteeConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ProtecteeEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ProtecteeEdge = {
  __typename?: 's0_eternum_ProtecteeEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Protectee>;
};

export type S0_Eternum_ProtecteeOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ProtecteeOrderField;
};

export enum S0_Eternum_ProtecteeOrderField {
  ArmyId = 'ARMY_ID',
  ProtecteeId = 'PROTECTEE_ID'
}

export type S0_Eternum_ProtecteeWhereInput = {
  army_id?: InputMaybe<Scalars['u32']['input']>;
  army_idEQ?: InputMaybe<Scalars['u32']['input']>;
  army_idGT?: InputMaybe<Scalars['u32']['input']>;
  army_idGTE?: InputMaybe<Scalars['u32']['input']>;
  army_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  army_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  army_idLT?: InputMaybe<Scalars['u32']['input']>;
  army_idLTE?: InputMaybe<Scalars['u32']['input']>;
  army_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  army_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  army_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  protectee_id?: InputMaybe<Scalars['u32']['input']>;
  protectee_idEQ?: InputMaybe<Scalars['u32']['input']>;
  protectee_idGT?: InputMaybe<Scalars['u32']['input']>;
  protectee_idGTE?: InputMaybe<Scalars['u32']['input']>;
  protectee_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  protectee_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  protectee_idLT?: InputMaybe<Scalars['u32']['input']>;
  protectee_idLTE?: InputMaybe<Scalars['u32']['input']>;
  protectee_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  protectee_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  protectee_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_Protector = {
  __typename?: 's0_eternum_Protector';
  army_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
};

export type S0_Eternum_ProtectorConnection = {
  __typename?: 's0_eternum_ProtectorConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ProtectorEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ProtectorEdge = {
  __typename?: 's0_eternum_ProtectorEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Protector>;
};

export type S0_Eternum_ProtectorOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ProtectorOrderField;
};

export enum S0_Eternum_ProtectorOrderField {
  ArmyId = 'ARMY_ID',
  EntityId = 'ENTITY_ID'
}

export type S0_Eternum_ProtectorWhereInput = {
  army_id?: InputMaybe<Scalars['u32']['input']>;
  army_idEQ?: InputMaybe<Scalars['u32']['input']>;
  army_idGT?: InputMaybe<Scalars['u32']['input']>;
  army_idGTE?: InputMaybe<Scalars['u32']['input']>;
  army_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  army_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  army_idLT?: InputMaybe<Scalars['u32']['input']>;
  army_idLTE?: InputMaybe<Scalars['u32']['input']>;
  army_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  army_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  army_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_Quantity = {
  __typename?: 's0_eternum_Quantity';
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  value?: Maybe<Scalars['u128']['output']>;
};

export type S0_Eternum_QuantityConnection = {
  __typename?: 's0_eternum_QuantityConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_QuantityEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_QuantityEdge = {
  __typename?: 's0_eternum_QuantityEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Quantity>;
};

export type S0_Eternum_QuantityOrder = {
  direction: OrderDirection;
  field: S0_Eternum_QuantityOrderField;
};

export enum S0_Eternum_QuantityOrderField {
  EntityId = 'ENTITY_ID',
  Value = 'VALUE'
}

export type S0_Eternum_QuantityTracker = {
  __typename?: 's0_eternum_QuantityTracker';
  count?: Maybe<Scalars['u128']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['felt252']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
};

export type S0_Eternum_QuantityTrackerConnection = {
  __typename?: 's0_eternum_QuantityTrackerConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_QuantityTrackerEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_QuantityTrackerEdge = {
  __typename?: 's0_eternum_QuantityTrackerEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_QuantityTracker>;
};

export type S0_Eternum_QuantityTrackerOrder = {
  direction: OrderDirection;
  field: S0_Eternum_QuantityTrackerOrderField;
};

export enum S0_Eternum_QuantityTrackerOrderField {
  Count = 'COUNT',
  EntityId = 'ENTITY_ID'
}

export type S0_Eternum_QuantityTrackerWhereInput = {
  count?: InputMaybe<Scalars['u128']['input']>;
  countEQ?: InputMaybe<Scalars['u128']['input']>;
  countGT?: InputMaybe<Scalars['u128']['input']>;
  countGTE?: InputMaybe<Scalars['u128']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u128']['input']>;
  countLT?: InputMaybe<Scalars['u128']['input']>;
  countLTE?: InputMaybe<Scalars['u128']['input']>;
  countNEQ?: InputMaybe<Scalars['u128']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  entity_id?: InputMaybe<Scalars['felt252']['input']>;
  entity_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  entity_idGT?: InputMaybe<Scalars['felt252']['input']>;
  entity_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  entity_idLT?: InputMaybe<Scalars['felt252']['input']>;
  entity_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type S0_Eternum_QuantityWhereInput = {
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  value?: InputMaybe<Scalars['u128']['input']>;
  valueEQ?: InputMaybe<Scalars['u128']['input']>;
  valueGT?: InputMaybe<Scalars['u128']['input']>;
  valueGTE?: InputMaybe<Scalars['u128']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['u128']['input']>;
  valueLT?: InputMaybe<Scalars['u128']['input']>;
  valueLTE?: InputMaybe<Scalars['u128']['input']>;
  valueNEQ?: InputMaybe<Scalars['u128']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type S0_Eternum_Quest = {
  __typename?: 's0_eternum_Quest';
  completed?: Maybe<Scalars['bool']['output']>;
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
};

export type S0_Eternum_QuestBonus = {
  __typename?: 's0_eternum_QuestBonus';
  claimed?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  resource_type?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_QuestBonusConnection = {
  __typename?: 's0_eternum_QuestBonusConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_QuestBonusEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_QuestBonusEdge = {
  __typename?: 's0_eternum_QuestBonusEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_QuestBonus>;
};

export type S0_Eternum_QuestBonusOrder = {
  direction: OrderDirection;
  field: S0_Eternum_QuestBonusOrderField;
};

export enum S0_Eternum_QuestBonusOrderField {
  Claimed = 'CLAIMED',
  EntityId = 'ENTITY_ID',
  ResourceType = 'RESOURCE_TYPE'
}

export type S0_Eternum_QuestBonusWhereInput = {
  claimed?: InputMaybe<Scalars['bool']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_type?: InputMaybe<Scalars['u8']['input']>;
  resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_QuestConfig = {
  __typename?: 's0_eternum_QuestConfig';
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  production_material_multiplier?: Maybe<Scalars['u16']['output']>;
};

export type S0_Eternum_QuestConfigConnection = {
  __typename?: 's0_eternum_QuestConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_QuestConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_QuestConfigEdge = {
  __typename?: 's0_eternum_QuestConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_QuestConfig>;
};

export type S0_Eternum_QuestConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_QuestConfigOrderField;
};

export enum S0_Eternum_QuestConfigOrderField {
  ConfigId = 'CONFIG_ID',
  ProductionMaterialMultiplier = 'PRODUCTION_MATERIAL_MULTIPLIER'
}

export type S0_Eternum_QuestConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  production_material_multiplier?: InputMaybe<Scalars['u16']['input']>;
  production_material_multiplierEQ?: InputMaybe<Scalars['u16']['input']>;
  production_material_multiplierGT?: InputMaybe<Scalars['u16']['input']>;
  production_material_multiplierGTE?: InputMaybe<Scalars['u16']['input']>;
  production_material_multiplierIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  production_material_multiplierLIKE?: InputMaybe<Scalars['u16']['input']>;
  production_material_multiplierLT?: InputMaybe<Scalars['u16']['input']>;
  production_material_multiplierLTE?: InputMaybe<Scalars['u16']['input']>;
  production_material_multiplierNEQ?: InputMaybe<Scalars['u16']['input']>;
  production_material_multiplierNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  production_material_multiplierNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
};

export type S0_Eternum_QuestConnection = {
  __typename?: 's0_eternum_QuestConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_QuestEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_QuestEdge = {
  __typename?: 's0_eternum_QuestEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Quest>;
};

export type S0_Eternum_QuestOrder = {
  direction: OrderDirection;
  field: S0_Eternum_QuestOrderField;
};

export enum S0_Eternum_QuestOrderField {
  Completed = 'COMPLETED',
  ConfigId = 'CONFIG_ID',
  EntityId = 'ENTITY_ID'
}

export type S0_Eternum_QuestRewardConfig = {
  __typename?: 's0_eternum_QuestRewardConfig';
  detached_resource_count?: Maybe<Scalars['u32']['output']>;
  detached_resource_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  quest_id?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_QuestRewardConfigConnection = {
  __typename?: 's0_eternum_QuestRewardConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_QuestRewardConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_QuestRewardConfigEdge = {
  __typename?: 's0_eternum_QuestRewardConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_QuestRewardConfig>;
};

export type S0_Eternum_QuestRewardConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_QuestRewardConfigOrderField;
};

export enum S0_Eternum_QuestRewardConfigOrderField {
  DetachedResourceCount = 'DETACHED_RESOURCE_COUNT',
  DetachedResourceId = 'DETACHED_RESOURCE_ID',
  QuestId = 'QUEST_ID'
}

export type S0_Eternum_QuestRewardConfigWhereInput = {
  detached_resource_count?: InputMaybe<Scalars['u32']['input']>;
  detached_resource_countEQ?: InputMaybe<Scalars['u32']['input']>;
  detached_resource_countGT?: InputMaybe<Scalars['u32']['input']>;
  detached_resource_countGTE?: InputMaybe<Scalars['u32']['input']>;
  detached_resource_countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  detached_resource_countLIKE?: InputMaybe<Scalars['u32']['input']>;
  detached_resource_countLT?: InputMaybe<Scalars['u32']['input']>;
  detached_resource_countLTE?: InputMaybe<Scalars['u32']['input']>;
  detached_resource_countNEQ?: InputMaybe<Scalars['u32']['input']>;
  detached_resource_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  detached_resource_countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  detached_resource_id?: InputMaybe<Scalars['u32']['input']>;
  detached_resource_idEQ?: InputMaybe<Scalars['u32']['input']>;
  detached_resource_idGT?: InputMaybe<Scalars['u32']['input']>;
  detached_resource_idGTE?: InputMaybe<Scalars['u32']['input']>;
  detached_resource_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  detached_resource_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  detached_resource_idLT?: InputMaybe<Scalars['u32']['input']>;
  detached_resource_idLTE?: InputMaybe<Scalars['u32']['input']>;
  detached_resource_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  detached_resource_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  detached_resource_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  quest_id?: InputMaybe<Scalars['u32']['input']>;
  quest_idEQ?: InputMaybe<Scalars['u32']['input']>;
  quest_idGT?: InputMaybe<Scalars['u32']['input']>;
  quest_idGTE?: InputMaybe<Scalars['u32']['input']>;
  quest_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  quest_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  quest_idLT?: InputMaybe<Scalars['u32']['input']>;
  quest_idLTE?: InputMaybe<Scalars['u32']['input']>;
  quest_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  quest_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  quest_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_QuestWhereInput = {
  completed?: InputMaybe<Scalars['bool']['input']>;
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_Realm = {
  __typename?: 's0_eternum_Realm';
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  has_wonder?: Maybe<Scalars['bool']['output']>;
  level?: Maybe<Scalars['u8']['output']>;
  order?: Maybe<Scalars['u8']['output']>;
  produced_resources?: Maybe<Scalars['u128']['output']>;
  realm_id?: Maybe<Scalars['u32']['output']>;
  settler_address?: Maybe<Scalars['ContractAddress']['output']>;
};

export type S0_Eternum_RealmConnection = {
  __typename?: 's0_eternum_RealmConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_RealmEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_RealmEdge = {
  __typename?: 's0_eternum_RealmEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Realm>;
};

export type S0_Eternum_RealmLevelConfig = {
  __typename?: 's0_eternum_RealmLevelConfig';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  level?: Maybe<Scalars['u8']['output']>;
  required_resource_count?: Maybe<Scalars['u8']['output']>;
  required_resources_id?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_RealmLevelConfigConnection = {
  __typename?: 's0_eternum_RealmLevelConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_RealmLevelConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_RealmLevelConfigEdge = {
  __typename?: 's0_eternum_RealmLevelConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_RealmLevelConfig>;
};

export type S0_Eternum_RealmLevelConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_RealmLevelConfigOrderField;
};

export enum S0_Eternum_RealmLevelConfigOrderField {
  Level = 'LEVEL',
  RequiredResourcesId = 'REQUIRED_RESOURCES_ID',
  RequiredResourceCount = 'REQUIRED_RESOURCE_COUNT'
}

export type S0_Eternum_RealmLevelConfigWhereInput = {
  level?: InputMaybe<Scalars['u8']['input']>;
  levelEQ?: InputMaybe<Scalars['u8']['input']>;
  levelGT?: InputMaybe<Scalars['u8']['input']>;
  levelGTE?: InputMaybe<Scalars['u8']['input']>;
  levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  levelLT?: InputMaybe<Scalars['u8']['input']>;
  levelLTE?: InputMaybe<Scalars['u8']['input']>;
  levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  required_resource_count?: InputMaybe<Scalars['u8']['input']>;
  required_resource_countEQ?: InputMaybe<Scalars['u8']['input']>;
  required_resource_countGT?: InputMaybe<Scalars['u8']['input']>;
  required_resource_countGTE?: InputMaybe<Scalars['u8']['input']>;
  required_resource_countIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  required_resource_countLIKE?: InputMaybe<Scalars['u8']['input']>;
  required_resource_countLT?: InputMaybe<Scalars['u8']['input']>;
  required_resource_countLTE?: InputMaybe<Scalars['u8']['input']>;
  required_resource_countNEQ?: InputMaybe<Scalars['u8']['input']>;
  required_resource_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  required_resource_countNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  required_resources_id?: InputMaybe<Scalars['u32']['input']>;
  required_resources_idEQ?: InputMaybe<Scalars['u32']['input']>;
  required_resources_idGT?: InputMaybe<Scalars['u32']['input']>;
  required_resources_idGTE?: InputMaybe<Scalars['u32']['input']>;
  required_resources_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  required_resources_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  required_resources_idLT?: InputMaybe<Scalars['u32']['input']>;
  required_resources_idLTE?: InputMaybe<Scalars['u32']['input']>;
  required_resources_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  required_resources_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  required_resources_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_RealmMaxLevelConfig = {
  __typename?: 's0_eternum_RealmMaxLevelConfig';
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  max_level?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_RealmMaxLevelConfigConnection = {
  __typename?: 's0_eternum_RealmMaxLevelConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_RealmMaxLevelConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_RealmMaxLevelConfigEdge = {
  __typename?: 's0_eternum_RealmMaxLevelConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_RealmMaxLevelConfig>;
};

export type S0_Eternum_RealmMaxLevelConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_RealmMaxLevelConfigOrderField;
};

export enum S0_Eternum_RealmMaxLevelConfigOrderField {
  ConfigId = 'CONFIG_ID',
  MaxLevel = 'MAX_LEVEL'
}

export type S0_Eternum_RealmMaxLevelConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  max_level?: InputMaybe<Scalars['u8']['input']>;
  max_levelEQ?: InputMaybe<Scalars['u8']['input']>;
  max_levelGT?: InputMaybe<Scalars['u8']['input']>;
  max_levelGTE?: InputMaybe<Scalars['u8']['input']>;
  max_levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_levelLT?: InputMaybe<Scalars['u8']['input']>;
  max_levelLTE?: InputMaybe<Scalars['u8']['input']>;
  max_levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  max_levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  max_levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_RealmOrder = {
  direction: OrderDirection;
  field: S0_Eternum_RealmOrderField;
};

export enum S0_Eternum_RealmOrderField {
  EntityId = 'ENTITY_ID',
  HasWonder = 'HAS_WONDER',
  Level = 'LEVEL',
  Order = 'ORDER',
  ProducedResources = 'PRODUCED_RESOURCES',
  RealmId = 'REALM_ID',
  SettlerAddress = 'SETTLER_ADDRESS'
}

export type S0_Eternum_RealmWhereInput = {
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  has_wonder?: InputMaybe<Scalars['bool']['input']>;
  level?: InputMaybe<Scalars['u8']['input']>;
  levelEQ?: InputMaybe<Scalars['u8']['input']>;
  levelGT?: InputMaybe<Scalars['u8']['input']>;
  levelGTE?: InputMaybe<Scalars['u8']['input']>;
  levelIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelLIKE?: InputMaybe<Scalars['u8']['input']>;
  levelLT?: InputMaybe<Scalars['u8']['input']>;
  levelLTE?: InputMaybe<Scalars['u8']['input']>;
  levelNEQ?: InputMaybe<Scalars['u8']['input']>;
  levelNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  levelNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  order?: InputMaybe<Scalars['u8']['input']>;
  orderEQ?: InputMaybe<Scalars['u8']['input']>;
  orderGT?: InputMaybe<Scalars['u8']['input']>;
  orderGTE?: InputMaybe<Scalars['u8']['input']>;
  orderIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  orderLIKE?: InputMaybe<Scalars['u8']['input']>;
  orderLT?: InputMaybe<Scalars['u8']['input']>;
  orderLTE?: InputMaybe<Scalars['u8']['input']>;
  orderNEQ?: InputMaybe<Scalars['u8']['input']>;
  orderNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  orderNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  produced_resources?: InputMaybe<Scalars['u128']['input']>;
  produced_resourcesEQ?: InputMaybe<Scalars['u128']['input']>;
  produced_resourcesGT?: InputMaybe<Scalars['u128']['input']>;
  produced_resourcesGTE?: InputMaybe<Scalars['u128']['input']>;
  produced_resourcesIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  produced_resourcesLIKE?: InputMaybe<Scalars['u128']['input']>;
  produced_resourcesLT?: InputMaybe<Scalars['u128']['input']>;
  produced_resourcesLTE?: InputMaybe<Scalars['u128']['input']>;
  produced_resourcesNEQ?: InputMaybe<Scalars['u128']['input']>;
  produced_resourcesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  produced_resourcesNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  realm_id?: InputMaybe<Scalars['u32']['input']>;
  realm_idEQ?: InputMaybe<Scalars['u32']['input']>;
  realm_idGT?: InputMaybe<Scalars['u32']['input']>;
  realm_idGTE?: InputMaybe<Scalars['u32']['input']>;
  realm_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  realm_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  realm_idLT?: InputMaybe<Scalars['u32']['input']>;
  realm_idLTE?: InputMaybe<Scalars['u32']['input']>;
  realm_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  realm_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  realm_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  settler_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  settler_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  settler_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  settler_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  settler_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  settler_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  settler_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  settler_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  settler_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  settler_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  settler_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
};

export type S0_Eternum_Resource = {
  __typename?: 's0_eternum_Resource';
  balance?: Maybe<Scalars['u128']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  resource_type?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_ResourceAllowance = {
  __typename?: 's0_eternum_ResourceAllowance';
  amount?: Maybe<Scalars['u128']['output']>;
  approved_entity_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  owner_entity_id?: Maybe<Scalars['u32']['output']>;
  resource_type?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_ResourceAllowanceConnection = {
  __typename?: 's0_eternum_ResourceAllowanceConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ResourceAllowanceEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ResourceAllowanceEdge = {
  __typename?: 's0_eternum_ResourceAllowanceEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_ResourceAllowance>;
};

export type S0_Eternum_ResourceAllowanceOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ResourceAllowanceOrderField;
};

export enum S0_Eternum_ResourceAllowanceOrderField {
  Amount = 'AMOUNT',
  ApprovedEntityId = 'APPROVED_ENTITY_ID',
  OwnerEntityId = 'OWNER_ENTITY_ID',
  ResourceType = 'RESOURCE_TYPE'
}

export type S0_Eternum_ResourceAllowanceWhereInput = {
  amount?: InputMaybe<Scalars['u128']['input']>;
  amountEQ?: InputMaybe<Scalars['u128']['input']>;
  amountGT?: InputMaybe<Scalars['u128']['input']>;
  amountGTE?: InputMaybe<Scalars['u128']['input']>;
  amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  amountLT?: InputMaybe<Scalars['u128']['input']>;
  amountLTE?: InputMaybe<Scalars['u128']['input']>;
  amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  approved_entity_id?: InputMaybe<Scalars['u32']['input']>;
  approved_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  approved_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  approved_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  approved_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  approved_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  approved_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  approved_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  approved_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  approved_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  approved_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  owner_entity_id?: InputMaybe<Scalars['u32']['input']>;
  owner_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  owner_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  owner_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  owner_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  owner_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  owner_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  owner_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  owner_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  owner_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  owner_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_type?: InputMaybe<Scalars['u8']['input']>;
  resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_ResourceBridgeConfig = {
  __typename?: 's0_eternum_ResourceBridgeConfig';
  config_id?: Maybe<Scalars['u32']['output']>;
  deposit_paused?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  withdraw_paused?: Maybe<Scalars['bool']['output']>;
};

export type S0_Eternum_ResourceBridgeConfigConnection = {
  __typename?: 's0_eternum_ResourceBridgeConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ResourceBridgeConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ResourceBridgeConfigEdge = {
  __typename?: 's0_eternum_ResourceBridgeConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_ResourceBridgeConfig>;
};

export type S0_Eternum_ResourceBridgeConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ResourceBridgeConfigOrderField;
};

export enum S0_Eternum_ResourceBridgeConfigOrderField {
  ConfigId = 'CONFIG_ID',
  DepositPaused = 'DEPOSIT_PAUSED',
  WithdrawPaused = 'WITHDRAW_PAUSED'
}

export type S0_Eternum_ResourceBridgeConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  deposit_paused?: InputMaybe<Scalars['bool']['input']>;
  withdraw_paused?: InputMaybe<Scalars['bool']['input']>;
};

export type S0_Eternum_ResourceBridgeFeeSplitConfig = {
  __typename?: 's0_eternum_ResourceBridgeFeeSplitConfig';
  client_fee_on_dpt_percent?: Maybe<Scalars['u16']['output']>;
  client_fee_on_wtdr_percent?: Maybe<Scalars['u16']['output']>;
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  max_bank_fee_dpt_percent?: Maybe<Scalars['u16']['output']>;
  max_bank_fee_wtdr_percent?: Maybe<Scalars['u16']['output']>;
  season_pool_fee_on_dpt_percent?: Maybe<Scalars['u16']['output']>;
  season_pool_fee_on_wtdr_percent?: Maybe<Scalars['u16']['output']>;
  season_pool_fee_recipient?: Maybe<Scalars['ContractAddress']['output']>;
  velords_fee_on_dpt_percent?: Maybe<Scalars['u16']['output']>;
  velords_fee_on_wtdr_percent?: Maybe<Scalars['u16']['output']>;
  velords_fee_recipient?: Maybe<Scalars['ContractAddress']['output']>;
};

export type S0_Eternum_ResourceBridgeFeeSplitConfigConnection = {
  __typename?: 's0_eternum_ResourceBridgeFeeSplitConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ResourceBridgeFeeSplitConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ResourceBridgeFeeSplitConfigEdge = {
  __typename?: 's0_eternum_ResourceBridgeFeeSplitConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_ResourceBridgeFeeSplitConfig>;
};

export type S0_Eternum_ResourceBridgeFeeSplitConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ResourceBridgeFeeSplitConfigOrderField;
};

export enum S0_Eternum_ResourceBridgeFeeSplitConfigOrderField {
  ClientFeeOnDptPercent = 'CLIENT_FEE_ON_DPT_PERCENT',
  ClientFeeOnWtdrPercent = 'CLIENT_FEE_ON_WTDR_PERCENT',
  ConfigId = 'CONFIG_ID',
  MaxBankFeeDptPercent = 'MAX_BANK_FEE_DPT_PERCENT',
  MaxBankFeeWtdrPercent = 'MAX_BANK_FEE_WTDR_PERCENT',
  SeasonPoolFeeOnDptPercent = 'SEASON_POOL_FEE_ON_DPT_PERCENT',
  SeasonPoolFeeOnWtdrPercent = 'SEASON_POOL_FEE_ON_WTDR_PERCENT',
  SeasonPoolFeeRecipient = 'SEASON_POOL_FEE_RECIPIENT',
  VelordsFeeOnDptPercent = 'VELORDS_FEE_ON_DPT_PERCENT',
  VelordsFeeOnWtdrPercent = 'VELORDS_FEE_ON_WTDR_PERCENT',
  VelordsFeeRecipient = 'VELORDS_FEE_RECIPIENT'
}

export type S0_Eternum_ResourceBridgeFeeSplitConfigWhereInput = {
  client_fee_on_dpt_percent?: InputMaybe<Scalars['u16']['input']>;
  client_fee_on_dpt_percentEQ?: InputMaybe<Scalars['u16']['input']>;
  client_fee_on_dpt_percentGT?: InputMaybe<Scalars['u16']['input']>;
  client_fee_on_dpt_percentGTE?: InputMaybe<Scalars['u16']['input']>;
  client_fee_on_dpt_percentIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  client_fee_on_dpt_percentLIKE?: InputMaybe<Scalars['u16']['input']>;
  client_fee_on_dpt_percentLT?: InputMaybe<Scalars['u16']['input']>;
  client_fee_on_dpt_percentLTE?: InputMaybe<Scalars['u16']['input']>;
  client_fee_on_dpt_percentNEQ?: InputMaybe<Scalars['u16']['input']>;
  client_fee_on_dpt_percentNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  client_fee_on_dpt_percentNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  client_fee_on_wtdr_percent?: InputMaybe<Scalars['u16']['input']>;
  client_fee_on_wtdr_percentEQ?: InputMaybe<Scalars['u16']['input']>;
  client_fee_on_wtdr_percentGT?: InputMaybe<Scalars['u16']['input']>;
  client_fee_on_wtdr_percentGTE?: InputMaybe<Scalars['u16']['input']>;
  client_fee_on_wtdr_percentIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  client_fee_on_wtdr_percentLIKE?: InputMaybe<Scalars['u16']['input']>;
  client_fee_on_wtdr_percentLT?: InputMaybe<Scalars['u16']['input']>;
  client_fee_on_wtdr_percentLTE?: InputMaybe<Scalars['u16']['input']>;
  client_fee_on_wtdr_percentNEQ?: InputMaybe<Scalars['u16']['input']>;
  client_fee_on_wtdr_percentNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  client_fee_on_wtdr_percentNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  max_bank_fee_dpt_percent?: InputMaybe<Scalars['u16']['input']>;
  max_bank_fee_dpt_percentEQ?: InputMaybe<Scalars['u16']['input']>;
  max_bank_fee_dpt_percentGT?: InputMaybe<Scalars['u16']['input']>;
  max_bank_fee_dpt_percentGTE?: InputMaybe<Scalars['u16']['input']>;
  max_bank_fee_dpt_percentIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  max_bank_fee_dpt_percentLIKE?: InputMaybe<Scalars['u16']['input']>;
  max_bank_fee_dpt_percentLT?: InputMaybe<Scalars['u16']['input']>;
  max_bank_fee_dpt_percentLTE?: InputMaybe<Scalars['u16']['input']>;
  max_bank_fee_dpt_percentNEQ?: InputMaybe<Scalars['u16']['input']>;
  max_bank_fee_dpt_percentNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  max_bank_fee_dpt_percentNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  max_bank_fee_wtdr_percent?: InputMaybe<Scalars['u16']['input']>;
  max_bank_fee_wtdr_percentEQ?: InputMaybe<Scalars['u16']['input']>;
  max_bank_fee_wtdr_percentGT?: InputMaybe<Scalars['u16']['input']>;
  max_bank_fee_wtdr_percentGTE?: InputMaybe<Scalars['u16']['input']>;
  max_bank_fee_wtdr_percentIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  max_bank_fee_wtdr_percentLIKE?: InputMaybe<Scalars['u16']['input']>;
  max_bank_fee_wtdr_percentLT?: InputMaybe<Scalars['u16']['input']>;
  max_bank_fee_wtdr_percentLTE?: InputMaybe<Scalars['u16']['input']>;
  max_bank_fee_wtdr_percentNEQ?: InputMaybe<Scalars['u16']['input']>;
  max_bank_fee_wtdr_percentNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  max_bank_fee_wtdr_percentNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_dpt_percent?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_dpt_percentEQ?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_dpt_percentGT?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_dpt_percentGTE?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_dpt_percentIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  season_pool_fee_on_dpt_percentLIKE?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_dpt_percentLT?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_dpt_percentLTE?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_dpt_percentNEQ?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_dpt_percentNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  season_pool_fee_on_dpt_percentNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_wtdr_percent?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_wtdr_percentEQ?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_wtdr_percentGT?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_wtdr_percentGTE?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_wtdr_percentIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  season_pool_fee_on_wtdr_percentLIKE?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_wtdr_percentLT?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_wtdr_percentLTE?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_wtdr_percentNEQ?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_on_wtdr_percentNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  season_pool_fee_on_wtdr_percentNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  season_pool_fee_recipient?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_pool_fee_recipientEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_pool_fee_recipientGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_pool_fee_recipientGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_pool_fee_recipientIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  season_pool_fee_recipientLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_pool_fee_recipientLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_pool_fee_recipientLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_pool_fee_recipientNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_pool_fee_recipientNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  season_pool_fee_recipientNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  velords_fee_on_dpt_percent?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_on_dpt_percentEQ?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_on_dpt_percentGT?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_on_dpt_percentGTE?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_on_dpt_percentIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  velords_fee_on_dpt_percentLIKE?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_on_dpt_percentLT?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_on_dpt_percentLTE?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_on_dpt_percentNEQ?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_on_dpt_percentNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  velords_fee_on_dpt_percentNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_on_wtdr_percent?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_on_wtdr_percentEQ?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_on_wtdr_percentGT?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_on_wtdr_percentGTE?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_on_wtdr_percentIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  velords_fee_on_wtdr_percentLIKE?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_on_wtdr_percentLT?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_on_wtdr_percentLTE?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_on_wtdr_percentNEQ?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_on_wtdr_percentNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  velords_fee_on_wtdr_percentNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  velords_fee_recipient?: InputMaybe<Scalars['ContractAddress']['input']>;
  velords_fee_recipientEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  velords_fee_recipientGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  velords_fee_recipientGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  velords_fee_recipientIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  velords_fee_recipientLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  velords_fee_recipientLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  velords_fee_recipientLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  velords_fee_recipientNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  velords_fee_recipientNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  velords_fee_recipientNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
};

export type S0_Eternum_ResourceBridgeWhitelistConfig = {
  __typename?: 's0_eternum_ResourceBridgeWhitelistConfig';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  resource_type?: Maybe<Scalars['u8']['output']>;
  token?: Maybe<Scalars['ContractAddress']['output']>;
};

export type S0_Eternum_ResourceBridgeWhitelistConfigConnection = {
  __typename?: 's0_eternum_ResourceBridgeWhitelistConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ResourceBridgeWhitelistConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ResourceBridgeWhitelistConfigEdge = {
  __typename?: 's0_eternum_ResourceBridgeWhitelistConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_ResourceBridgeWhitelistConfig>;
};

export type S0_Eternum_ResourceBridgeWhitelistConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ResourceBridgeWhitelistConfigOrderField;
};

export enum S0_Eternum_ResourceBridgeWhitelistConfigOrderField {
  ResourceType = 'RESOURCE_TYPE',
  Token = 'TOKEN'
}

export type S0_Eternum_ResourceBridgeWhitelistConfigWhereInput = {
  resource_type?: InputMaybe<Scalars['u8']['input']>;
  resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  token?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  tokenLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  tokenNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  tokenNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
};

export type S0_Eternum_ResourceConnection = {
  __typename?: 's0_eternum_ResourceConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ResourceEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ResourceCost = {
  __typename?: 's0_eternum_ResourceCost';
  amount?: Maybe<Scalars['u128']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  index?: Maybe<Scalars['u32']['output']>;
  resource_type?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_ResourceCostConnection = {
  __typename?: 's0_eternum_ResourceCostConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ResourceCostEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ResourceCostEdge = {
  __typename?: 's0_eternum_ResourceCostEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_ResourceCost>;
};

export type S0_Eternum_ResourceCostOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ResourceCostOrderField;
};

export enum S0_Eternum_ResourceCostOrderField {
  Amount = 'AMOUNT',
  EntityId = 'ENTITY_ID',
  Index = 'INDEX',
  ResourceType = 'RESOURCE_TYPE'
}

export type S0_Eternum_ResourceCostWhereInput = {
  amount?: InputMaybe<Scalars['u128']['input']>;
  amountEQ?: InputMaybe<Scalars['u128']['input']>;
  amountGT?: InputMaybe<Scalars['u128']['input']>;
  amountGTE?: InputMaybe<Scalars['u128']['input']>;
  amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  amountLT?: InputMaybe<Scalars['u128']['input']>;
  amountLTE?: InputMaybe<Scalars['u128']['input']>;
  amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  index?: InputMaybe<Scalars['u32']['input']>;
  indexEQ?: InputMaybe<Scalars['u32']['input']>;
  indexGT?: InputMaybe<Scalars['u32']['input']>;
  indexGTE?: InputMaybe<Scalars['u32']['input']>;
  indexIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  indexLIKE?: InputMaybe<Scalars['u32']['input']>;
  indexLT?: InputMaybe<Scalars['u32']['input']>;
  indexLTE?: InputMaybe<Scalars['u32']['input']>;
  indexNEQ?: InputMaybe<Scalars['u32']['input']>;
  indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  indexNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_type?: InputMaybe<Scalars['u8']['input']>;
  resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_ResourceEdge = {
  __typename?: 's0_eternum_ResourceEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Resource>;
};

export type S0_Eternum_ResourceOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ResourceOrderField;
};

export enum S0_Eternum_ResourceOrderField {
  Balance = 'BALANCE',
  EntityId = 'ENTITY_ID',
  ResourceType = 'RESOURCE_TYPE'
}

export type S0_Eternum_ResourceTransferLock = {
  __typename?: 's0_eternum_ResourceTransferLock';
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  release_at?: Maybe<Scalars['u64']['output']>;
  start_at?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_ResourceTransferLockConnection = {
  __typename?: 's0_eternum_ResourceTransferLockConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_ResourceTransferLockEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_ResourceTransferLockEdge = {
  __typename?: 's0_eternum_ResourceTransferLockEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_ResourceTransferLock>;
};

export type S0_Eternum_ResourceTransferLockOrder = {
  direction: OrderDirection;
  field: S0_Eternum_ResourceTransferLockOrderField;
};

export enum S0_Eternum_ResourceTransferLockOrderField {
  EntityId = 'ENTITY_ID',
  ReleaseAt = 'RELEASE_AT',
  StartAt = 'START_AT'
}

export type S0_Eternum_ResourceTransferLockWhereInput = {
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  release_at?: InputMaybe<Scalars['u64']['input']>;
  release_atEQ?: InputMaybe<Scalars['u64']['input']>;
  release_atGT?: InputMaybe<Scalars['u64']['input']>;
  release_atGTE?: InputMaybe<Scalars['u64']['input']>;
  release_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  release_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  release_atLT?: InputMaybe<Scalars['u64']['input']>;
  release_atLTE?: InputMaybe<Scalars['u64']['input']>;
  release_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  release_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  release_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  start_at?: InputMaybe<Scalars['u64']['input']>;
  start_atEQ?: InputMaybe<Scalars['u64']['input']>;
  start_atGT?: InputMaybe<Scalars['u64']['input']>;
  start_atGTE?: InputMaybe<Scalars['u64']['input']>;
  start_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  start_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  start_atLT?: InputMaybe<Scalars['u64']['input']>;
  start_atLTE?: InputMaybe<Scalars['u64']['input']>;
  start_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  start_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  start_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_ResourceWhereInput = {
  balance?: InputMaybe<Scalars['u128']['input']>;
  balanceEQ?: InputMaybe<Scalars['u128']['input']>;
  balanceGT?: InputMaybe<Scalars['u128']['input']>;
  balanceGTE?: InputMaybe<Scalars['u128']['input']>;
  balanceIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  balanceLIKE?: InputMaybe<Scalars['u128']['input']>;
  balanceLT?: InputMaybe<Scalars['u128']['input']>;
  balanceLTE?: InputMaybe<Scalars['u128']['input']>;
  balanceNEQ?: InputMaybe<Scalars['u128']['input']>;
  balanceNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  balanceNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  resource_type?: InputMaybe<Scalars['u8']['input']>;
  resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_Season = {
  __typename?: 's0_eternum_Season';
  config_id?: Maybe<Scalars['u32']['output']>;
  ended_at?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  is_over?: Maybe<Scalars['bool']['output']>;
  start_at?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_SeasonAddressesConfig = {
  __typename?: 's0_eternum_SeasonAddressesConfig';
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  lords_address?: Maybe<Scalars['ContractAddress']['output']>;
  realms_address?: Maybe<Scalars['ContractAddress']['output']>;
  season_pass_address?: Maybe<Scalars['ContractAddress']['output']>;
};

export type S0_Eternum_SeasonAddressesConfigConnection = {
  __typename?: 's0_eternum_SeasonAddressesConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_SeasonAddressesConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_SeasonAddressesConfigEdge = {
  __typename?: 's0_eternum_SeasonAddressesConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_SeasonAddressesConfig>;
};

export type S0_Eternum_SeasonAddressesConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_SeasonAddressesConfigOrderField;
};

export enum S0_Eternum_SeasonAddressesConfigOrderField {
  ConfigId = 'CONFIG_ID',
  LordsAddress = 'LORDS_ADDRESS',
  RealmsAddress = 'REALMS_ADDRESS',
  SeasonPassAddress = 'SEASON_PASS_ADDRESS'
}

export type S0_Eternum_SeasonAddressesConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  lords_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  lords_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  lords_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  lords_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  lords_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  lords_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  lords_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  lords_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  lords_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  lords_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  lords_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  realms_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  realms_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  realms_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  realms_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  realms_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  realms_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  realms_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  realms_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  realms_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  realms_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  realms_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_pass_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_pass_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_pass_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_pass_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_pass_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  season_pass_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_pass_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_pass_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_pass_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  season_pass_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  season_pass_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
};

export type S0_Eternum_SeasonBridgeConfig = {
  __typename?: 's0_eternum_SeasonBridgeConfig';
  close_after_end_seconds?: Maybe<Scalars['u64']['output']>;
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
};

export type S0_Eternum_SeasonBridgeConfigConnection = {
  __typename?: 's0_eternum_SeasonBridgeConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_SeasonBridgeConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_SeasonBridgeConfigEdge = {
  __typename?: 's0_eternum_SeasonBridgeConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_SeasonBridgeConfig>;
};

export type S0_Eternum_SeasonBridgeConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_SeasonBridgeConfigOrderField;
};

export enum S0_Eternum_SeasonBridgeConfigOrderField {
  CloseAfterEndSeconds = 'CLOSE_AFTER_END_SECONDS',
  ConfigId = 'CONFIG_ID'
}

export type S0_Eternum_SeasonBridgeConfigWhereInput = {
  close_after_end_seconds?: InputMaybe<Scalars['u64']['input']>;
  close_after_end_secondsEQ?: InputMaybe<Scalars['u64']['input']>;
  close_after_end_secondsGT?: InputMaybe<Scalars['u64']['input']>;
  close_after_end_secondsGTE?: InputMaybe<Scalars['u64']['input']>;
  close_after_end_secondsIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  close_after_end_secondsLIKE?: InputMaybe<Scalars['u64']['input']>;
  close_after_end_secondsLT?: InputMaybe<Scalars['u64']['input']>;
  close_after_end_secondsLTE?: InputMaybe<Scalars['u64']['input']>;
  close_after_end_secondsNEQ?: InputMaybe<Scalars['u64']['input']>;
  close_after_end_secondsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  close_after_end_secondsNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_SeasonConnection = {
  __typename?: 's0_eternum_SeasonConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_SeasonEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_SeasonEdge = {
  __typename?: 's0_eternum_SeasonEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Season>;
};

export type S0_Eternum_SeasonOrder = {
  direction: OrderDirection;
  field: S0_Eternum_SeasonOrderField;
};

export enum S0_Eternum_SeasonOrderField {
  ConfigId = 'CONFIG_ID',
  EndedAt = 'ENDED_AT',
  IsOver = 'IS_OVER',
  StartAt = 'START_AT'
}

export type S0_Eternum_SeasonWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  ended_at?: InputMaybe<Scalars['u64']['input']>;
  ended_atEQ?: InputMaybe<Scalars['u64']['input']>;
  ended_atGT?: InputMaybe<Scalars['u64']['input']>;
  ended_atGTE?: InputMaybe<Scalars['u64']['input']>;
  ended_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  ended_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  ended_atLT?: InputMaybe<Scalars['u64']['input']>;
  ended_atLTE?: InputMaybe<Scalars['u64']['input']>;
  ended_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  ended_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  ended_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  is_over?: InputMaybe<Scalars['bool']['input']>;
  start_at?: InputMaybe<Scalars['u64']['input']>;
  start_atEQ?: InputMaybe<Scalars['u64']['input']>;
  start_atGT?: InputMaybe<Scalars['u64']['input']>;
  start_atGTE?: InputMaybe<Scalars['u64']['input']>;
  start_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  start_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  start_atLT?: InputMaybe<Scalars['u64']['input']>;
  start_atLTE?: InputMaybe<Scalars['u64']['input']>;
  start_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  start_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  start_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_SettleRealmData = {
  __typename?: 's0_eternum_SettleRealmData';
  cities?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  event_id?: Maybe<Scalars['Enum']['output']>;
  harbors?: Maybe<Scalars['u8']['output']>;
  id?: Maybe<Scalars['u32']['output']>;
  order?: Maybe<Scalars['u8']['output']>;
  owner_address?: Maybe<Scalars['ContractAddress']['output']>;
  owner_name?: Maybe<Scalars['felt252']['output']>;
  produced_resources?: Maybe<Scalars['u128']['output']>;
  realm_name?: Maybe<Scalars['felt252']['output']>;
  regions?: Maybe<Scalars['u8']['output']>;
  rivers?: Maybe<Scalars['u8']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
  wonder?: Maybe<Scalars['u8']['output']>;
  x?: Maybe<Scalars['u32']['output']>;
  y?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_SettleRealmDataConnection = {
  __typename?: 's0_eternum_SettleRealmDataConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_SettleRealmDataEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_SettleRealmDataEdge = {
  __typename?: 's0_eternum_SettleRealmDataEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_SettleRealmData>;
};

export type S0_Eternum_SettleRealmDataOrder = {
  direction: OrderDirection;
  field: S0_Eternum_SettleRealmDataOrderField;
};

export enum S0_Eternum_SettleRealmDataOrderField {
  Cities = 'CITIES',
  EntityId = 'ENTITY_ID',
  EventId = 'EVENT_ID',
  Harbors = 'HARBORS',
  Id = 'ID',
  Order = 'ORDER',
  OwnerAddress = 'OWNER_ADDRESS',
  OwnerName = 'OWNER_NAME',
  ProducedResources = 'PRODUCED_RESOURCES',
  RealmName = 'REALM_NAME',
  Regions = 'REGIONS',
  Rivers = 'RIVERS',
  Timestamp = 'TIMESTAMP',
  Wonder = 'WONDER',
  X = 'X',
  Y = 'Y'
}

export type S0_Eternum_SettleRealmDataWhereInput = {
  cities?: InputMaybe<Scalars['u8']['input']>;
  citiesEQ?: InputMaybe<Scalars['u8']['input']>;
  citiesGT?: InputMaybe<Scalars['u8']['input']>;
  citiesGTE?: InputMaybe<Scalars['u8']['input']>;
  citiesIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  citiesLIKE?: InputMaybe<Scalars['u8']['input']>;
  citiesLT?: InputMaybe<Scalars['u8']['input']>;
  citiesLTE?: InputMaybe<Scalars['u8']['input']>;
  citiesNEQ?: InputMaybe<Scalars['u8']['input']>;
  citiesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  citiesNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  event_id?: InputMaybe<Scalars['Enum']['input']>;
  harbors?: InputMaybe<Scalars['u8']['input']>;
  harborsEQ?: InputMaybe<Scalars['u8']['input']>;
  harborsGT?: InputMaybe<Scalars['u8']['input']>;
  harborsGTE?: InputMaybe<Scalars['u8']['input']>;
  harborsIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  harborsLIKE?: InputMaybe<Scalars['u8']['input']>;
  harborsLT?: InputMaybe<Scalars['u8']['input']>;
  harborsLTE?: InputMaybe<Scalars['u8']['input']>;
  harborsNEQ?: InputMaybe<Scalars['u8']['input']>;
  harborsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  harborsNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  order?: InputMaybe<Scalars['u8']['input']>;
  orderEQ?: InputMaybe<Scalars['u8']['input']>;
  orderGT?: InputMaybe<Scalars['u8']['input']>;
  orderGTE?: InputMaybe<Scalars['u8']['input']>;
  orderIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  orderLIKE?: InputMaybe<Scalars['u8']['input']>;
  orderLT?: InputMaybe<Scalars['u8']['input']>;
  orderLTE?: InputMaybe<Scalars['u8']['input']>;
  orderNEQ?: InputMaybe<Scalars['u8']['input']>;
  orderNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  orderNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  owner_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  owner_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  owner_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  owner_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  owner_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  owner_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  owner_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  owner_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  owner_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  owner_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  owner_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  owner_name?: InputMaybe<Scalars['felt252']['input']>;
  owner_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  owner_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  owner_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  owner_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  owner_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  owner_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  owner_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  owner_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  owner_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  owner_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  produced_resources?: InputMaybe<Scalars['u128']['input']>;
  produced_resourcesEQ?: InputMaybe<Scalars['u128']['input']>;
  produced_resourcesGT?: InputMaybe<Scalars['u128']['input']>;
  produced_resourcesGTE?: InputMaybe<Scalars['u128']['input']>;
  produced_resourcesIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  produced_resourcesLIKE?: InputMaybe<Scalars['u128']['input']>;
  produced_resourcesLT?: InputMaybe<Scalars['u128']['input']>;
  produced_resourcesLTE?: InputMaybe<Scalars['u128']['input']>;
  produced_resourcesNEQ?: InputMaybe<Scalars['u128']['input']>;
  produced_resourcesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  produced_resourcesNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  realm_name?: InputMaybe<Scalars['felt252']['input']>;
  realm_nameEQ?: InputMaybe<Scalars['felt252']['input']>;
  realm_nameGT?: InputMaybe<Scalars['felt252']['input']>;
  realm_nameGTE?: InputMaybe<Scalars['felt252']['input']>;
  realm_nameIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  realm_nameLIKE?: InputMaybe<Scalars['felt252']['input']>;
  realm_nameLT?: InputMaybe<Scalars['felt252']['input']>;
  realm_nameLTE?: InputMaybe<Scalars['felt252']['input']>;
  realm_nameNEQ?: InputMaybe<Scalars['felt252']['input']>;
  realm_nameNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  realm_nameNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  regions?: InputMaybe<Scalars['u8']['input']>;
  regionsEQ?: InputMaybe<Scalars['u8']['input']>;
  regionsGT?: InputMaybe<Scalars['u8']['input']>;
  regionsGTE?: InputMaybe<Scalars['u8']['input']>;
  regionsIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  regionsLIKE?: InputMaybe<Scalars['u8']['input']>;
  regionsLT?: InputMaybe<Scalars['u8']['input']>;
  regionsLTE?: InputMaybe<Scalars['u8']['input']>;
  regionsNEQ?: InputMaybe<Scalars['u8']['input']>;
  regionsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  regionsNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  rivers?: InputMaybe<Scalars['u8']['input']>;
  riversEQ?: InputMaybe<Scalars['u8']['input']>;
  riversGT?: InputMaybe<Scalars['u8']['input']>;
  riversGTE?: InputMaybe<Scalars['u8']['input']>;
  riversIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  riversLIKE?: InputMaybe<Scalars['u8']['input']>;
  riversLT?: InputMaybe<Scalars['u8']['input']>;
  riversLTE?: InputMaybe<Scalars['u8']['input']>;
  riversNEQ?: InputMaybe<Scalars['u8']['input']>;
  riversNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  riversNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  wonder?: InputMaybe<Scalars['u8']['input']>;
  wonderEQ?: InputMaybe<Scalars['u8']['input']>;
  wonderGT?: InputMaybe<Scalars['u8']['input']>;
  wonderGTE?: InputMaybe<Scalars['u8']['input']>;
  wonderIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  wonderLIKE?: InputMaybe<Scalars['u8']['input']>;
  wonderLT?: InputMaybe<Scalars['u8']['input']>;
  wonderLTE?: InputMaybe<Scalars['u8']['input']>;
  wonderNEQ?: InputMaybe<Scalars['u8']['input']>;
  wonderNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  wonderNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  x?: InputMaybe<Scalars['u32']['input']>;
  xEQ?: InputMaybe<Scalars['u32']['input']>;
  xGT?: InputMaybe<Scalars['u32']['input']>;
  xGTE?: InputMaybe<Scalars['u32']['input']>;
  xIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  xLIKE?: InputMaybe<Scalars['u32']['input']>;
  xLT?: InputMaybe<Scalars['u32']['input']>;
  xLTE?: InputMaybe<Scalars['u32']['input']>;
  xNEQ?: InputMaybe<Scalars['u32']['input']>;
  xNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  xNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  y?: InputMaybe<Scalars['u32']['input']>;
  yEQ?: InputMaybe<Scalars['u32']['input']>;
  yGT?: InputMaybe<Scalars['u32']['input']>;
  yGTE?: InputMaybe<Scalars['u32']['input']>;
  yIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  yLIKE?: InputMaybe<Scalars['u32']['input']>;
  yLT?: InputMaybe<Scalars['u32']['input']>;
  yLTE?: InputMaybe<Scalars['u32']['input']>;
  yNEQ?: InputMaybe<Scalars['u32']['input']>;
  yNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  yNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_SettlementConfig = {
  __typename?: 's0_eternum_SettlementConfig';
  base_distance?: Maybe<Scalars['u32']['output']>;
  center?: Maybe<Scalars['u32']['output']>;
  config_id?: Maybe<Scalars['u32']['output']>;
  current_layer?: Maybe<Scalars['u32']['output']>;
  current_point_on_side?: Maybe<Scalars['u32']['output']>;
  current_side?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  min_first_layer_distance?: Maybe<Scalars['u32']['output']>;
  points_placed?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_SettlementConfigConnection = {
  __typename?: 's0_eternum_SettlementConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_SettlementConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_SettlementConfigEdge = {
  __typename?: 's0_eternum_SettlementConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_SettlementConfig>;
};

export type S0_Eternum_SettlementConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_SettlementConfigOrderField;
};

export enum S0_Eternum_SettlementConfigOrderField {
  BaseDistance = 'BASE_DISTANCE',
  Center = 'CENTER',
  ConfigId = 'CONFIG_ID',
  CurrentLayer = 'CURRENT_LAYER',
  CurrentPointOnSide = 'CURRENT_POINT_ON_SIDE',
  CurrentSide = 'CURRENT_SIDE',
  MinFirstLayerDistance = 'MIN_FIRST_LAYER_DISTANCE',
  PointsPlaced = 'POINTS_PLACED'
}

export type S0_Eternum_SettlementConfigWhereInput = {
  base_distance?: InputMaybe<Scalars['u32']['input']>;
  base_distanceEQ?: InputMaybe<Scalars['u32']['input']>;
  base_distanceGT?: InputMaybe<Scalars['u32']['input']>;
  base_distanceGTE?: InputMaybe<Scalars['u32']['input']>;
  base_distanceIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  base_distanceLIKE?: InputMaybe<Scalars['u32']['input']>;
  base_distanceLT?: InputMaybe<Scalars['u32']['input']>;
  base_distanceLTE?: InputMaybe<Scalars['u32']['input']>;
  base_distanceNEQ?: InputMaybe<Scalars['u32']['input']>;
  base_distanceNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  base_distanceNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  center?: InputMaybe<Scalars['u32']['input']>;
  centerEQ?: InputMaybe<Scalars['u32']['input']>;
  centerGT?: InputMaybe<Scalars['u32']['input']>;
  centerGTE?: InputMaybe<Scalars['u32']['input']>;
  centerIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  centerLIKE?: InputMaybe<Scalars['u32']['input']>;
  centerLT?: InputMaybe<Scalars['u32']['input']>;
  centerLTE?: InputMaybe<Scalars['u32']['input']>;
  centerNEQ?: InputMaybe<Scalars['u32']['input']>;
  centerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  centerNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  current_layer?: InputMaybe<Scalars['u32']['input']>;
  current_layerEQ?: InputMaybe<Scalars['u32']['input']>;
  current_layerGT?: InputMaybe<Scalars['u32']['input']>;
  current_layerGTE?: InputMaybe<Scalars['u32']['input']>;
  current_layerIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  current_layerLIKE?: InputMaybe<Scalars['u32']['input']>;
  current_layerLT?: InputMaybe<Scalars['u32']['input']>;
  current_layerLTE?: InputMaybe<Scalars['u32']['input']>;
  current_layerNEQ?: InputMaybe<Scalars['u32']['input']>;
  current_layerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  current_layerNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  current_point_on_side?: InputMaybe<Scalars['u32']['input']>;
  current_point_on_sideEQ?: InputMaybe<Scalars['u32']['input']>;
  current_point_on_sideGT?: InputMaybe<Scalars['u32']['input']>;
  current_point_on_sideGTE?: InputMaybe<Scalars['u32']['input']>;
  current_point_on_sideIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  current_point_on_sideLIKE?: InputMaybe<Scalars['u32']['input']>;
  current_point_on_sideLT?: InputMaybe<Scalars['u32']['input']>;
  current_point_on_sideLTE?: InputMaybe<Scalars['u32']['input']>;
  current_point_on_sideNEQ?: InputMaybe<Scalars['u32']['input']>;
  current_point_on_sideNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  current_point_on_sideNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  current_side?: InputMaybe<Scalars['u32']['input']>;
  current_sideEQ?: InputMaybe<Scalars['u32']['input']>;
  current_sideGT?: InputMaybe<Scalars['u32']['input']>;
  current_sideGTE?: InputMaybe<Scalars['u32']['input']>;
  current_sideIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  current_sideLIKE?: InputMaybe<Scalars['u32']['input']>;
  current_sideLT?: InputMaybe<Scalars['u32']['input']>;
  current_sideLTE?: InputMaybe<Scalars['u32']['input']>;
  current_sideNEQ?: InputMaybe<Scalars['u32']['input']>;
  current_sideNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  current_sideNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  min_first_layer_distance?: InputMaybe<Scalars['u32']['input']>;
  min_first_layer_distanceEQ?: InputMaybe<Scalars['u32']['input']>;
  min_first_layer_distanceGT?: InputMaybe<Scalars['u32']['input']>;
  min_first_layer_distanceGTE?: InputMaybe<Scalars['u32']['input']>;
  min_first_layer_distanceIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  min_first_layer_distanceLIKE?: InputMaybe<Scalars['u32']['input']>;
  min_first_layer_distanceLT?: InputMaybe<Scalars['u32']['input']>;
  min_first_layer_distanceLTE?: InputMaybe<Scalars['u32']['input']>;
  min_first_layer_distanceNEQ?: InputMaybe<Scalars['u32']['input']>;
  min_first_layer_distanceNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  min_first_layer_distanceNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  points_placed?: InputMaybe<Scalars['u32']['input']>;
  points_placedEQ?: InputMaybe<Scalars['u32']['input']>;
  points_placedGT?: InputMaybe<Scalars['u32']['input']>;
  points_placedGTE?: InputMaybe<Scalars['u32']['input']>;
  points_placedIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  points_placedLIKE?: InputMaybe<Scalars['u32']['input']>;
  points_placedLT?: InputMaybe<Scalars['u32']['input']>;
  points_placedLTE?: InputMaybe<Scalars['u32']['input']>;
  points_placedNEQ?: InputMaybe<Scalars['u32']['input']>;
  points_placedNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  points_placedNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_SpeedConfig = {
  __typename?: 's0_eternum_SpeedConfig';
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  entity_type?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  sec_per_km?: Maybe<Scalars['u16']['output']>;
  speed_config_id?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_SpeedConfigConnection = {
  __typename?: 's0_eternum_SpeedConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_SpeedConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_SpeedConfigEdge = {
  __typename?: 's0_eternum_SpeedConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_SpeedConfig>;
};

export type S0_Eternum_SpeedConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_SpeedConfigOrderField;
};

export enum S0_Eternum_SpeedConfigOrderField {
  ConfigId = 'CONFIG_ID',
  EntityType = 'ENTITY_TYPE',
  SecPerKm = 'SEC_PER_KM',
  SpeedConfigId = 'SPEED_CONFIG_ID'
}

export type S0_Eternum_SpeedConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_type?: InputMaybe<Scalars['u32']['input']>;
  entity_typeEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_typeGT?: InputMaybe<Scalars['u32']['input']>;
  entity_typeGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_typeLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_typeLT?: InputMaybe<Scalars['u32']['input']>;
  entity_typeLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_typeNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_typeNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  sec_per_km?: InputMaybe<Scalars['u16']['input']>;
  sec_per_kmEQ?: InputMaybe<Scalars['u16']['input']>;
  sec_per_kmGT?: InputMaybe<Scalars['u16']['input']>;
  sec_per_kmGTE?: InputMaybe<Scalars['u16']['input']>;
  sec_per_kmIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  sec_per_kmLIKE?: InputMaybe<Scalars['u16']['input']>;
  sec_per_kmLT?: InputMaybe<Scalars['u16']['input']>;
  sec_per_kmLTE?: InputMaybe<Scalars['u16']['input']>;
  sec_per_kmNEQ?: InputMaybe<Scalars['u16']['input']>;
  sec_per_kmNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  sec_per_kmNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  speed_config_id?: InputMaybe<Scalars['u32']['input']>;
  speed_config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  speed_config_idGT?: InputMaybe<Scalars['u32']['input']>;
  speed_config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  speed_config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  speed_config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  speed_config_idLT?: InputMaybe<Scalars['u32']['input']>;
  speed_config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  speed_config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  speed_config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  speed_config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_Stamina = {
  __typename?: 's0_eternum_Stamina';
  amount?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  last_refill_tick?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_StaminaConfig = {
  __typename?: 's0_eternum_StaminaConfig';
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  max_stamina?: Maybe<Scalars['u16']['output']>;
  unit_type?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_StaminaConfigConnection = {
  __typename?: 's0_eternum_StaminaConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_StaminaConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_StaminaConfigEdge = {
  __typename?: 's0_eternum_StaminaConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_StaminaConfig>;
};

export type S0_Eternum_StaminaConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_StaminaConfigOrderField;
};

export enum S0_Eternum_StaminaConfigOrderField {
  ConfigId = 'CONFIG_ID',
  MaxStamina = 'MAX_STAMINA',
  UnitType = 'UNIT_TYPE'
}

export type S0_Eternum_StaminaConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  max_stamina?: InputMaybe<Scalars['u16']['input']>;
  max_staminaEQ?: InputMaybe<Scalars['u16']['input']>;
  max_staminaGT?: InputMaybe<Scalars['u16']['input']>;
  max_staminaGTE?: InputMaybe<Scalars['u16']['input']>;
  max_staminaIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  max_staminaLIKE?: InputMaybe<Scalars['u16']['input']>;
  max_staminaLT?: InputMaybe<Scalars['u16']['input']>;
  max_staminaLTE?: InputMaybe<Scalars['u16']['input']>;
  max_staminaNEQ?: InputMaybe<Scalars['u16']['input']>;
  max_staminaNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  max_staminaNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  unit_type?: InputMaybe<Scalars['u8']['input']>;
  unit_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  unit_typeGT?: InputMaybe<Scalars['u8']['input']>;
  unit_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  unit_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  unit_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  unit_typeLT?: InputMaybe<Scalars['u8']['input']>;
  unit_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  unit_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  unit_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  unit_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_StaminaConnection = {
  __typename?: 's0_eternum_StaminaConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_StaminaEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_StaminaEdge = {
  __typename?: 's0_eternum_StaminaEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Stamina>;
};

export type S0_Eternum_StaminaOrder = {
  direction: OrderDirection;
  field: S0_Eternum_StaminaOrderField;
};

export enum S0_Eternum_StaminaOrderField {
  Amount = 'AMOUNT',
  EntityId = 'ENTITY_ID',
  LastRefillTick = 'LAST_REFILL_TICK'
}

export type S0_Eternum_StaminaRefillConfig = {
  __typename?: 's0_eternum_StaminaRefillConfig';
  amount_per_tick?: Maybe<Scalars['u16']['output']>;
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  start_boost_tick_count?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_StaminaRefillConfigConnection = {
  __typename?: 's0_eternum_StaminaRefillConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_StaminaRefillConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_StaminaRefillConfigEdge = {
  __typename?: 's0_eternum_StaminaRefillConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_StaminaRefillConfig>;
};

export type S0_Eternum_StaminaRefillConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_StaminaRefillConfigOrderField;
};

export enum S0_Eternum_StaminaRefillConfigOrderField {
  AmountPerTick = 'AMOUNT_PER_TICK',
  ConfigId = 'CONFIG_ID',
  StartBoostTickCount = 'START_BOOST_TICK_COUNT'
}

export type S0_Eternum_StaminaRefillConfigWhereInput = {
  amount_per_tick?: InputMaybe<Scalars['u16']['input']>;
  amount_per_tickEQ?: InputMaybe<Scalars['u16']['input']>;
  amount_per_tickGT?: InputMaybe<Scalars['u16']['input']>;
  amount_per_tickGTE?: InputMaybe<Scalars['u16']['input']>;
  amount_per_tickIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  amount_per_tickLIKE?: InputMaybe<Scalars['u16']['input']>;
  amount_per_tickLT?: InputMaybe<Scalars['u16']['input']>;
  amount_per_tickLTE?: InputMaybe<Scalars['u16']['input']>;
  amount_per_tickNEQ?: InputMaybe<Scalars['u16']['input']>;
  amount_per_tickNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  amount_per_tickNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  start_boost_tick_count?: InputMaybe<Scalars['u8']['input']>;
  start_boost_tick_countEQ?: InputMaybe<Scalars['u8']['input']>;
  start_boost_tick_countGT?: InputMaybe<Scalars['u8']['input']>;
  start_boost_tick_countGTE?: InputMaybe<Scalars['u8']['input']>;
  start_boost_tick_countIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_boost_tick_countLIKE?: InputMaybe<Scalars['u8']['input']>;
  start_boost_tick_countLT?: InputMaybe<Scalars['u8']['input']>;
  start_boost_tick_countLTE?: InputMaybe<Scalars['u8']['input']>;
  start_boost_tick_countNEQ?: InputMaybe<Scalars['u8']['input']>;
  start_boost_tick_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  start_boost_tick_countNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_StaminaWhereInput = {
  amount?: InputMaybe<Scalars['u16']['input']>;
  amountEQ?: InputMaybe<Scalars['u16']['input']>;
  amountGT?: InputMaybe<Scalars['u16']['input']>;
  amountGTE?: InputMaybe<Scalars['u16']['input']>;
  amountIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  amountLIKE?: InputMaybe<Scalars['u16']['input']>;
  amountLT?: InputMaybe<Scalars['u16']['input']>;
  amountLTE?: InputMaybe<Scalars['u16']['input']>;
  amountNEQ?: InputMaybe<Scalars['u16']['input']>;
  amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  amountNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  last_refill_tick?: InputMaybe<Scalars['u64']['input']>;
  last_refill_tickEQ?: InputMaybe<Scalars['u64']['input']>;
  last_refill_tickGT?: InputMaybe<Scalars['u64']['input']>;
  last_refill_tickGTE?: InputMaybe<Scalars['u64']['input']>;
  last_refill_tickIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  last_refill_tickLIKE?: InputMaybe<Scalars['u64']['input']>;
  last_refill_tickLT?: InputMaybe<Scalars['u64']['input']>;
  last_refill_tickLTE?: InputMaybe<Scalars['u64']['input']>;
  last_refill_tickNEQ?: InputMaybe<Scalars['u64']['input']>;
  last_refill_tickNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  last_refill_tickNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_Status = {
  __typename?: 's0_eternum_Status';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  trade_id?: Maybe<Scalars['u32']['output']>;
  value?: Maybe<Scalars['u128']['output']>;
};

export type S0_Eternum_StatusConnection = {
  __typename?: 's0_eternum_StatusConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_StatusEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_StatusEdge = {
  __typename?: 's0_eternum_StatusEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Status>;
};

export type S0_Eternum_StatusOrder = {
  direction: OrderDirection;
  field: S0_Eternum_StatusOrderField;
};

export enum S0_Eternum_StatusOrderField {
  TradeId = 'TRADE_ID',
  Value = 'VALUE'
}

export type S0_Eternum_StatusWhereInput = {
  trade_id?: InputMaybe<Scalars['u32']['input']>;
  trade_idEQ?: InputMaybe<Scalars['u32']['input']>;
  trade_idGT?: InputMaybe<Scalars['u32']['input']>;
  trade_idGTE?: InputMaybe<Scalars['u32']['input']>;
  trade_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  trade_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  trade_idLT?: InputMaybe<Scalars['u32']['input']>;
  trade_idLTE?: InputMaybe<Scalars['u32']['input']>;
  trade_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  trade_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  trade_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  value?: InputMaybe<Scalars['u128']['input']>;
  valueEQ?: InputMaybe<Scalars['u128']['input']>;
  valueGT?: InputMaybe<Scalars['u128']['input']>;
  valueGTE?: InputMaybe<Scalars['u128']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['u128']['input']>;
  valueLT?: InputMaybe<Scalars['u128']['input']>;
  valueLTE?: InputMaybe<Scalars['u128']['input']>;
  valueNEQ?: InputMaybe<Scalars['u128']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type S0_Eternum_Structure = {
  __typename?: 's0_eternum_Structure';
  category?: Maybe<Scalars['Enum']['output']>;
  created_at?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
};

export type S0_Eternum_StructureConnection = {
  __typename?: 's0_eternum_StructureConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_StructureEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_StructureCount = {
  __typename?: 's0_eternum_StructureCount';
  coord?: Maybe<S0_Eternum_Coord>;
  count?: Maybe<Scalars['u8']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
};

export type S0_Eternum_StructureCountConnection = {
  __typename?: 's0_eternum_StructureCountConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_StructureCountEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_StructureCountEdge = {
  __typename?: 's0_eternum_StructureCountEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_StructureCount>;
};

export type S0_Eternum_StructureCountOrder = {
  direction: OrderDirection;
  field: S0_Eternum_StructureCountOrderField;
};

export enum S0_Eternum_StructureCountOrderField {
  Coord = 'COORD',
  Count = 'COUNT'
}

export type S0_Eternum_StructureCountWhereInput = {
  count?: InputMaybe<Scalars['u8']['input']>;
  countEQ?: InputMaybe<Scalars['u8']['input']>;
  countGT?: InputMaybe<Scalars['u8']['input']>;
  countGTE?: InputMaybe<Scalars['u8']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u8']['input']>;
  countLT?: InputMaybe<Scalars['u8']['input']>;
  countLTE?: InputMaybe<Scalars['u8']['input']>;
  countNEQ?: InputMaybe<Scalars['u8']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_StructureEdge = {
  __typename?: 's0_eternum_StructureEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Structure>;
};

export type S0_Eternum_StructureOrder = {
  direction: OrderDirection;
  field: S0_Eternum_StructureOrderField;
};

export enum S0_Eternum_StructureOrderField {
  Category = 'CATEGORY',
  CreatedAt = 'CREATED_AT',
  EntityId = 'ENTITY_ID'
}

export type S0_Eternum_StructureWhereInput = {
  category?: InputMaybe<Scalars['Enum']['input']>;
  created_at?: InputMaybe<Scalars['u64']['input']>;
  created_atEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atGT?: InputMaybe<Scalars['u64']['input']>;
  created_atGTE?: InputMaybe<Scalars['u64']['input']>;
  created_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  created_atLT?: InputMaybe<Scalars['u64']['input']>;
  created_atLTE?: InputMaybe<Scalars['u64']['input']>;
  created_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  created_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  created_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_SwapEvent = {
  __typename?: 's0_eternum_SwapEvent';
  bank_entity_id?: Maybe<Scalars['u32']['output']>;
  bank_owner_fees?: Maybe<Scalars['u128']['output']>;
  buy?: Maybe<Scalars['bool']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  id?: Maybe<Scalars['u32']['output']>;
  lords_amount?: Maybe<Scalars['u128']['output']>;
  lp_fees?: Maybe<Scalars['u128']['output']>;
  resource_amount?: Maybe<Scalars['u128']['output']>;
  resource_price?: Maybe<Scalars['u128']['output']>;
  resource_type?: Maybe<Scalars['u8']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_SwapEventConnection = {
  __typename?: 's0_eternum_SwapEventConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_SwapEventEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_SwapEventEdge = {
  __typename?: 's0_eternum_SwapEventEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_SwapEvent>;
};

export type S0_Eternum_SwapEventOrder = {
  direction: OrderDirection;
  field: S0_Eternum_SwapEventOrderField;
};

export enum S0_Eternum_SwapEventOrderField {
  BankEntityId = 'BANK_ENTITY_ID',
  BankOwnerFees = 'BANK_OWNER_FEES',
  Buy = 'BUY',
  EntityId = 'ENTITY_ID',
  Id = 'ID',
  LordsAmount = 'LORDS_AMOUNT',
  LpFees = 'LP_FEES',
  ResourceAmount = 'RESOURCE_AMOUNT',
  ResourcePrice = 'RESOURCE_PRICE',
  ResourceType = 'RESOURCE_TYPE',
  Timestamp = 'TIMESTAMP'
}

export type S0_Eternum_SwapEventWhereInput = {
  bank_entity_id?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  bank_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  bank_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  bank_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  bank_owner_fees?: InputMaybe<Scalars['u128']['input']>;
  bank_owner_feesEQ?: InputMaybe<Scalars['u128']['input']>;
  bank_owner_feesGT?: InputMaybe<Scalars['u128']['input']>;
  bank_owner_feesGTE?: InputMaybe<Scalars['u128']['input']>;
  bank_owner_feesIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  bank_owner_feesLIKE?: InputMaybe<Scalars['u128']['input']>;
  bank_owner_feesLT?: InputMaybe<Scalars['u128']['input']>;
  bank_owner_feesLTE?: InputMaybe<Scalars['u128']['input']>;
  bank_owner_feesNEQ?: InputMaybe<Scalars['u128']['input']>;
  bank_owner_feesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  bank_owner_feesNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  buy?: InputMaybe<Scalars['bool']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  id?: InputMaybe<Scalars['u32']['input']>;
  idEQ?: InputMaybe<Scalars['u32']['input']>;
  idGT?: InputMaybe<Scalars['u32']['input']>;
  idGTE?: InputMaybe<Scalars['u32']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idLIKE?: InputMaybe<Scalars['u32']['input']>;
  idLT?: InputMaybe<Scalars['u32']['input']>;
  idLTE?: InputMaybe<Scalars['u32']['input']>;
  idNEQ?: InputMaybe<Scalars['u32']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  lords_amount?: InputMaybe<Scalars['u128']['input']>;
  lords_amountEQ?: InputMaybe<Scalars['u128']['input']>;
  lords_amountGT?: InputMaybe<Scalars['u128']['input']>;
  lords_amountGTE?: InputMaybe<Scalars['u128']['input']>;
  lords_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  lords_amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  lords_amountLT?: InputMaybe<Scalars['u128']['input']>;
  lords_amountLTE?: InputMaybe<Scalars['u128']['input']>;
  lords_amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  lords_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  lords_amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  lp_fees?: InputMaybe<Scalars['u128']['input']>;
  lp_feesEQ?: InputMaybe<Scalars['u128']['input']>;
  lp_feesGT?: InputMaybe<Scalars['u128']['input']>;
  lp_feesGTE?: InputMaybe<Scalars['u128']['input']>;
  lp_feesIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  lp_feesLIKE?: InputMaybe<Scalars['u128']['input']>;
  lp_feesLT?: InputMaybe<Scalars['u128']['input']>;
  lp_feesLTE?: InputMaybe<Scalars['u128']['input']>;
  lp_feesNEQ?: InputMaybe<Scalars['u128']['input']>;
  lp_feesNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  lp_feesNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_amount?: InputMaybe<Scalars['u128']['input']>;
  resource_amountEQ?: InputMaybe<Scalars['u128']['input']>;
  resource_amountGT?: InputMaybe<Scalars['u128']['input']>;
  resource_amountGTE?: InputMaybe<Scalars['u128']['input']>;
  resource_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  resource_amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_amountLT?: InputMaybe<Scalars['u128']['input']>;
  resource_amountLTE?: InputMaybe<Scalars['u128']['input']>;
  resource_amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  resource_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  resource_amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_price?: InputMaybe<Scalars['u128']['input']>;
  resource_priceEQ?: InputMaybe<Scalars['u128']['input']>;
  resource_priceGT?: InputMaybe<Scalars['u128']['input']>;
  resource_priceGTE?: InputMaybe<Scalars['u128']['input']>;
  resource_priceIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  resource_priceLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_priceLT?: InputMaybe<Scalars['u128']['input']>;
  resource_priceLTE?: InputMaybe<Scalars['u128']['input']>;
  resource_priceNEQ?: InputMaybe<Scalars['u128']['input']>;
  resource_priceNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  resource_priceNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  resource_type?: InputMaybe<Scalars['u8']['input']>;
  resource_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLT?: InputMaybe<Scalars['u8']['input']>;
  resource_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  resource_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  resource_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_Task = {
  __typename?: 's0_eternum_Task';
  description?: Maybe<Scalars['ByteArray']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  total?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_TickConfig = {
  __typename?: 's0_eternum_TickConfig';
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  tick_id?: Maybe<Scalars['u8']['output']>;
  tick_interval_in_seconds?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_TickConfigConnection = {
  __typename?: 's0_eternum_TickConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_TickConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_TickConfigEdge = {
  __typename?: 's0_eternum_TickConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_TickConfig>;
};

export type S0_Eternum_TickConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_TickConfigOrderField;
};

export enum S0_Eternum_TickConfigOrderField {
  ConfigId = 'CONFIG_ID',
  TickId = 'TICK_ID',
  TickIntervalInSeconds = 'TICK_INTERVAL_IN_SECONDS'
}

export type S0_Eternum_TickConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  tick_id?: InputMaybe<Scalars['u8']['input']>;
  tick_idEQ?: InputMaybe<Scalars['u8']['input']>;
  tick_idGT?: InputMaybe<Scalars['u8']['input']>;
  tick_idGTE?: InputMaybe<Scalars['u8']['input']>;
  tick_idIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  tick_idLIKE?: InputMaybe<Scalars['u8']['input']>;
  tick_idLT?: InputMaybe<Scalars['u8']['input']>;
  tick_idLTE?: InputMaybe<Scalars['u8']['input']>;
  tick_idNEQ?: InputMaybe<Scalars['u8']['input']>;
  tick_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  tick_idNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  tick_interval_in_seconds?: InputMaybe<Scalars['u64']['input']>;
  tick_interval_in_secondsEQ?: InputMaybe<Scalars['u64']['input']>;
  tick_interval_in_secondsGT?: InputMaybe<Scalars['u64']['input']>;
  tick_interval_in_secondsGTE?: InputMaybe<Scalars['u64']['input']>;
  tick_interval_in_secondsIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tick_interval_in_secondsLIKE?: InputMaybe<Scalars['u64']['input']>;
  tick_interval_in_secondsLT?: InputMaybe<Scalars['u64']['input']>;
  tick_interval_in_secondsLTE?: InputMaybe<Scalars['u64']['input']>;
  tick_interval_in_secondsNEQ?: InputMaybe<Scalars['u64']['input']>;
  tick_interval_in_secondsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  tick_interval_in_secondsNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_Tile = {
  __typename?: 's0_eternum_Tile';
  biome?: Maybe<Scalars['Enum']['output']>;
  col?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  explored_at?: Maybe<Scalars['u64']['output']>;
  explored_by_id?: Maybe<Scalars['u32']['output']>;
  row?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_TileConnection = {
  __typename?: 's0_eternum_TileConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_TileEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_TileEdge = {
  __typename?: 's0_eternum_TileEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Tile>;
};

export type S0_Eternum_TileOrder = {
  direction: OrderDirection;
  field: S0_Eternum_TileOrderField;
};

export enum S0_Eternum_TileOrderField {
  Biome = 'BIOME',
  Col = 'COL',
  ExploredAt = 'EXPLORED_AT',
  ExploredById = 'EXPLORED_BY_ID',
  Row = 'ROW'
}

export type S0_Eternum_TileWhereInput = {
  biome?: InputMaybe<Scalars['Enum']['input']>;
  col?: InputMaybe<Scalars['u32']['input']>;
  colEQ?: InputMaybe<Scalars['u32']['input']>;
  colGT?: InputMaybe<Scalars['u32']['input']>;
  colGTE?: InputMaybe<Scalars['u32']['input']>;
  colIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  colLIKE?: InputMaybe<Scalars['u32']['input']>;
  colLT?: InputMaybe<Scalars['u32']['input']>;
  colLTE?: InputMaybe<Scalars['u32']['input']>;
  colNEQ?: InputMaybe<Scalars['u32']['input']>;
  colNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  colNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  explored_at?: InputMaybe<Scalars['u64']['input']>;
  explored_atEQ?: InputMaybe<Scalars['u64']['input']>;
  explored_atGT?: InputMaybe<Scalars['u64']['input']>;
  explored_atGTE?: InputMaybe<Scalars['u64']['input']>;
  explored_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  explored_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  explored_atLT?: InputMaybe<Scalars['u64']['input']>;
  explored_atLTE?: InputMaybe<Scalars['u64']['input']>;
  explored_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  explored_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  explored_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  explored_by_id?: InputMaybe<Scalars['u32']['input']>;
  explored_by_idEQ?: InputMaybe<Scalars['u32']['input']>;
  explored_by_idGT?: InputMaybe<Scalars['u32']['input']>;
  explored_by_idGTE?: InputMaybe<Scalars['u32']['input']>;
  explored_by_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  explored_by_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  explored_by_idLT?: InputMaybe<Scalars['u32']['input']>;
  explored_by_idLTE?: InputMaybe<Scalars['u32']['input']>;
  explored_by_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  explored_by_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  explored_by_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  row?: InputMaybe<Scalars['u32']['input']>;
  rowEQ?: InputMaybe<Scalars['u32']['input']>;
  rowGT?: InputMaybe<Scalars['u32']['input']>;
  rowGTE?: InputMaybe<Scalars['u32']['input']>;
  rowIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  rowLIKE?: InputMaybe<Scalars['u32']['input']>;
  rowLT?: InputMaybe<Scalars['u32']['input']>;
  rowLTE?: InputMaybe<Scalars['u32']['input']>;
  rowNEQ?: InputMaybe<Scalars['u32']['input']>;
  rowNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  rowNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_Trade = {
  __typename?: 's0_eternum_Trade';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  expires_at?: Maybe<Scalars['u64']['output']>;
  maker_gives_resources_hash?: Maybe<Scalars['felt252']['output']>;
  maker_gives_resources_id?: Maybe<Scalars['u32']['output']>;
  maker_gives_resources_origin_id?: Maybe<Scalars['u32']['output']>;
  maker_gives_resources_weight?: Maybe<Scalars['u128']['output']>;
  maker_id?: Maybe<Scalars['u32']['output']>;
  taker_gives_resources_hash?: Maybe<Scalars['felt252']['output']>;
  taker_gives_resources_id?: Maybe<Scalars['u32']['output']>;
  taker_gives_resources_origin_id?: Maybe<Scalars['u32']['output']>;
  taker_gives_resources_weight?: Maybe<Scalars['u128']['output']>;
  taker_id?: Maybe<Scalars['u32']['output']>;
  trade_id?: Maybe<Scalars['u32']['output']>;
};

export type S0_Eternum_TradeConnection = {
  __typename?: 's0_eternum_TradeConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_TradeEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_TradeEdge = {
  __typename?: 's0_eternum_TradeEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Trade>;
};

export type S0_Eternum_TradeOrder = {
  direction: OrderDirection;
  field: S0_Eternum_TradeOrderField;
};

export enum S0_Eternum_TradeOrderField {
  ExpiresAt = 'EXPIRES_AT',
  MakerGivesResourcesHash = 'MAKER_GIVES_RESOURCES_HASH',
  MakerGivesResourcesId = 'MAKER_GIVES_RESOURCES_ID',
  MakerGivesResourcesOriginId = 'MAKER_GIVES_RESOURCES_ORIGIN_ID',
  MakerGivesResourcesWeight = 'MAKER_GIVES_RESOURCES_WEIGHT',
  MakerId = 'MAKER_ID',
  TakerGivesResourcesHash = 'TAKER_GIVES_RESOURCES_HASH',
  TakerGivesResourcesId = 'TAKER_GIVES_RESOURCES_ID',
  TakerGivesResourcesOriginId = 'TAKER_GIVES_RESOURCES_ORIGIN_ID',
  TakerGivesResourcesWeight = 'TAKER_GIVES_RESOURCES_WEIGHT',
  TakerId = 'TAKER_ID',
  TradeId = 'TRADE_ID'
}

export type S0_Eternum_TradeWhereInput = {
  expires_at?: InputMaybe<Scalars['u64']['input']>;
  expires_atEQ?: InputMaybe<Scalars['u64']['input']>;
  expires_atGT?: InputMaybe<Scalars['u64']['input']>;
  expires_atGTE?: InputMaybe<Scalars['u64']['input']>;
  expires_atIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  expires_atLIKE?: InputMaybe<Scalars['u64']['input']>;
  expires_atLT?: InputMaybe<Scalars['u64']['input']>;
  expires_atLTE?: InputMaybe<Scalars['u64']['input']>;
  expires_atNEQ?: InputMaybe<Scalars['u64']['input']>;
  expires_atNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  expires_atNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  maker_gives_resources_hash?: InputMaybe<Scalars['felt252']['input']>;
  maker_gives_resources_hashEQ?: InputMaybe<Scalars['felt252']['input']>;
  maker_gives_resources_hashGT?: InputMaybe<Scalars['felt252']['input']>;
  maker_gives_resources_hashGTE?: InputMaybe<Scalars['felt252']['input']>;
  maker_gives_resources_hashIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  maker_gives_resources_hashLIKE?: InputMaybe<Scalars['felt252']['input']>;
  maker_gives_resources_hashLT?: InputMaybe<Scalars['felt252']['input']>;
  maker_gives_resources_hashLTE?: InputMaybe<Scalars['felt252']['input']>;
  maker_gives_resources_hashNEQ?: InputMaybe<Scalars['felt252']['input']>;
  maker_gives_resources_hashNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  maker_gives_resources_hashNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  maker_gives_resources_id?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_idEQ?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_idGT?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_idGTE?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  maker_gives_resources_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_idLT?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_idLTE?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  maker_gives_resources_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_origin_id?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_origin_idEQ?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_origin_idGT?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_origin_idGTE?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_origin_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  maker_gives_resources_origin_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_origin_idLT?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_origin_idLTE?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_origin_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_origin_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  maker_gives_resources_origin_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  maker_gives_resources_weight?: InputMaybe<Scalars['u128']['input']>;
  maker_gives_resources_weightEQ?: InputMaybe<Scalars['u128']['input']>;
  maker_gives_resources_weightGT?: InputMaybe<Scalars['u128']['input']>;
  maker_gives_resources_weightGTE?: InputMaybe<Scalars['u128']['input']>;
  maker_gives_resources_weightIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  maker_gives_resources_weightLIKE?: InputMaybe<Scalars['u128']['input']>;
  maker_gives_resources_weightLT?: InputMaybe<Scalars['u128']['input']>;
  maker_gives_resources_weightLTE?: InputMaybe<Scalars['u128']['input']>;
  maker_gives_resources_weightNEQ?: InputMaybe<Scalars['u128']['input']>;
  maker_gives_resources_weightNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  maker_gives_resources_weightNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  maker_id?: InputMaybe<Scalars['u32']['input']>;
  maker_idEQ?: InputMaybe<Scalars['u32']['input']>;
  maker_idGT?: InputMaybe<Scalars['u32']['input']>;
  maker_idGTE?: InputMaybe<Scalars['u32']['input']>;
  maker_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  maker_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  maker_idLT?: InputMaybe<Scalars['u32']['input']>;
  maker_idLTE?: InputMaybe<Scalars['u32']['input']>;
  maker_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  maker_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  maker_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_hash?: InputMaybe<Scalars['felt252']['input']>;
  taker_gives_resources_hashEQ?: InputMaybe<Scalars['felt252']['input']>;
  taker_gives_resources_hashGT?: InputMaybe<Scalars['felt252']['input']>;
  taker_gives_resources_hashGTE?: InputMaybe<Scalars['felt252']['input']>;
  taker_gives_resources_hashIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  taker_gives_resources_hashLIKE?: InputMaybe<Scalars['felt252']['input']>;
  taker_gives_resources_hashLT?: InputMaybe<Scalars['felt252']['input']>;
  taker_gives_resources_hashLTE?: InputMaybe<Scalars['felt252']['input']>;
  taker_gives_resources_hashNEQ?: InputMaybe<Scalars['felt252']['input']>;
  taker_gives_resources_hashNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  taker_gives_resources_hashNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  taker_gives_resources_id?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_idEQ?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_idGT?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_idGTE?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  taker_gives_resources_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_idLT?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_idLTE?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  taker_gives_resources_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_origin_id?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_origin_idEQ?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_origin_idGT?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_origin_idGTE?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_origin_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  taker_gives_resources_origin_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_origin_idLT?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_origin_idLTE?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_origin_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_origin_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  taker_gives_resources_origin_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  taker_gives_resources_weight?: InputMaybe<Scalars['u128']['input']>;
  taker_gives_resources_weightEQ?: InputMaybe<Scalars['u128']['input']>;
  taker_gives_resources_weightGT?: InputMaybe<Scalars['u128']['input']>;
  taker_gives_resources_weightGTE?: InputMaybe<Scalars['u128']['input']>;
  taker_gives_resources_weightIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  taker_gives_resources_weightLIKE?: InputMaybe<Scalars['u128']['input']>;
  taker_gives_resources_weightLT?: InputMaybe<Scalars['u128']['input']>;
  taker_gives_resources_weightLTE?: InputMaybe<Scalars['u128']['input']>;
  taker_gives_resources_weightNEQ?: InputMaybe<Scalars['u128']['input']>;
  taker_gives_resources_weightNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  taker_gives_resources_weightNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  taker_id?: InputMaybe<Scalars['u32']['input']>;
  taker_idEQ?: InputMaybe<Scalars['u32']['input']>;
  taker_idGT?: InputMaybe<Scalars['u32']['input']>;
  taker_idGTE?: InputMaybe<Scalars['u32']['input']>;
  taker_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  taker_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  taker_idLT?: InputMaybe<Scalars['u32']['input']>;
  taker_idLTE?: InputMaybe<Scalars['u32']['input']>;
  taker_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  taker_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  taker_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  trade_id?: InputMaybe<Scalars['u32']['input']>;
  trade_idEQ?: InputMaybe<Scalars['u32']['input']>;
  trade_idGT?: InputMaybe<Scalars['u32']['input']>;
  trade_idGTE?: InputMaybe<Scalars['u32']['input']>;
  trade_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  trade_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  trade_idLT?: InputMaybe<Scalars['u32']['input']>;
  trade_idLTE?: InputMaybe<Scalars['u32']['input']>;
  trade_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  trade_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  trade_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
};

export type S0_Eternum_Transfer = {
  __typename?: 's0_eternum_Transfer';
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  recipient_entity_id?: Maybe<Scalars['u32']['output']>;
  resources?: Maybe<Array<Maybe<S0_Eternum_U8u128>>>;
  sender_entity_id?: Maybe<Scalars['u32']['output']>;
  sending_realm_id?: Maybe<Scalars['u32']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_TransferConnection = {
  __typename?: 's0_eternum_TransferConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_TransferEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_TransferEdge = {
  __typename?: 's0_eternum_TransferEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Transfer>;
};

export type S0_Eternum_TransferOrder = {
  direction: OrderDirection;
  field: S0_Eternum_TransferOrderField;
};

export enum S0_Eternum_TransferOrderField {
  RecipientEntityId = 'RECIPIENT_ENTITY_ID',
  Resources = 'RESOURCES',
  SenderEntityId = 'SENDER_ENTITY_ID',
  SendingRealmId = 'SENDING_REALM_ID',
  Timestamp = 'TIMESTAMP'
}

export type S0_Eternum_TransferWhereInput = {
  recipient_entity_id?: InputMaybe<Scalars['u32']['input']>;
  recipient_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  recipient_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  recipient_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  recipient_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  recipient_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  recipient_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  recipient_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  recipient_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  recipient_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  recipient_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  sender_entity_id?: InputMaybe<Scalars['u32']['input']>;
  sender_entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  sender_entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  sender_entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  sender_entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  sender_entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  sender_entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  sender_entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  sender_entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  sender_entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  sender_entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  sending_realm_id?: InputMaybe<Scalars['u32']['input']>;
  sending_realm_idEQ?: InputMaybe<Scalars['u32']['input']>;
  sending_realm_idGT?: InputMaybe<Scalars['u32']['input']>;
  sending_realm_idGTE?: InputMaybe<Scalars['u32']['input']>;
  sending_realm_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  sending_realm_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  sending_realm_idLT?: InputMaybe<Scalars['u32']['input']>;
  sending_realm_idLTE?: InputMaybe<Scalars['u32']['input']>;
  sending_realm_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  sending_realm_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  sending_realm_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_Travel = {
  __typename?: 's0_eternum_Travel';
  destination_coord_x?: Maybe<Scalars['u32']['output']>;
  destination_coord_y?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  owner?: Maybe<Scalars['ContractAddress']['output']>;
  timestamp?: Maybe<Scalars['u64']['output']>;
  travel_path?: Maybe<Array<Maybe<S0_Eternum_Coord>>>;
  travel_time?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_TravelConnection = {
  __typename?: 's0_eternum_TravelConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_TravelEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_TravelEdge = {
  __typename?: 's0_eternum_TravelEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Travel>;
};

export type S0_Eternum_TravelFoodCostConfig = {
  __typename?: 's0_eternum_TravelFoodCostConfig';
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  explore_fish_burn_amount?: Maybe<Scalars['u128']['output']>;
  explore_wheat_burn_amount?: Maybe<Scalars['u128']['output']>;
  travel_fish_burn_amount?: Maybe<Scalars['u128']['output']>;
  travel_wheat_burn_amount?: Maybe<Scalars['u128']['output']>;
  unit_type?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_TravelFoodCostConfigConnection = {
  __typename?: 's0_eternum_TravelFoodCostConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_TravelFoodCostConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_TravelFoodCostConfigEdge = {
  __typename?: 's0_eternum_TravelFoodCostConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_TravelFoodCostConfig>;
};

export type S0_Eternum_TravelFoodCostConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_TravelFoodCostConfigOrderField;
};

export enum S0_Eternum_TravelFoodCostConfigOrderField {
  ConfigId = 'CONFIG_ID',
  ExploreFishBurnAmount = 'EXPLORE_FISH_BURN_AMOUNT',
  ExploreWheatBurnAmount = 'EXPLORE_WHEAT_BURN_AMOUNT',
  TravelFishBurnAmount = 'TRAVEL_FISH_BURN_AMOUNT',
  TravelWheatBurnAmount = 'TRAVEL_WHEAT_BURN_AMOUNT',
  UnitType = 'UNIT_TYPE'
}

export type S0_Eternum_TravelFoodCostConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  explore_fish_burn_amount?: InputMaybe<Scalars['u128']['input']>;
  explore_fish_burn_amountEQ?: InputMaybe<Scalars['u128']['input']>;
  explore_fish_burn_amountGT?: InputMaybe<Scalars['u128']['input']>;
  explore_fish_burn_amountGTE?: InputMaybe<Scalars['u128']['input']>;
  explore_fish_burn_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  explore_fish_burn_amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  explore_fish_burn_amountLT?: InputMaybe<Scalars['u128']['input']>;
  explore_fish_burn_amountLTE?: InputMaybe<Scalars['u128']['input']>;
  explore_fish_burn_amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  explore_fish_burn_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  explore_fish_burn_amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  explore_wheat_burn_amount?: InputMaybe<Scalars['u128']['input']>;
  explore_wheat_burn_amountEQ?: InputMaybe<Scalars['u128']['input']>;
  explore_wheat_burn_amountGT?: InputMaybe<Scalars['u128']['input']>;
  explore_wheat_burn_amountGTE?: InputMaybe<Scalars['u128']['input']>;
  explore_wheat_burn_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  explore_wheat_burn_amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  explore_wheat_burn_amountLT?: InputMaybe<Scalars['u128']['input']>;
  explore_wheat_burn_amountLTE?: InputMaybe<Scalars['u128']['input']>;
  explore_wheat_burn_amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  explore_wheat_burn_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  explore_wheat_burn_amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  travel_fish_burn_amount?: InputMaybe<Scalars['u128']['input']>;
  travel_fish_burn_amountEQ?: InputMaybe<Scalars['u128']['input']>;
  travel_fish_burn_amountGT?: InputMaybe<Scalars['u128']['input']>;
  travel_fish_burn_amountGTE?: InputMaybe<Scalars['u128']['input']>;
  travel_fish_burn_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  travel_fish_burn_amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  travel_fish_burn_amountLT?: InputMaybe<Scalars['u128']['input']>;
  travel_fish_burn_amountLTE?: InputMaybe<Scalars['u128']['input']>;
  travel_fish_burn_amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  travel_fish_burn_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  travel_fish_burn_amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  travel_wheat_burn_amount?: InputMaybe<Scalars['u128']['input']>;
  travel_wheat_burn_amountEQ?: InputMaybe<Scalars['u128']['input']>;
  travel_wheat_burn_amountGT?: InputMaybe<Scalars['u128']['input']>;
  travel_wheat_burn_amountGTE?: InputMaybe<Scalars['u128']['input']>;
  travel_wheat_burn_amountIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  travel_wheat_burn_amountLIKE?: InputMaybe<Scalars['u128']['input']>;
  travel_wheat_burn_amountLT?: InputMaybe<Scalars['u128']['input']>;
  travel_wheat_burn_amountLTE?: InputMaybe<Scalars['u128']['input']>;
  travel_wheat_burn_amountNEQ?: InputMaybe<Scalars['u128']['input']>;
  travel_wheat_burn_amountNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  travel_wheat_burn_amountNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
  unit_type?: InputMaybe<Scalars['u8']['input']>;
  unit_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  unit_typeGT?: InputMaybe<Scalars['u8']['input']>;
  unit_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  unit_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  unit_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  unit_typeLT?: InputMaybe<Scalars['u8']['input']>;
  unit_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  unit_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  unit_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  unit_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_TravelOrder = {
  direction: OrderDirection;
  field: S0_Eternum_TravelOrderField;
};

export enum S0_Eternum_TravelOrderField {
  DestinationCoordX = 'DESTINATION_COORD_X',
  DestinationCoordY = 'DESTINATION_COORD_Y',
  EntityId = 'ENTITY_ID',
  Owner = 'OWNER',
  Timestamp = 'TIMESTAMP',
  TravelPath = 'TRAVEL_PATH',
  TravelTime = 'TRAVEL_TIME'
}

export type S0_Eternum_TravelStaminaCostConfig = {
  __typename?: 's0_eternum_TravelStaminaCostConfig';
  config_id?: Maybe<Scalars['u32']['output']>;
  cost?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  travel_type?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_TravelStaminaCostConfigConnection = {
  __typename?: 's0_eternum_TravelStaminaCostConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_TravelStaminaCostConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_TravelStaminaCostConfigEdge = {
  __typename?: 's0_eternum_TravelStaminaCostConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_TravelStaminaCostConfig>;
};

export type S0_Eternum_TravelStaminaCostConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_TravelStaminaCostConfigOrderField;
};

export enum S0_Eternum_TravelStaminaCostConfigOrderField {
  ConfigId = 'CONFIG_ID',
  Cost = 'COST',
  TravelType = 'TRAVEL_TYPE'
}

export type S0_Eternum_TravelStaminaCostConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  cost?: InputMaybe<Scalars['u16']['input']>;
  costEQ?: InputMaybe<Scalars['u16']['input']>;
  costGT?: InputMaybe<Scalars['u16']['input']>;
  costGTE?: InputMaybe<Scalars['u16']['input']>;
  costIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  costLIKE?: InputMaybe<Scalars['u16']['input']>;
  costLT?: InputMaybe<Scalars['u16']['input']>;
  costLTE?: InputMaybe<Scalars['u16']['input']>;
  costNEQ?: InputMaybe<Scalars['u16']['input']>;
  costNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  costNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  travel_type?: InputMaybe<Scalars['u8']['input']>;
  travel_typeEQ?: InputMaybe<Scalars['u8']['input']>;
  travel_typeGT?: InputMaybe<Scalars['u8']['input']>;
  travel_typeGTE?: InputMaybe<Scalars['u8']['input']>;
  travel_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  travel_typeLIKE?: InputMaybe<Scalars['u8']['input']>;
  travel_typeLT?: InputMaybe<Scalars['u8']['input']>;
  travel_typeLTE?: InputMaybe<Scalars['u8']['input']>;
  travel_typeNEQ?: InputMaybe<Scalars['u8']['input']>;
  travel_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  travel_typeNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_TravelWhereInput = {
  destination_coord_x?: InputMaybe<Scalars['u32']['input']>;
  destination_coord_xEQ?: InputMaybe<Scalars['u32']['input']>;
  destination_coord_xGT?: InputMaybe<Scalars['u32']['input']>;
  destination_coord_xGTE?: InputMaybe<Scalars['u32']['input']>;
  destination_coord_xIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  destination_coord_xLIKE?: InputMaybe<Scalars['u32']['input']>;
  destination_coord_xLT?: InputMaybe<Scalars['u32']['input']>;
  destination_coord_xLTE?: InputMaybe<Scalars['u32']['input']>;
  destination_coord_xNEQ?: InputMaybe<Scalars['u32']['input']>;
  destination_coord_xNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  destination_coord_xNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  destination_coord_y?: InputMaybe<Scalars['u32']['input']>;
  destination_coord_yEQ?: InputMaybe<Scalars['u32']['input']>;
  destination_coord_yGT?: InputMaybe<Scalars['u32']['input']>;
  destination_coord_yGTE?: InputMaybe<Scalars['u32']['input']>;
  destination_coord_yIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  destination_coord_yLIKE?: InputMaybe<Scalars['u32']['input']>;
  destination_coord_yLT?: InputMaybe<Scalars['u32']['input']>;
  destination_coord_yLTE?: InputMaybe<Scalars['u32']['input']>;
  destination_coord_yNEQ?: InputMaybe<Scalars['u32']['input']>;
  destination_coord_yNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  destination_coord_yNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  owner?: InputMaybe<Scalars['ContractAddress']['input']>;
  ownerEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  ownerGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  ownerGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  ownerIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  ownerLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  ownerLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  ownerLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  ownerNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  ownerNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  ownerNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  timestamp?: InputMaybe<Scalars['u64']['input']>;
  timestampEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampGT?: InputMaybe<Scalars['u64']['input']>;
  timestampGTE?: InputMaybe<Scalars['u64']['input']>;
  timestampIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampLIKE?: InputMaybe<Scalars['u64']['input']>;
  timestampLT?: InputMaybe<Scalars['u64']['input']>;
  timestampLTE?: InputMaybe<Scalars['u64']['input']>;
  timestampNEQ?: InputMaybe<Scalars['u64']['input']>;
  timestampNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timestampNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  travel_time?: InputMaybe<Scalars['u64']['input']>;
  travel_timeEQ?: InputMaybe<Scalars['u64']['input']>;
  travel_timeGT?: InputMaybe<Scalars['u64']['input']>;
  travel_timeGTE?: InputMaybe<Scalars['u64']['input']>;
  travel_timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  travel_timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  travel_timeLT?: InputMaybe<Scalars['u64']['input']>;
  travel_timeLTE?: InputMaybe<Scalars['u64']['input']>;
  travel_timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  travel_timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  travel_timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_TroopConfig = {
  __typename?: 's0_eternum_TroopConfig';
  advantage_percent?: Maybe<Scalars['u16']['output']>;
  army_extra_per_building?: Maybe<Scalars['u8']['output']>;
  army_free_per_structure?: Maybe<Scalars['u8']['output']>;
  army_max_per_structure?: Maybe<Scalars['u8']['output']>;
  battle_leave_slash_denom?: Maybe<Scalars['u8']['output']>;
  battle_leave_slash_num?: Maybe<Scalars['u8']['output']>;
  battle_max_time_seconds?: Maybe<Scalars['u64']['output']>;
  battle_time_scale?: Maybe<Scalars['u16']['output']>;
  config_id?: Maybe<Scalars['u32']['output']>;
  crossbowman_strength?: Maybe<Scalars['u16']['output']>;
  disadvantage_percent?: Maybe<Scalars['u16']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  health?: Maybe<Scalars['u32']['output']>;
  knight_strength?: Maybe<Scalars['u8']['output']>;
  max_troop_count?: Maybe<Scalars['u64']['output']>;
  paladin_strength?: Maybe<Scalars['u8']['output']>;
  pillage_health_divisor?: Maybe<Scalars['u8']['output']>;
};

export type S0_Eternum_TroopConfigConnection = {
  __typename?: 's0_eternum_TroopConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_TroopConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_TroopConfigEdge = {
  __typename?: 's0_eternum_TroopConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_TroopConfig>;
};

export type S0_Eternum_TroopConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_TroopConfigOrderField;
};

export enum S0_Eternum_TroopConfigOrderField {
  AdvantagePercent = 'ADVANTAGE_PERCENT',
  ArmyExtraPerBuilding = 'ARMY_EXTRA_PER_BUILDING',
  ArmyFreePerStructure = 'ARMY_FREE_PER_STRUCTURE',
  ArmyMaxPerStructure = 'ARMY_MAX_PER_STRUCTURE',
  BattleLeaveSlashDenom = 'BATTLE_LEAVE_SLASH_DENOM',
  BattleLeaveSlashNum = 'BATTLE_LEAVE_SLASH_NUM',
  BattleMaxTimeSeconds = 'BATTLE_MAX_TIME_SECONDS',
  BattleTimeScale = 'BATTLE_TIME_SCALE',
  ConfigId = 'CONFIG_ID',
  CrossbowmanStrength = 'CROSSBOWMAN_STRENGTH',
  DisadvantagePercent = 'DISADVANTAGE_PERCENT',
  Health = 'HEALTH',
  KnightStrength = 'KNIGHT_STRENGTH',
  MaxTroopCount = 'MAX_TROOP_COUNT',
  PaladinStrength = 'PALADIN_STRENGTH',
  PillageHealthDivisor = 'PILLAGE_HEALTH_DIVISOR'
}

export type S0_Eternum_TroopConfigWhereInput = {
  advantage_percent?: InputMaybe<Scalars['u16']['input']>;
  advantage_percentEQ?: InputMaybe<Scalars['u16']['input']>;
  advantage_percentGT?: InputMaybe<Scalars['u16']['input']>;
  advantage_percentGTE?: InputMaybe<Scalars['u16']['input']>;
  advantage_percentIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  advantage_percentLIKE?: InputMaybe<Scalars['u16']['input']>;
  advantage_percentLT?: InputMaybe<Scalars['u16']['input']>;
  advantage_percentLTE?: InputMaybe<Scalars['u16']['input']>;
  advantage_percentNEQ?: InputMaybe<Scalars['u16']['input']>;
  advantage_percentNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  advantage_percentNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  army_extra_per_building?: InputMaybe<Scalars['u8']['input']>;
  army_extra_per_buildingEQ?: InputMaybe<Scalars['u8']['input']>;
  army_extra_per_buildingGT?: InputMaybe<Scalars['u8']['input']>;
  army_extra_per_buildingGTE?: InputMaybe<Scalars['u8']['input']>;
  army_extra_per_buildingIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  army_extra_per_buildingLIKE?: InputMaybe<Scalars['u8']['input']>;
  army_extra_per_buildingLT?: InputMaybe<Scalars['u8']['input']>;
  army_extra_per_buildingLTE?: InputMaybe<Scalars['u8']['input']>;
  army_extra_per_buildingNEQ?: InputMaybe<Scalars['u8']['input']>;
  army_extra_per_buildingNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  army_extra_per_buildingNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  army_free_per_structure?: InputMaybe<Scalars['u8']['input']>;
  army_free_per_structureEQ?: InputMaybe<Scalars['u8']['input']>;
  army_free_per_structureGT?: InputMaybe<Scalars['u8']['input']>;
  army_free_per_structureGTE?: InputMaybe<Scalars['u8']['input']>;
  army_free_per_structureIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  army_free_per_structureLIKE?: InputMaybe<Scalars['u8']['input']>;
  army_free_per_structureLT?: InputMaybe<Scalars['u8']['input']>;
  army_free_per_structureLTE?: InputMaybe<Scalars['u8']['input']>;
  army_free_per_structureNEQ?: InputMaybe<Scalars['u8']['input']>;
  army_free_per_structureNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  army_free_per_structureNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  army_max_per_structure?: InputMaybe<Scalars['u8']['input']>;
  army_max_per_structureEQ?: InputMaybe<Scalars['u8']['input']>;
  army_max_per_structureGT?: InputMaybe<Scalars['u8']['input']>;
  army_max_per_structureGTE?: InputMaybe<Scalars['u8']['input']>;
  army_max_per_structureIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  army_max_per_structureLIKE?: InputMaybe<Scalars['u8']['input']>;
  army_max_per_structureLT?: InputMaybe<Scalars['u8']['input']>;
  army_max_per_structureLTE?: InputMaybe<Scalars['u8']['input']>;
  army_max_per_structureNEQ?: InputMaybe<Scalars['u8']['input']>;
  army_max_per_structureNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  army_max_per_structureNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_denom?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_denomEQ?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_denomGT?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_denomGTE?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_denomIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  battle_leave_slash_denomLIKE?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_denomLT?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_denomLTE?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_denomNEQ?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_denomNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  battle_leave_slash_denomNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_num?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_numEQ?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_numGT?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_numGTE?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_numIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  battle_leave_slash_numLIKE?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_numLT?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_numLTE?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_numNEQ?: InputMaybe<Scalars['u8']['input']>;
  battle_leave_slash_numNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  battle_leave_slash_numNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  battle_max_time_seconds?: InputMaybe<Scalars['u64']['input']>;
  battle_max_time_secondsEQ?: InputMaybe<Scalars['u64']['input']>;
  battle_max_time_secondsGT?: InputMaybe<Scalars['u64']['input']>;
  battle_max_time_secondsGTE?: InputMaybe<Scalars['u64']['input']>;
  battle_max_time_secondsIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  battle_max_time_secondsLIKE?: InputMaybe<Scalars['u64']['input']>;
  battle_max_time_secondsLT?: InputMaybe<Scalars['u64']['input']>;
  battle_max_time_secondsLTE?: InputMaybe<Scalars['u64']['input']>;
  battle_max_time_secondsNEQ?: InputMaybe<Scalars['u64']['input']>;
  battle_max_time_secondsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  battle_max_time_secondsNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  battle_time_scale?: InputMaybe<Scalars['u16']['input']>;
  battle_time_scaleEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_time_scaleGT?: InputMaybe<Scalars['u16']['input']>;
  battle_time_scaleGTE?: InputMaybe<Scalars['u16']['input']>;
  battle_time_scaleIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_time_scaleLIKE?: InputMaybe<Scalars['u16']['input']>;
  battle_time_scaleLT?: InputMaybe<Scalars['u16']['input']>;
  battle_time_scaleLTE?: InputMaybe<Scalars['u16']['input']>;
  battle_time_scaleNEQ?: InputMaybe<Scalars['u16']['input']>;
  battle_time_scaleNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  battle_time_scaleNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  crossbowman_strength?: InputMaybe<Scalars['u16']['input']>;
  crossbowman_strengthEQ?: InputMaybe<Scalars['u16']['input']>;
  crossbowman_strengthGT?: InputMaybe<Scalars['u16']['input']>;
  crossbowman_strengthGTE?: InputMaybe<Scalars['u16']['input']>;
  crossbowman_strengthIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  crossbowman_strengthLIKE?: InputMaybe<Scalars['u16']['input']>;
  crossbowman_strengthLT?: InputMaybe<Scalars['u16']['input']>;
  crossbowman_strengthLTE?: InputMaybe<Scalars['u16']['input']>;
  crossbowman_strengthNEQ?: InputMaybe<Scalars['u16']['input']>;
  crossbowman_strengthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  crossbowman_strengthNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  disadvantage_percent?: InputMaybe<Scalars['u16']['input']>;
  disadvantage_percentEQ?: InputMaybe<Scalars['u16']['input']>;
  disadvantage_percentGT?: InputMaybe<Scalars['u16']['input']>;
  disadvantage_percentGTE?: InputMaybe<Scalars['u16']['input']>;
  disadvantage_percentIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  disadvantage_percentLIKE?: InputMaybe<Scalars['u16']['input']>;
  disadvantage_percentLT?: InputMaybe<Scalars['u16']['input']>;
  disadvantage_percentLTE?: InputMaybe<Scalars['u16']['input']>;
  disadvantage_percentNEQ?: InputMaybe<Scalars['u16']['input']>;
  disadvantage_percentNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  disadvantage_percentNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  health?: InputMaybe<Scalars['u32']['input']>;
  healthEQ?: InputMaybe<Scalars['u32']['input']>;
  healthGT?: InputMaybe<Scalars['u32']['input']>;
  healthGTE?: InputMaybe<Scalars['u32']['input']>;
  healthIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  healthLIKE?: InputMaybe<Scalars['u32']['input']>;
  healthLT?: InputMaybe<Scalars['u32']['input']>;
  healthLTE?: InputMaybe<Scalars['u32']['input']>;
  healthNEQ?: InputMaybe<Scalars['u32']['input']>;
  healthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  healthNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  knight_strength?: InputMaybe<Scalars['u8']['input']>;
  knight_strengthEQ?: InputMaybe<Scalars['u8']['input']>;
  knight_strengthGT?: InputMaybe<Scalars['u8']['input']>;
  knight_strengthGTE?: InputMaybe<Scalars['u8']['input']>;
  knight_strengthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  knight_strengthLIKE?: InputMaybe<Scalars['u8']['input']>;
  knight_strengthLT?: InputMaybe<Scalars['u8']['input']>;
  knight_strengthLTE?: InputMaybe<Scalars['u8']['input']>;
  knight_strengthNEQ?: InputMaybe<Scalars['u8']['input']>;
  knight_strengthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  knight_strengthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  max_troop_count?: InputMaybe<Scalars['u64']['input']>;
  max_troop_countEQ?: InputMaybe<Scalars['u64']['input']>;
  max_troop_countGT?: InputMaybe<Scalars['u64']['input']>;
  max_troop_countGTE?: InputMaybe<Scalars['u64']['input']>;
  max_troop_countIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  max_troop_countLIKE?: InputMaybe<Scalars['u64']['input']>;
  max_troop_countLT?: InputMaybe<Scalars['u64']['input']>;
  max_troop_countLTE?: InputMaybe<Scalars['u64']['input']>;
  max_troop_countNEQ?: InputMaybe<Scalars['u64']['input']>;
  max_troop_countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  max_troop_countNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  paladin_strength?: InputMaybe<Scalars['u8']['input']>;
  paladin_strengthEQ?: InputMaybe<Scalars['u8']['input']>;
  paladin_strengthGT?: InputMaybe<Scalars['u8']['input']>;
  paladin_strengthGTE?: InputMaybe<Scalars['u8']['input']>;
  paladin_strengthIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  paladin_strengthLIKE?: InputMaybe<Scalars['u8']['input']>;
  paladin_strengthLT?: InputMaybe<Scalars['u8']['input']>;
  paladin_strengthLTE?: InputMaybe<Scalars['u8']['input']>;
  paladin_strengthNEQ?: InputMaybe<Scalars['u8']['input']>;
  paladin_strengthNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  paladin_strengthNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  pillage_health_divisor?: InputMaybe<Scalars['u8']['input']>;
  pillage_health_divisorEQ?: InputMaybe<Scalars['u8']['input']>;
  pillage_health_divisorGT?: InputMaybe<Scalars['u8']['input']>;
  pillage_health_divisorGTE?: InputMaybe<Scalars['u8']['input']>;
  pillage_health_divisorIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  pillage_health_divisorLIKE?: InputMaybe<Scalars['u8']['input']>;
  pillage_health_divisorLT?: InputMaybe<Scalars['u8']['input']>;
  pillage_health_divisorLTE?: InputMaybe<Scalars['u8']['input']>;
  pillage_health_divisorNEQ?: InputMaybe<Scalars['u8']['input']>;
  pillage_health_divisorNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  pillage_health_divisorNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
};

export type S0_Eternum_Troops = {
  __typename?: 's0_eternum_Troops';
  crossbowman_count?: Maybe<Scalars['u64']['output']>;
  knight_count?: Maybe<Scalars['u64']['output']>;
  paladin_count?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_TrophyCreation = {
  __typename?: 's0_eternum_TrophyCreation';
  data?: Maybe<Scalars['ByteArray']['output']>;
  description?: Maybe<Scalars['ByteArray']['output']>;
  end?: Maybe<Scalars['u64']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  group?: Maybe<Scalars['felt252']['output']>;
  hidden?: Maybe<Scalars['bool']['output']>;
  icon?: Maybe<Scalars['felt252']['output']>;
  id?: Maybe<Scalars['felt252']['output']>;
  index?: Maybe<Scalars['u8']['output']>;
  points?: Maybe<Scalars['u16']['output']>;
  start?: Maybe<Scalars['u64']['output']>;
  tasks?: Maybe<Array<Maybe<S0_Eternum_Task>>>;
  title?: Maybe<Scalars['felt252']['output']>;
};

export type S0_Eternum_TrophyCreationConnection = {
  __typename?: 's0_eternum_TrophyCreationConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_TrophyCreationEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_TrophyCreationEdge = {
  __typename?: 's0_eternum_TrophyCreationEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_TrophyCreation>;
};

export type S0_Eternum_TrophyCreationOrder = {
  direction: OrderDirection;
  field: S0_Eternum_TrophyCreationOrderField;
};

export enum S0_Eternum_TrophyCreationOrderField {
  Data = 'DATA',
  Description = 'DESCRIPTION',
  End = 'END',
  Group = 'GROUP',
  Hidden = 'HIDDEN',
  Icon = 'ICON',
  Id = 'ID',
  Index = 'INDEX',
  Points = 'POINTS',
  Start = 'START',
  Tasks = 'TASKS',
  Title = 'TITLE'
}

export type S0_Eternum_TrophyCreationWhereInput = {
  data?: InputMaybe<Scalars['ByteArray']['input']>;
  dataEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLT?: InputMaybe<Scalars['ByteArray']['input']>;
  dataLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  dataNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  dataNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  description?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionGTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLT?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionLTE?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['ByteArray']['input']>;
  descriptionNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ByteArray']['input']>>>;
  descriptionNOTLIKE?: InputMaybe<Scalars['ByteArray']['input']>;
  end?: InputMaybe<Scalars['u64']['input']>;
  endEQ?: InputMaybe<Scalars['u64']['input']>;
  endGT?: InputMaybe<Scalars['u64']['input']>;
  endGTE?: InputMaybe<Scalars['u64']['input']>;
  endIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endLIKE?: InputMaybe<Scalars['u64']['input']>;
  endLT?: InputMaybe<Scalars['u64']['input']>;
  endLTE?: InputMaybe<Scalars['u64']['input']>;
  endNEQ?: InputMaybe<Scalars['u64']['input']>;
  endNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  endNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  group?: InputMaybe<Scalars['felt252']['input']>;
  groupEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupGT?: InputMaybe<Scalars['felt252']['input']>;
  groupGTE?: InputMaybe<Scalars['felt252']['input']>;
  groupIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupLIKE?: InputMaybe<Scalars['felt252']['input']>;
  groupLT?: InputMaybe<Scalars['felt252']['input']>;
  groupLTE?: InputMaybe<Scalars['felt252']['input']>;
  groupNEQ?: InputMaybe<Scalars['felt252']['input']>;
  groupNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  groupNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  hidden?: InputMaybe<Scalars['bool']['input']>;
  icon?: InputMaybe<Scalars['felt252']['input']>;
  iconEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconGT?: InputMaybe<Scalars['felt252']['input']>;
  iconGTE?: InputMaybe<Scalars['felt252']['input']>;
  iconIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconLIKE?: InputMaybe<Scalars['felt252']['input']>;
  iconLT?: InputMaybe<Scalars['felt252']['input']>;
  iconLTE?: InputMaybe<Scalars['felt252']['input']>;
  iconNEQ?: InputMaybe<Scalars['felt252']['input']>;
  iconNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  iconNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  id?: InputMaybe<Scalars['felt252']['input']>;
  idEQ?: InputMaybe<Scalars['felt252']['input']>;
  idGT?: InputMaybe<Scalars['felt252']['input']>;
  idGTE?: InputMaybe<Scalars['felt252']['input']>;
  idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  idLT?: InputMaybe<Scalars['felt252']['input']>;
  idLTE?: InputMaybe<Scalars['felt252']['input']>;
  idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  index?: InputMaybe<Scalars['u8']['input']>;
  indexEQ?: InputMaybe<Scalars['u8']['input']>;
  indexGT?: InputMaybe<Scalars['u8']['input']>;
  indexGTE?: InputMaybe<Scalars['u8']['input']>;
  indexIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexLIKE?: InputMaybe<Scalars['u8']['input']>;
  indexLT?: InputMaybe<Scalars['u8']['input']>;
  indexLTE?: InputMaybe<Scalars['u8']['input']>;
  indexNEQ?: InputMaybe<Scalars['u8']['input']>;
  indexNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u8']['input']>>>;
  indexNOTLIKE?: InputMaybe<Scalars['u8']['input']>;
  points?: InputMaybe<Scalars['u16']['input']>;
  pointsEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsGT?: InputMaybe<Scalars['u16']['input']>;
  pointsGTE?: InputMaybe<Scalars['u16']['input']>;
  pointsIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsLIKE?: InputMaybe<Scalars['u16']['input']>;
  pointsLT?: InputMaybe<Scalars['u16']['input']>;
  pointsLTE?: InputMaybe<Scalars['u16']['input']>;
  pointsNEQ?: InputMaybe<Scalars['u16']['input']>;
  pointsNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u16']['input']>>>;
  pointsNOTLIKE?: InputMaybe<Scalars['u16']['input']>;
  start?: InputMaybe<Scalars['u64']['input']>;
  startEQ?: InputMaybe<Scalars['u64']['input']>;
  startGT?: InputMaybe<Scalars['u64']['input']>;
  startGTE?: InputMaybe<Scalars['u64']['input']>;
  startIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startLIKE?: InputMaybe<Scalars['u64']['input']>;
  startLT?: InputMaybe<Scalars['u64']['input']>;
  startLTE?: InputMaybe<Scalars['u64']['input']>;
  startNEQ?: InputMaybe<Scalars['u64']['input']>;
  startNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  startNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
  title?: InputMaybe<Scalars['felt252']['input']>;
  titleEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleGT?: InputMaybe<Scalars['felt252']['input']>;
  titleGTE?: InputMaybe<Scalars['felt252']['input']>;
  titleIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleLIKE?: InputMaybe<Scalars['felt252']['input']>;
  titleLT?: InputMaybe<Scalars['felt252']['input']>;
  titleLTE?: InputMaybe<Scalars['felt252']['input']>;
  titleNEQ?: InputMaybe<Scalars['felt252']['input']>;
  titleNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  titleNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
};

export type S0_Eternum_TrophyProgression = {
  __typename?: 's0_eternum_TrophyProgression';
  count?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  player_id?: Maybe<Scalars['felt252']['output']>;
  task_id?: Maybe<Scalars['felt252']['output']>;
  time?: Maybe<Scalars['u64']['output']>;
};

export type S0_Eternum_TrophyProgressionConnection = {
  __typename?: 's0_eternum_TrophyProgressionConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_TrophyProgressionEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_TrophyProgressionEdge = {
  __typename?: 's0_eternum_TrophyProgressionEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_TrophyProgression>;
};

export type S0_Eternum_TrophyProgressionOrder = {
  direction: OrderDirection;
  field: S0_Eternum_TrophyProgressionOrderField;
};

export enum S0_Eternum_TrophyProgressionOrderField {
  Count = 'COUNT',
  PlayerId = 'PLAYER_ID',
  TaskId = 'TASK_ID',
  Time = 'TIME'
}

export type S0_Eternum_TrophyProgressionWhereInput = {
  count?: InputMaybe<Scalars['u32']['input']>;
  countEQ?: InputMaybe<Scalars['u32']['input']>;
  countGT?: InputMaybe<Scalars['u32']['input']>;
  countGTE?: InputMaybe<Scalars['u32']['input']>;
  countIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countLIKE?: InputMaybe<Scalars['u32']['input']>;
  countLT?: InputMaybe<Scalars['u32']['input']>;
  countLTE?: InputMaybe<Scalars['u32']['input']>;
  countNEQ?: InputMaybe<Scalars['u32']['input']>;
  countNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  countNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  player_id?: InputMaybe<Scalars['felt252']['input']>;
  player_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idGT?: InputMaybe<Scalars['felt252']['input']>;
  player_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  player_idLT?: InputMaybe<Scalars['felt252']['input']>;
  player_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  player_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  player_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  player_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_id?: InputMaybe<Scalars['felt252']['input']>;
  task_idEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idGT?: InputMaybe<Scalars['felt252']['input']>;
  task_idGTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idLIKE?: InputMaybe<Scalars['felt252']['input']>;
  task_idLT?: InputMaybe<Scalars['felt252']['input']>;
  task_idLTE?: InputMaybe<Scalars['felt252']['input']>;
  task_idNEQ?: InputMaybe<Scalars['felt252']['input']>;
  task_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['felt252']['input']>>>;
  task_idNOTLIKE?: InputMaybe<Scalars['felt252']['input']>;
  time?: InputMaybe<Scalars['u64']['input']>;
  timeEQ?: InputMaybe<Scalars['u64']['input']>;
  timeGT?: InputMaybe<Scalars['u64']['input']>;
  timeGTE?: InputMaybe<Scalars['u64']['input']>;
  timeIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeLIKE?: InputMaybe<Scalars['u64']['input']>;
  timeLT?: InputMaybe<Scalars['u64']['input']>;
  timeLTE?: InputMaybe<Scalars['u64']['input']>;
  timeNEQ?: InputMaybe<Scalars['u64']['input']>;
  timeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u64']['input']>>>;
  timeNOTLIKE?: InputMaybe<Scalars['u64']['input']>;
};

export type S0_Eternum_VrfConfig = {
  __typename?: 's0_eternum_VRFConfig';
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  vrf_provider_address?: Maybe<Scalars['ContractAddress']['output']>;
};

export type S0_Eternum_VrfConfigConnection = {
  __typename?: 's0_eternum_VRFConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_VrfConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_VrfConfigEdge = {
  __typename?: 's0_eternum_VRFConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_VrfConfig>;
};

export type S0_Eternum_VrfConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_VrfConfigOrderField;
};

export enum S0_Eternum_VrfConfigOrderField {
  ConfigId = 'CONFIG_ID',
  VrfProviderAddress = 'VRF_PROVIDER_ADDRESS'
}

export type S0_Eternum_VrfConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  vrf_provider_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  vrf_provider_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  vrf_provider_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  vrf_provider_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  vrf_provider_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  vrf_provider_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  vrf_provider_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  vrf_provider_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  vrf_provider_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  vrf_provider_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  vrf_provider_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
};

export type S0_Eternum_Weight = {
  __typename?: 's0_eternum_Weight';
  entity?: Maybe<World__Entity>;
  entity_id?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  value?: Maybe<Scalars['u128']['output']>;
};

export type S0_Eternum_WeightConfig = {
  __typename?: 's0_eternum_WeightConfig';
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  entity_type?: Maybe<Scalars['u32']['output']>;
  eventMessage?: Maybe<World__EventMessage>;
  weight_config_id?: Maybe<Scalars['u32']['output']>;
  weight_gram?: Maybe<Scalars['u128']['output']>;
};

export type S0_Eternum_WeightConfigConnection = {
  __typename?: 's0_eternum_WeightConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_WeightConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_WeightConfigEdge = {
  __typename?: 's0_eternum_WeightConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_WeightConfig>;
};

export type S0_Eternum_WeightConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_WeightConfigOrderField;
};

export enum S0_Eternum_WeightConfigOrderField {
  ConfigId = 'CONFIG_ID',
  EntityType = 'ENTITY_TYPE',
  WeightConfigId = 'WEIGHT_CONFIG_ID',
  WeightGram = 'WEIGHT_GRAM'
}

export type S0_Eternum_WeightConfigWhereInput = {
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_type?: InputMaybe<Scalars['u32']['input']>;
  entity_typeEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_typeGT?: InputMaybe<Scalars['u32']['input']>;
  entity_typeGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_typeIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_typeLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_typeLT?: InputMaybe<Scalars['u32']['input']>;
  entity_typeLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_typeNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_typeNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_typeNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  weight_config_id?: InputMaybe<Scalars['u32']['input']>;
  weight_config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  weight_config_idGT?: InputMaybe<Scalars['u32']['input']>;
  weight_config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  weight_config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  weight_config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  weight_config_idLT?: InputMaybe<Scalars['u32']['input']>;
  weight_config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  weight_config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  weight_config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  weight_config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  weight_gram?: InputMaybe<Scalars['u128']['input']>;
  weight_gramEQ?: InputMaybe<Scalars['u128']['input']>;
  weight_gramGT?: InputMaybe<Scalars['u128']['input']>;
  weight_gramGTE?: InputMaybe<Scalars['u128']['input']>;
  weight_gramIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  weight_gramLIKE?: InputMaybe<Scalars['u128']['input']>;
  weight_gramLT?: InputMaybe<Scalars['u128']['input']>;
  weight_gramLTE?: InputMaybe<Scalars['u128']['input']>;
  weight_gramNEQ?: InputMaybe<Scalars['u128']['input']>;
  weight_gramNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  weight_gramNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type S0_Eternum_WeightConnection = {
  __typename?: 's0_eternum_WeightConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_WeightEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_WeightEdge = {
  __typename?: 's0_eternum_WeightEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_Weight>;
};

export type S0_Eternum_WeightOrder = {
  direction: OrderDirection;
  field: S0_Eternum_WeightOrderField;
};

export enum S0_Eternum_WeightOrderField {
  EntityId = 'ENTITY_ID',
  Value = 'VALUE'
}

export type S0_Eternum_WeightWhereInput = {
  entity_id?: InputMaybe<Scalars['u32']['input']>;
  entity_idEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idGT?: InputMaybe<Scalars['u32']['input']>;
  entity_idGTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  entity_idLT?: InputMaybe<Scalars['u32']['input']>;
  entity_idLTE?: InputMaybe<Scalars['u32']['input']>;
  entity_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  entity_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  entity_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  value?: InputMaybe<Scalars['u128']['input']>;
  valueEQ?: InputMaybe<Scalars['u128']['input']>;
  valueGT?: InputMaybe<Scalars['u128']['input']>;
  valueGTE?: InputMaybe<Scalars['u128']['input']>;
  valueIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  valueLIKE?: InputMaybe<Scalars['u128']['input']>;
  valueLT?: InputMaybe<Scalars['u128']['input']>;
  valueLTE?: InputMaybe<Scalars['u128']['input']>;
  valueNEQ?: InputMaybe<Scalars['u128']['input']>;
  valueNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u128']['input']>>>;
  valueNOTLIKE?: InputMaybe<Scalars['u128']['input']>;
};

export type S0_Eternum_WorldConfig = {
  __typename?: 's0_eternum_WorldConfig';
  admin_address?: Maybe<Scalars['ContractAddress']['output']>;
  config_id?: Maybe<Scalars['u32']['output']>;
  entity?: Maybe<World__Entity>;
  eventMessage?: Maybe<World__EventMessage>;
  realm_l2_contract?: Maybe<Scalars['ContractAddress']['output']>;
};

export type S0_Eternum_WorldConfigConnection = {
  __typename?: 's0_eternum_WorldConfigConnection';
  edges?: Maybe<Array<Maybe<S0_Eternum_WorldConfigEdge>>>;
  pageInfo: World__PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type S0_Eternum_WorldConfigEdge = {
  __typename?: 's0_eternum_WorldConfigEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<S0_Eternum_WorldConfig>;
};

export type S0_Eternum_WorldConfigOrder = {
  direction: OrderDirection;
  field: S0_Eternum_WorldConfigOrderField;
};

export enum S0_Eternum_WorldConfigOrderField {
  AdminAddress = 'ADMIN_ADDRESS',
  ConfigId = 'CONFIG_ID',
  RealmL2Contract = 'REALM_L2_CONTRACT'
}

export type S0_Eternum_WorldConfigWhereInput = {
  admin_address?: InputMaybe<Scalars['ContractAddress']['input']>;
  admin_addressEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  admin_addressGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  admin_addressGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  admin_addressIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  admin_addressLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  admin_addressLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  admin_addressLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  admin_addressNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  admin_addressNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  admin_addressNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  config_id?: InputMaybe<Scalars['u32']['input']>;
  config_idEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idGT?: InputMaybe<Scalars['u32']['input']>;
  config_idGTE?: InputMaybe<Scalars['u32']['input']>;
  config_idIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idLIKE?: InputMaybe<Scalars['u32']['input']>;
  config_idLT?: InputMaybe<Scalars['u32']['input']>;
  config_idLTE?: InputMaybe<Scalars['u32']['input']>;
  config_idNEQ?: InputMaybe<Scalars['u32']['input']>;
  config_idNOTIN?: InputMaybe<Array<InputMaybe<Scalars['u32']['input']>>>;
  config_idNOTLIKE?: InputMaybe<Scalars['u32']['input']>;
  realm_l2_contract?: InputMaybe<Scalars['ContractAddress']['input']>;
  realm_l2_contractEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  realm_l2_contractGT?: InputMaybe<Scalars['ContractAddress']['input']>;
  realm_l2_contractGTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  realm_l2_contractIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  realm_l2_contractLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
  realm_l2_contractLT?: InputMaybe<Scalars['ContractAddress']['input']>;
  realm_l2_contractLTE?: InputMaybe<Scalars['ContractAddress']['input']>;
  realm_l2_contractNEQ?: InputMaybe<Scalars['ContractAddress']['input']>;
  realm_l2_contractNOTIN?: InputMaybe<Array<InputMaybe<Scalars['ContractAddress']['input']>>>;
  realm_l2_contractNOTLIKE?: InputMaybe<Scalars['ContractAddress']['input']>;
};

export type S0_Eternum_U8u128 = {
  __typename?: 's0_eternum_u8u128';
  _0?: Maybe<Scalars['u8']['output']>;
  _1?: Maybe<Scalars['u128']['output']>;
};

export type GetAccountTokensQueryVariables = Exact<{
  address: Scalars['String']['input'];
}>;


export type GetAccountTokensQuery = { __typename?: 'World__Query', tokenBalances?: { __typename?: 'Token__BalanceConnection', edges?: Array<{ __typename?: 'Token__BalanceEdge', node?: { __typename?: 'Token__Balance', tokenMetadata: { __typename: 'ERC20__Token' } | { __typename: 'ERC721__Token', tokenId: string, metadataDescription?: string | null, imagePath: string, contractAddress: string, metadata: string } } | null } | null> | null } | null };

export class TypedDocumentString<TResult, TVariables>
  extends String
  implements DocumentTypeDecoration<TResult, TVariables>
{
  __apiType?: DocumentTypeDecoration<TResult, TVariables>['__apiType'];

  constructor(private value: string, public __meta__?: Record<string, any> | undefined) {
    super(value);
  }

  toString(): string & DocumentTypeDecoration<TResult, TVariables> {
    return this.value;
  }
}

export const GetAccountTokensDocument = new TypedDocumentString(`
    query getAccountTokens($address: String!) {
  tokenBalances(accountAddress: $address, limit: 8000) {
    edges {
      node {
        tokenMetadata {
          __typename
          ... on ERC721__Token {
            tokenId
            metadataDescription
            imagePath
            contractAddress
            metadata
          }
        }
      }
    }
  }
}
    `) as unknown as TypedDocumentString<GetAccountTokensQuery, GetAccountTokensQueryVariables>;