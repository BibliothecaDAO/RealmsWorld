RESERVOIR_API_KEY=test
NEXT_PUBLIC_LOCAL_API=http://localhost:3000/api/
NEXT_PUBLIC_ALCHEMY_API=
NEXT_PUBLIC_IS_TESTNET=false
NEXT_PUBLIC_ETHERSCAN_URL=https://etherscan.io
NEXT_PUBLIC_VOYAGER_URL=https://voyager.online
NEXT_PUBLIC_STARKSCAN_URL=https://starkscan.co
NEXT_PUBLIC_SUBGRAPH_NAME=https://api.thegraph.com/subgraphs/name/redbeardeth/starknet-bridge-mainnet
NEXT_PUBLIC_APIBARA_HANDLE=graphql
NEXT_PUBLIC_REALMS_SUBGRAPH_NAME=https://api.thegraph.com/subgraphs/name/bibliothecaforadventurers/realms
NEXT_PUBLIC_REALMS_BRIDGE_SUBGRAPH_NAME=https://api.studio.thegraph.com/query/73174/realms-bridge-main/version/latest
NEXT_PUBLIC_REALMS_LEGACY_REWARD_SUBGRAPH_NAME=https://api.studio.thegraph.com/query/73174/legacy-rewards-sepolia/version/latest


# @see https://next-auth.js.org/configuration/options#nextauth_url
AUTH_URL='http://localhost:3000'

# You can generate the secret via 'openssl rand -base64 32' on Unix
# @see https://next-auth.js.org/configuration/options#secret
AUTH_SECRET='supersecret'

# Preconfigured Discord OAuth provider, works out-of-the-box
# @see https://next-auth.js.org/providers/discord
AUTH_DISCORD_ID='test'
AUTH_DISCORD_SECRET='test'

# Add the postgres database connection string for l2 collections, auth, and bridging logs
# DATABASE_URL=mysql://USERNAME:pscale_pw_PASSWORD@aws.connect.psdb.cloud/DATABASE_NAME?ssl={"rejectUnauthorized":true}
